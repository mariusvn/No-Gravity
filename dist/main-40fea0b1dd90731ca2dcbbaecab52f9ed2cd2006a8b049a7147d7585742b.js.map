{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./assets/player/Player1.png","webpack:///./src/Tileset.js","webpack:///./src/Scenes/Scene.js","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./assets/tilesets/interface32x.png","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/Event.js","webpack:///./src/Collision.js","webpack:///./src/Tilemap.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/Scenes/GameScene.js","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/test/test-world.csv","webpack:///./src/Scenes/testScene/testScene.js","webpack:///./assets/tilesets/prototype.png","webpack:///./assets/player/prototype.png","webpack:///./src/Loader.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","ticker","add","delta","update","addScene","testScene","MainMenu","activeScene","getScene","Event","isGravityEnabled","gravityForce","Tileset","image","tileSize","this","texture","resources","generateTileSpriteArray","dimensions","Math","floor","x","y","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","Scene","sceneContainer","Container","parentContainer","_parentContainer","scene","_scenes","_activeScene","undefined","onSceneEnd","removeChild","getContainer","onSceneStart","button","setScene","spritesId","onClick","scaleX","scaleY","text","textAttribute","fontFamily","fontSize","fill","align","tilesetimg","sprites","scale","initPos","sprite","tileset","getSprite","position","interactive","on","over","out","click","set","anchor","Text","style","TextStyle","textMetrics","TextMetrics","measureText","textPos","e","isOver","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","abs","Tilemap","map","heightpx","earth","moon","earthTileset","moonTileset","TilesetType","EARTH","lines","tileMap","split","cells","item","Number","tilemap","tileRenderSize","round","generateTilemapContent","events","addEventHandler","switchTileset","console","group","info","table","groupEnd","colliderBox","colliderTilePos","getTileCoord","spriteList","currentTileset","boundingBox","Collision","isOn","container","removeChildren","MOON","containers","keys","tilesetType","tile","tilesets","Entity","gameplayState","_velocity","collider","pos","getPosition","vel","getVelocity","containerWidth","containerHeight","newPosRect","isColliding","onLanded","setPosition","setVelocity","keyboard","isDown","isUp","press","release","downHandler","event","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Player","top","left","right","bottom","playerSprite","player","resizeRatio","playerSize","keysHandlers","jump","startSneack","stopSneack","remainingJumps","isSneaked","maxSpeed","Mob","playerPosition","mobPosition","userPos","frontPositionX","reverse","footPositionY","tilePos","getTile","speed","isTouching","move","Camera","followedContainer","renderer","sceneContainerWidth","followedContainerX","targetPos","screenSize","Trigger","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","UserInterface","GravityIndicator","Graphics","background","beginFill","drawPolygon","Point","endFill","gravityText","gravityValueText","onGravitySwitches","DeathScreen","availableTexts","textStyle","textDims","triggerEvent","startAnim","random","isAnimating","UserInterfaceHandler","uis","ui","GameScene","gravitySwitch","screen","dynamicObjectsMap","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","mob","mob2","userInterface","cameraHandledContainer","camera","assignToContainer","startKeyboardListening","switchGravity","stopKeyboardListening","log","MapRegistry","test","assetsToLoad","prototypeTileset","prototypePlayer","pixiLoader","cb","load","WebFont","google","families","active"],"mappings":"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","file":"main-0d2cd2006.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([22,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport testScene from \"./Scenes/testScene/testScene\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n    //TODO remove frame dependency\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(new testScene(), 'testScene');\n      Game.sceneManager.addScene(new MainMenu(), 'MainMenu');\n      Game.sceneManager.activeScene = 'testScene';\n    });\n\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","import Game from \"./main\";\r\n\r\nexport default class Tileset {\r\n\r\n  texture;\r\n  tileSize;\r\n  tileTextures = [];\r\n\r\n  /**\r\n   * @param {string} image\r\n   * @param {{x: number, y: number}} tileSize\r\n   */\r\n  constructor(image, tileSize) {\r\n    this.texture = Game.app.loader.resources[image].texture;\r\n    this.tileSize = tileSize;\r\n    this.generateTileSpriteArray();\r\n  }\r\n\r\n  generateTileSpriteArray() {\r\n    const dimensions = {\r\n      x: Math.floor(this.texture.width / this.tileSize.x),\r\n      y: Math.floor(this.texture.height / this.tileSize.y)\r\n    };\r\n\r\n    for(let y = 0; y < dimensions.y; y++) {\r\n      for (let x = 0; x < dimensions.x; x++) {\r\n        const rectangle = new PIXI.Rectangle(\r\n          this.tileSize.x * x,\r\n          this.tileSize.y * y,\r\n          this.tileSize.x,\r\n          this.tileSize.y\r\n        );\r\n\r\n        this.texture.frame = rectangle;\r\n        this.tileTextures.push(this.texture.clone());\r\n      }\r\n    }\r\n  }\r\n\r\n  getSprite(index) {\r\n    if (index > this.tileTextures.length) {\r\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\r\n    }\r\n      return new PIXI.Sprite(this.tileTextures[index]);\r\n  }\r\n}\r\n","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","export default __webpack_public_path__ + \"images/9703cb95d0ea129f569e26e4a3fc1dd7.png\";","\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n  }\n\n  /**\n   * @param {Scene} scene\n   * @param {string} name\n   */\n  addScene(scene, name) {\n    this._scenes[name] = scene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenes[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","import Scene from \"../Scene\";\nimport Game from \"root/main.js\";\nimport Tileset from \"root/Tileset\";\nimport tilesetimg from 'assets/tilesets/interface32x.png';\n//import prototypeTileset from 'assets/tilesets/prototype.png';\nexport default class MainMenu extends Scene {\n\n  constructor() {\n    super();\n    let b = new button(this.sceneContainer,[69, 70, 71], setScene, 200, 100, 1, 1);\n  //  this.sceneContainer.addChild(graph);\n  }\n\n\n  update(delta) {\n    super.update(delta);\n\n  }\n\n}\n\nclass tools {\n\n}\n\nfunction cc(){\n  alert(\"cc\")\n}\n\nfunction setScene(){\n  // Game.sceneManager.addScene(new GameScene(), 'GameScene');\n   Game.sceneManager.activeScene = 'testScene';\n}\n\nclass button {\n  tileset = new Tileset(tilesetimg, {x: 32, y: 32});\n  isOver = false;\n  constructor(sceneContainer, spritesId, onClick, x = 0, y = 0, scaleX = 1, scaleY = 1, text = 'start', textAttribute = {fontFamily : 'Arial', fontSize: 15, fill : 0xff1010, align : 'left'} ) {\n    this.sprites = [];\n    this.scale = {x: scaleX, y: scaleY};\n    this.onClick = onClick;\n    let initPos = x;\n    for (var i = 0; i < spritesId.length; i++) {\n      let sprite = this.tileset.getSprite(spritesId[i]);\n      this.sprites.push(sprite);\n      sprite.position.x = x + sprite.width/2;\n      sprite.position.y = y;\n      x += 32;\n      sceneContainer.addChild(sprite);\n      this.sprites[i].interactive = true;\n      this.sprites[i].on(\"pointerover\", this.over.bind(this));\n      this.sprites[i].on(\"pointerout\", this.out.bind(this));\n      this.sprites[i].on(\"click\", this.click.bind(this));\n      this.sprites[i].scale.set(scaleX, scaleY);\n      this.sprites[i].anchor.set(0.5,0);\n   //   this.sprites[i].anchor.set(0.5);\n    }\n    this.text = new PIXI.Text(text,textAttribute);\n    this.text.anchor.set(1,1 );\n    let style = new PIXI.TextStyle(textAttribute);\n    let textMetrics = PIXI.TextMetrics.measureText(text, style)\n    //alert(textMetrics.width);\n    let textPos = {x: initPos + ((((x - initPos)/2)*scaleX) +textMetrics.width/2), y: y + (this.sprites[0].height -  textMetrics.height/2)};// textMetrics.width\n    this.text.position = textPos;\n    sceneContainer.addChild(this.text);\n    //Game.app.stage.on(\"pointermove\", this.mouseMove);\n //   this.sceneContainer.addChild(sprite2);\n   // this.sceneContainer.addChild(sprite[2]);\n  }\n\n  over(e)\n  {\n   //  this.onClick();\n    this.isOver = true;\n    for (var i = 0; i < this.sprites.length; i++) {\n     //   this.sprites[i].anchor.set(0.5,0);\n        this.text.position.y = this.text.position.y +1;\n        this.sprites[i].scale.set(this.scale.x + 0.2, this.scale.y + 0.2);\n      //  this.sprites[i].anchor.set(0);\n    }\n    this.text.scale.set(1);\n\n  }\n\n  out(e)\n  {\n   //  this.onClick();text\n    this.isOver = true;\n    for (var i = 0; i < this.sprites.length; i++) {\n        this.text.position.y = this.text.position.y -1;\n        this.sprites[i].scale.set(this.scale.x, this.scale.y);\n    }\n    this.text.scale.set(1);\n  }\n\n  click(e){\n    if(this.isOver)\n      this.onClick();\n  }\n\n  update(delta) {\n\n  }\n}\n\n//Game.app.stage.interactive = true;","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  tilesets = {\n    earth: new Tileset(earthTileset, {x: 32, y: 32}),\n    moon: new Tileset(moonTileset, {x: 32, y: 32})\n  };\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = this.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        this.onLanded();\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.15)\n            vel.x -= 0.35 * delta;\n          else if (vel.x < -0.15)\n            vel.x += 0.35 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap) {\n    super(tilemap);\n    this.playerSprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.y = 500;\n    this.container.x = 65;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed)\n          vel.x += 0.7 * delta;\n      }\n      if (this.keysHandlers.left.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed)\n          vel.x -= 0.7 * delta;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta;\n      }\n    }\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport player from 'assets/player/Player1.png';\nimport * as Collision from \"root/Collision\";\n\nexport default class Mob extends Entity {\n  sprite;\n  tilemap;\n  reverse = false;\n  speed = 5;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.sprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    const resizeRatio = (tilemap.tileRenderSize * 2) / (this.sprite.height);\n    this.sprite.scale.set(resizeRatio);\n    this.container.y = y;\n    this.container.x = x;\n    this.container.addChild(this.sprite);\n    this.tilemap = tilemap;\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width : userPos.x;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front of knees is filled\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y -1}) !== -1) {\n      // If tile in front of head is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1), y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player)) {\n      //\tconsole.log(\"hit\");\n    }\n    this.move();\n  }\n\n\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity:\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    // TODO test key to trigger death screen animation\n    const a = keyboard('g');\n    a.press = () => {\n      Game.events.triggerEvent('gameplay:death');\n    }\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n      }\n    }\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\n\nexport default class GameScene extends Scene {\n\n  player;\n  mob;\n  tilemap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n\n  /**\n   * @param {MapEntry} map\n   */\n  constructor(map) {\n    super();\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.player = new Player(this.tilemap);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n    }\n\n    window.endTrigger = this.endTrigger;\n    this.mob = new Mob(this.tilemap, 1200, 100);\n    this.mob2 = new Mob(this.tilemap, 100, 100);\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.cameraHandledContainer.addChild(this.mob.container);\n    this.cameraHandledContainer.addChild(this.mob2.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.player.update(delta);\n    this.mob.update(delta, this.player);\n    this.mob2.update(delta, this.player);\n    this.camera.update();\n    this.userInterface.update(delta);\n    this.endTrigger.update();\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end'); \n  }\n}\n\n","import testmapCsv from 'assets/maps/test/test-world.csv';\nimport testDynamicMap from 'assets/maps/test/dynamicMap.json';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  test: {\n    tileMap: testmapCsv,\n    dynamicObjectsMap: testDynamicMap\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {any} dynamicObjectsMap\n */\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,4,5,5,5,6,8,4,5,5,5,5,5,5,6,8,4,5,5,5,5,6,4,5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,4,15,15,16,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,15,15,15,6\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,8,4,15,15,16,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,8,8,8,8,8,8,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,8,8,8,4,15,15,6,9,-1,-1,-1,-1,-1,0,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,0,2,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,15,15,15,16,-1,-1,7,18,1,1,1,1,1,20,4,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,7,9,-1,0,20,4,16,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,7,18,1,20,4,16,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,0,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,7,8,8,4,16,-1,-1,-1,-1,-1,0,20,9,-1,-1,-1,-1,14,15,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,6,4,15,15,15,15,15,15,15,15,15,6\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,14,15,15,16,-1,-1,-1,-1,-1,0,20,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,20,4,16,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,20,4,15,16,-1,-1,-1,-1,0,1,20,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,20,4,16,-1,-1,-1,-1,-1,-1,14,15,6,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,0,2,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,20,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,9,-1,-1,-1,-1,-1,7,18,1,1,20,9,-1,-1,-1,0,1,2,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,20,8,8,8,4,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,14,15,15,15,15,16,-1,-1,-1,7,4,16,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,2,-1,-1,-1,-1,14,15,15,15,15,15,15,15,15,16,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,4,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,20,9,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,4,16,-1,-1,-1,-1,-1,7,18,2,-1,-1,-1,-1,24,-1,-1,-1,-1,24,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,0,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,2,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,20,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,20\\n11,-1,-1,14,15,15,15,16,-1,-1,-1,-1,21,22,22,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,0,1,1,20,8,8,8,18,19,19,19,19,19,19,20,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,5,6\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,7,8,8,8,8,4,15,15,15,15,15,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,22,22,22,22,23,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,4,5,15,15,15,15,15,5,6,19,1,1,1,1,1,2,-1,-1,13,11,-1,-1,-1,-1,-1,-1,14,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,16,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20\\n18,1,1,1,1,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,2,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,0,1,20,8,8,18,2,-1,-1,-1,-1,0,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,1,1,1,1,1,1,1,1,1,20,18,19,19,19,19,19,19,20,18,1,1,1,1,1,1,20,8,8,8,8,8,18,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import GameScene from \"../GameScene\";\r\nimport MapRegistry from \"../../MapRegistry\";\r\n\r\nexport default class testScene extends GameScene {\r\n\r\n  constructor() {\r\n    super(MapRegistry.test);\r\n  }\r\n\r\n\r\n  update(delta) {\r\n    super.update(delta);\r\n  }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"images/22c5f11edadebb669e9464b10c20f3c5.png\";","export default __webpack_public_path__ + \"images/ab913da421ec22a5ad4eb0902f92d892.png\";","import prototypeTileset from 'assets/tilesets/prototype.png';\nimport prototypePlayer from 'assets/player/prototype.png';\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport tilesetimg from 'assets/tilesets/interface32x.png';\nimport player from 'assets/player/Player1.png';\n\nconst assetsToLoad = [\n  prototypeTileset,\n  prototypePlayer,\n  moonTileset,\n  tilesetimg,\n  earthTileset,\n  player\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}