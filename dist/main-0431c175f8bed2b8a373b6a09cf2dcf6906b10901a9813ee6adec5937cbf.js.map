{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/ui/Button.js","webpack:///./src/Scenes/Scene.js","webpack:///./src/Collision.js","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./assets/player/Player1.png","webpack:///./assets/player/Player1-old.png","webpack:///./assets/tilesets/goldCoin1.png","webpack:///./assets/tilesets/laser.png","webpack:///./assets/tilesets/keyboard-layout.png","webpack:///./assets/tilesets/laser-shooter.png","webpack:///./src/Tileset.js","webpack:///./src/Tilemap.js","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Loader.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/Event.js","webpack:///./src/Scenes/howToPlay/howToPlayScene.js","webpack:///./src/Scenes/credits/creditScene.js","webpack:///./src/Scenes/levels/levelsScene.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Animation.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/Laser.js","webpack:///./src/Collectable.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/navigation.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/Scenes/GameScene.js","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/level-1/level-1.csv","webpack:///./src/Scenes/level1/level1.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","renderer","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","Tilemap","tilesets","earth","Tileset","earthTileset","x","y","moon","moonTileset","ticker","add","delta","update","addScene","MainMenu","HowToPlayScene","creditScene","levelsScene","Level1","activeScene","game","getScene","Event","isGravityEnabled","gravityForce","paused","Button","text","undefined","Container","TextStyle","fontFamily","fontSize","fill","Text","_textStyle","Graphics","_container","_background","_text","interactive","on","_onHover","_onHoverEnd","_onClick","scale","set","this","_textMectric","_padding","getRandomInt","padding","Math","floor","random","offsets","clear","beginFill","drawPolygon","Point","endFill","onClick","val","TextMetrics","measureText","_drawBackground","PIXIimport","Scene","sceneContainer","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","abs","image","tileSize","texture","resources","generateTileSpriteArray","dimensions","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","map","heightpx","TilesetType","EARTH","lines","tileMap","split","cells","item","Number","tilemap","tileRenderSize","round","generateTilemapContent","events","addEventHandler","switchTileset","console","group","info","table","groupEnd","colliderBox","colliderTilePos","getTileCoord","sprite","spriteList","currentTileset","boundingBox","Collision","isOn","container","removeChildren","MOON","containers","keys","tilesetType","tile","getSprite","parentContainer","_parentContainer","restartCurrentScene","sceneClass","_scenesClasses","oldActiveScene","_activeScene","_scenes","onSceneEnd","removeChild","getContainer","onSceneStart","assetsToLoad","player","tilecoin","playerOldFrame","laser","laserShooter","keyboardLayout","pixiLoader","cb","load","startButton","screen","startGame","levelsButton","goToLevels","howToPlay","goToHowToPlay","creditsButton","goToCredits","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","align","_textContent","_textMetrics","_keyboardSprite","_mainMenuButton","goToMainMenu","CreditScene","LevelsScene","id","titleMetrics","_title","style","generateMenu","getRedirectFunction","levelId","_levels","levelData","button","Entity","gameplayState","_velocity","collider","landed","pos","getPosition","vel","getVelocity","containerWidth","containerHeight","newPosRect","isColliding","setPosition","setVelocity","onLanded","isLanded","keyboard","isDown","isUp","press","release","downHandler","event","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Animation","texPath","frameSize","animationData","defaultAnim","delay","_animTexture","_frameSize","_currentAnim","_animData","_delay","anim","_frameRect","_setCurrentAnimFrame","_intervalId","setInterval","current","animated","_currentAnimFrame","from","to","loop","tileId","clearInterval","animName","start","Player","top","left","leftQwerty","right","bottom","playerAnimation","playerSprite","resizeRatio","playerSize","anchor","keysHandlers","jump","startSneack","stopSneack","unload","remainingJumps","isSneaked","setCurrentAnimation","maxSpeed","Mob","playerPosition","mobPosition","playerBox","mobBox","userPos","frontPositionX","reverse","footPositionY","tilePos","getTile","speed","isTouching","_canHitPlayer","triggerEvent","move","Camera","followedContainer","sceneContainerWidth","followedContainerX","targetPos","screenSize","Trigger","position","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","Laser","direction","blockSize","pixelSize","laserShooterImg","angle","laserimg","_laserlength","laserHitReg","startInterval","onHit","_active","alpha","Collectable","total","pick","takeCoin","pickup","_pick","log","UserInterface","GravityIndicator","background","gravityText","gravityValueText","onGravitySwitches","DeathScreen","availableTexts","textStyle","textDims","startAnim","isAnimating","Navigation","MainMenuButton","UserInterfaceHandler","uis","ui","GameScene","gravitySwitch","dynamicObjectsMap","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","laserData","lasers","cameraHandledContainer","ennemies","ennemy","mob","mobs","collectables","collectableData","collectable","userInterface","camera","assignToContainer","updateLasers","updateMobs","updateCollectable","startKeyboardListening","switchGravity","stopKeyboardListening","forEach","MapRegistry","level1","WebFont","google","families","active"],"mappings":"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","file":"main-0906b1090.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([32,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\nimport Tileset from \"root/Tileset\";\nimport earthTileset from \"assets/tilesets/earth.png\";\nimport moonTileset from \"assets/tilesets/moon.png\";\nimport Tilemap from \"root/Tilemap\";\nimport Level1 from \"root/Scenes/level1/level1\";\nimport HowToPlayScene from \"root/Scenes/howToPlay/howToPlayScene\";\nimport creditScene from \"root/Scenes/credits/creditScene\";\nimport levelsScene from \"root/Scenes/levels/levelsScene\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2,\n    paused: false,\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    if (Game.app.renderer.height > 500)\n      PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Tilemap.tilesets = {\n        earth: new Tileset(earthTileset, {x: 32, y: 32}),\n        moon: new Tileset(moonTileset, {x: 32, y: 32})\n      };\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(MainMenu, 'MainMenu');\n      Game.sceneManager.addScene(HowToPlayScene, 'HowToPlay');\n      Game.sceneManager.addScene(creditScene, 'credits');\n      Game.sceneManager.addScene(levelsScene, 'levels');\n      Game.sceneManager.addScene(Level1, 'level1');\n      Game.sceneManager.activeScene = 'MainMenu';\n    });\n    window.game = Game;\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","import * as PIXIimport from 'pixi.js';\n\nexport default class Button extends PIXIimport.Container {\n  onClick = undefined;\n\n  _container = new PIXI.Container();\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 45,\n    fill: '0xfff'\n  });\n  _text = new PIXI.Text('', this._textStyle);\n  _textMectric;\n  _background = new PIXI.Graphics();\n  _padding = {\n    x: 90,\n    y: 10\n  }\n\n  constructor(text) {\n    super();\n    this.text = text;\n    this._container.addChild(this._background);\n    this._container.addChild(this._text);\n    this._background.interactive = true;\n    this._background.on('mouseover', this._onHover.bind(this));\n    this._background.on('mouseout', this._onHoverEnd.bind(this));\n    this._background.on('click', this._onClick.bind(this));\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n    this.addChild(this._container);\n  }\n\n  get text() {\n    return this._text.text;\n  }\n\n  set text(val) {\n    this._textMectric = PIXI.TextMetrics.measureText(val, this._textStyle);\n    this._drawBackground();\n    this._text.text = val;\n  }\n\n  _drawBackground() {\n    const width = this._textMectric.width + this._padding.x * 2;\n    const height = this._textMectric.height + this._padding.y * 2;\n    const getRandomInt = (padding) => {\n      padding /= 2;\n      return Math.floor(Math.random() * Math.floor(padding));\n    }\n\n    // Setting text position\n    this._text.x = this._padding.x;\n    this._text.y = this._padding.y;\n\n    // Generating offsets of the borders\n    const offsets = [\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      }\n    ]\n\n    // Draw\n    this._background.clear();\n    this._background.beginFill(0x3E83C1);\n    this._background.drawPolygon([\n      new PIXI.Point(offsets[0].x, offsets[0].y),\n      new PIXI.Point(width - offsets[1].x, offsets[1].y),\n      new PIXI.Point(width - offsets[2].x, height - offsets[2].y),\n      new PIXI.Point(offsets[3].x, height - offsets[3].y),\n    ]);\n    this._background.endFill();\n  }\n\n  _onHover() {\n    this._container.x = 0;\n    this._container.y = 0;\n    this._container.scale.set(1);\n  }\n\n  _onHoverEnd() {\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n  }\n\n  _onClick() {\n    if (typeof this.onClick === 'function')\n      this.onClick();\n  }\n\n\n}\n","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","export default __webpack_public_path__ + \"images/ce9ad9322be2e6a2d659d391ad63dcce.png\";","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","export default __webpack_public_path__ + \"images/ede9caaf7e31907c893eb304262121b7.png\";","export default __webpack_public_path__ + \"images/292ea24d6b3465aa22255944c425e911.png\";","export default __webpack_public_path__ + \"images/180f3d5944db4f30c53830e5e93949d6.png\";","export default __webpack_public_path__ + \"images/8735110ff70fad2f5892a9277e5a428c.png\";","import Game from \"./main\";\n\nexport default class Tileset {\n\n  texture;\n  tileSize;\n  tileTextures = [];\n\n  /**\n   * @param {string} image\n   * @param {{x: number, y: number}} tileSize\n   */\n  constructor(image, tileSize) {\n    this.texture = Game.app.loader.resources[image].texture;\n    this.tileSize = tileSize;\n    this.generateTileSpriteArray();\n  }\n\n  generateTileSpriteArray() {\n    const dimensions = {\n      x: Math.floor(this.texture.width / this.tileSize.x),\n      y: Math.floor(this.texture.height / this.tileSize.y)\n    };\n\n    for(let y = 0; y < dimensions.y; y++) {\n      for (let x = 0; x < dimensions.x; x++) {\n        const rectangle = new PIXI.Rectangle(\n          this.tileSize.x * x,\n          this.tileSize.y * y,\n          this.tileSize.x,\n          this.tileSize.y\n        );\n\n        this.texture.frame = rectangle;\n        this.tileTextures.push(this.texture.clone());\n      }\n    }\n  }\n\n  getSprite(index) {\n    if (index > this.tileTextures.length) {\n      debugger;\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\n    }\n      return new PIXI.Sprite(this.tileTextures[index]);\n  }\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  static tilesets = {};\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = Tilemap.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Class dictionnary\n   * @type {Object.<string, function>}\n   */\n  _scenesClasses = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n    Game.events.addEventHandler('scene:restart', this.restartCurrentScene.bind(this));\n  }\n\n  /**\n   * @param {function} sceneClass\n   * @param {string} name\n   */\n  addScene(sceneClass, name) {\n    this._scenesClasses[name] = sceneClass;\n  }\n\n  restartCurrentScene() {\n    if (!this.activeScene)\n      return;\n    const oldActiveScene = this.activeScene;\n    this._activeScene = undefined;\n    // unload old instance\n    this._scenes[oldActiveScene].onSceneEnd();\n    this._parentContainer.removeChild(this._scenes[oldActiveScene].getContainer());\n    delete this._scenes[oldActiveScene];\n\n    // create new instance\n    this._scenes[oldActiveScene] = new this._scenesClasses[oldActiveScene]();\n\n    // Initialize and display new instance\n    this._parentContainer.addChild(this._scenes[oldActiveScene].getContainer());\n    this._scenes[oldActiveScene].onSceneStart();\n    this._activeScene = oldActiveScene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenesClasses[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._scenes[value] = new this._scenesClasses[value]();\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","import moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport player from 'assets/player/Player1.png';\nimport playerOldFrame from 'assets/player/Player1-old.png';\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport laser from 'assets/tilesets/laser.png';\nimport keyboardLayout from 'assets/tilesets/keyboard-layout.png';\nimport laserShooter from 'assets/tilesets/laser-shooter.png';\n\nconst assetsToLoad = [\n  moonTileset,\n  earthTileset,\n  player,\n  tilecoin,\n  playerOldFrame,\n  laser,\n  laserShooter,\n  keyboardLayout\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\n\nexport default class MainMenu extends Scene {\n\n  startButton;\n  levelsButton;\n  creditsButton;\n  howToPlay;\n\n  constructor() {\n    super();\n    this.startButton = new Button('Play');\n    this.startButton.x = Game.app.screen.width / 2 - this.startButton.width / 2;\n    this.startButton.y = Game.app.screen.height / 2 - 150;\n    this.startButton.onClick = this.startGame.bind(this);\n\n    this.levelsButton = new Button('Levels');\n    this.levelsButton.x = Game.app.screen.width / 2 - this.levelsButton.width / 2;\n    this.levelsButton.y = Game.app.screen.height / 2 - 50;\n    this.levelsButton.onClick = this.goToLevels.bind(this);\n\n\n    this.howToPlay = new Button('How to play ?');\n    this.howToPlay.x = Game.app.screen.width / 2 - this.howToPlay.width / 2;\n    this.howToPlay.y = Game.app.screen.height / 2 + 50;\n    this.howToPlay.onClick = this.goToHowToPlay.bind(this);\n\n    this.creditsButton = new Button('Credits');\n    this.creditsButton.x = Game.app.screen.width / 2 - this.creditsButton.width / 2;\n    this.creditsButton.y = Game.app.screen.height / 2 + 150;\n    this.creditsButton.onClick = this.goToCredits.bind(this);\n\n\n    this.sceneContainer.addChild(this.startButton);\n    this.sceneContainer.addChild(this.howToPlay);\n    this.sceneContainer.addChild(this.creditsButton);\n    this.sceneContainer.addChild(this.levelsButton);\n  }\n\n  startGame() {\n    Game.sceneManager.activeScene = 'level1';\n  }\n\n  goToHowToPlay() {\n    Game.sceneManager.activeScene = 'HowToPlay';\n  }\n\n  goToCredits() {\n    Game.sceneManager.activeScene = 'credits';\n  }\n\n  goToLevels() {\n    Game.sceneManager.activeScene = 'levels';\n  }\n\n}\n","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport keyboardLayout from 'assets/tilesets/keyboard-layout.png';\nimport Button from \"root/ui/Button\";\n\nexport default class HowToPlayScene extends Scene {\n\n  _textContent =\n  `Welcome to NO GRAVITY\n  \n  The game is pretty simple, get all the gold \n  coins and reach the end of the level.\n  \n  To achieve this, we created a whole new tech named\n  the \"Neosensor Turbothermal Gavitotron\" (You can call it NTG too).\n  It basically allow you to avoid the gravity field of the earth by\n  teleport all your environment on space.\n  \n  To activate it just press the big red button on yous suit also\n  named the E button.\n  \n  To move aroud your environment, just use your feets or you can\n  also use the little button just next to your gloves, those are\n  the A and D buttons (if you're french, you can also use the Q\n  button).\n  \n  Ah and you can also use the SPACE button to have an impulsion in\n  your legs and jump.\n  \n  See you explorer.`\n\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 25,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _textMetrics = PIXI.TextMetrics.measureText(this._textContent, this._textStyle);\n  _text = new PIXI.Text(this._textContent, this._textStyle);\n  _keyboardSprite = new PIXI.Sprite(Game.app.loader.resources[keyboardLayout].texture);\n  _mainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this._text.x = Game.app.renderer.width / 2 - this._textMetrics.width / 2;\n    this._text.y = Game.app.renderer.height / 2 - this._textMetrics.height / 2 - 100;\n    this._keyboardSprite.x = Game.app.renderer.width / 2 - this._keyboardSprite.width / 2;\n    this._keyboardSprite.y = Game.app.renderer.height / 2 + 200;\n    this.sceneContainer.addChild(this._text);\n    this.sceneContainer.addChild(this._keyboardSprite);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n  }\n\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport Button from \"root/ui/Button\";\n\nexport default class CreditScene extends Scene {\n  _textContent = `NO GRAVITY\n  \n  Code:\n  Marius \"Astroboy\" Van Nieuwenhuyse\n  Jason \"Vakeros\" Defer\n  \n  Art:\n  Jesse \"Jwoodif\" Jamison Menser\n  \n  Created using PIXI.js library\n  All assets created by Jwoodif`;\n\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 40,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _textMetrics = PIXI.TextMetrics.measureText(this._textContent, this._textStyle);\n  _text = new PIXI.Text(this._textContent, this._textStyle);\n  _mainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this._text.x = Game.app.renderer.width / 2 - this._textMetrics.width / 2;\n    this._text.y = Game.app.renderer.height / 2 - this._textMetrics.height / 2;\n    this.sceneContainer.addChild(this._text);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport Button from \"root/ui/Button\";\n\nexport default class LevelsScene extends Scene {\n  _title = new PIXI.Text('LEVELS', {\n    fontFamily: 'Londrina Solid',\n    fontSize: 40,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _mainMenuButton = new Button('Main Menu');\n\n  _levels = [\n    {\n      name: 'Level 1',\n      id: 'level1'\n    },\n  ];\n\n  constructor() {\n    super();\n    const titleMetrics = PIXI.TextMetrics.measureText(this._title.text, this._title.style);\n    this._title.x = Game.app.screen.width / 2 - titleMetrics.width / 2;\n    this._title.y = 100;\n    this.sceneContainer.addChild(this._title);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n    this.generateMenu();\n  }\n\n  generateMenu() {\n    const getRedirectFunction = (levelId) => () => {\n      Game.sceneManager.activeScene = levelId;\n    }\n    for (let i = 0; i < this._levels.length; i++) {\n      const levelData = this._levels[i];\n      const button = new Button(levelData.name);\n      button.x = Game.app.screen.width / 2 - button.width / 2;\n      button.y = 200 + i * 100;\n      button.onClick = getRedirectFunction(levelData.id);\n      this.sceneContainer.addChild(button);\n    }\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n  isLanded = true;\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let landed = false;\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        landed = true;\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.15)\n            vel.x -= 0.6 * delta;\n          else if (vel.x < -0.15)\n            vel.x += 0.6 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n    if (landed)\n      this.onLanded();\n    this.isLanded = landed;\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Game from \"root/main\";\n\n/**\n * @typedef {Object.<string, {isAnimated: boolean, tileId?: number, from?: number, to?: number}>} AnimationData\n */\n\nexport default class Animation {\n  _animTexture;\n  _frameSize;\n  sprite;\n  /** @type AnimationData */\n  _animData;\n  _currentAnim;\n  _currentAnimFrame = 0;\n  _frameRect = new PIXI.Rectangle();\n  _intervalId = -1;\n  _delay;\n\n  /**\n   * @param {string} texPath\n   * @param {{x: number, y: number}} frameSize\n   * @param {AnimationData} animationData\n   * @param {string} defaultAnim\n   * @param {number} delay\n   */\n  constructor(texPath, frameSize, animationData, defaultAnim, delay) {\n    this._animTexture = Game.app.loader.resources[texPath].texture;\n    this._frameSize = frameSize;\n    this._currentAnim = defaultAnim;\n    this._animData = animationData;\n    this._delay = delay;\n    window.anim = this;\n\n    /* Setting up default frame */\n    this._frameRect.width = frameSize.x;\n    this._frameRect.height = frameSize.y;\n    this._frameRect.y = 0;\n    this._setCurrentAnimFrame();\n    this._animTexture.frame = this._frameRect;\n\n\n    this.sprite = new PIXI.Sprite(this._animTexture);\n  }\n\n  start() {\n    this._intervalId = setInterval(this._setCurrentAnimFrame.bind(this), this._delay);\n  }\n\n  _setCurrentAnimFrame() {\n    const current = this._animData[this._currentAnim];\n    if (!current)\n      return;\n    if (current.animated) {\n      if (!this._currentAnimFrame)\n        this._currentAnimFrame = current.from - 1;\n      if (this._currentAnimFrame >= current.to) {\n        if (current.loop) {\n          this._currentAnimFrame = current.from;\n          this._frameRect.x = current.from * this._frameRect.width;\n        }\n      } else {\n        this._currentAnimFrame++;\n        this._frameRect.x = this._currentAnimFrame * this._frameRect.width;\n      }\n    } else {\n      this._currentAnimFrame = current.tileId;\n      this._frameRect.x = current.tileId * this._frameRect.width;\n    }\n    this._animTexture.frame = this._frameRect;\n  }\n\n  unload() {\n    if (this._intervalId !== -1) {\n      clearInterval(this._intervalId);\n      this._intervalId = -1;\n    }\n  }\n\n  /**\n   * @param {string} animName\n   */\n  setCurrentAnimation(animName) {\n    if (animName !== this._currentAnim) {\n      this._currentAnim = animName;\n      this._currentAnimFrame = this._animData[this._currentAnim].start;\n      this._setCurrentAnimFrame();\n    }\n  }\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\nimport Animation from \"root/Animation\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerAnimation;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    leftQwerty: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.playerAnimation = new Animation(player, {x: 32, y: 56}, {\n      'idle': {\n        animated: false,\n        tileId: 0\n      },\n      'run': {\n        animated: true,\n        from: 1,\n        to: 7,\n        loop: true\n      },\n      'jump': {\n        animated: true,\n        from: 10,\n        to: 13,\n        loop: false\n      }\n    }, 'idle', 100);\n    this.playerSprite = this.playerAnimation.sprite;\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.x = x * this.tilemap.tileRenderSize;\n    this.container.y = y * this.tilemap.tileRenderSize;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.leftQwerty = keyboard('a');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n    this.playerAnimation.start();\n    /*const run = () => this.playerAnimation.setCurrentAnimation('run');\n    const idle = (keyCheck) => () => {\n      if (!keyCheck.isDown)\n        this.playerAnimation.setCurrentAnimation('idle');\n    }\n    this.keysHandlers.right.press = run;\n    this.keysHandlers.left.press = run;\n    this.keysHandlers.right.release = idle(this.keysHandlers.left);\n    this.keysHandlers.left.release = idle(this.keysHandlers.right);*/\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.leftQwerty.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n    this.playerAnimation.unload();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    //this.playerAnimation.setCurrentAnimation('jump');\n    if (this.isLanded) {\n      if (\n        this.keysHandlers.right.isDown ||\n        (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown)\n      )\n        this.playerAnimation.setCurrentAnimation('run');\n      else\n        this.playerAnimation.setCurrentAnimation('idle');\n    } else {\n      if (Game.gameplayState.isGravityEnabled)\n        this.playerAnimation.setCurrentAnimation('jump');\n    }\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x += 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x -= 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n    }\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport player from 'assets/player/Player1-old.png';\nimport * as Collision from \"root/Collision\";\n\nexport default class Mob extends Entity {\n  sprite;\n  reverse = false;\n  speed = 5;\n  _canHitPlayer = true;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.sprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    const resizeRatio = (tilemap.tileRenderSize * 2) / (this.sprite.height);\n    this.sprite.scale.set(resizeRatio);\n    this.container.y = y * tilemap.tileRenderSize;\n    this.container.x = x * tilemap.tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width : userPos.x;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air DO NOTHING\n      return;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front of knees is filled\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y - 1}) !== -1) {\n      // If tile in front of head is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1) * this.tilemap.tileRenderSize * 0.03, y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player) && this._canHitPlayer) {\n      Game.events.triggerEvent('gameplay:death');\n      this._canHitPlayer = false;\n    }\n    this.move();\n  }\n\n\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\nimport laserimg from 'assets/tilesets/laser.png';\nimport laserShooterImg from 'assets/tilesets/laser-shooter.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Laser {\n  container = new PIXI.Container();\n  sprite = [];\n  _canHitPlayer = true;\n  _active = true;\n  _intervalId;\n  _laserlength;\n  delay;\n\n  constructor(player, tilemap, {x, y, length, delay, direction}) {\n    if (direction === 'top') y++;\n    if (direction === 'left') x++;\n    x = x * tilemap.tileRenderSize;\n    y = y * tilemap.tileRenderSize;\n    const blockSize = tilemap.tileRenderSize;\n    const pixelSize = tilemap.tileRenderSize / 32;\n\n\n    const laserShooter = new PIXI.Sprite(Game.app.loader.resources[laserShooterImg].texture)\n\n    laserShooter.width = blockSize;\n    laserShooter.height = pixelSize * 7;\n    laserShooter.x = x;\n    laserShooter.y = y;\n    laserShooter.anchor.set(0.5, 1);\n\n    switch (direction) {\n      case 'left':\n        y += pixelSize * 2;\n      case 'right':\n        y += blockSize / 2 - pixelSize;\n        laserShooter.y += blockSize / 2;\n        break;\n      case 'top':\n      case 'bottom':\n        x += blockSize / 2 - pixelSize;\n        laserShooter.x += blockSize / 2;\n        break;\n    }\n\n    switch (direction) {\n      case 'left':\n        laserShooter.angle = -90;\n        break;\n      case 'right':\n        laserShooter.angle = 90;\n        break;\n      case 'bottom':\n        laserShooter.angle = 180;\n        break;\n    }\n\n\n    for (let i = 0; i <= length - 1; i++) {\n\n      this.sprite.push(new PIXI.Sprite(Game.app.loader.resources[laserimg].texture));\n      this.sprite[i].width = pixelSize * 2;\n      this.sprite[i].height = tilemap.tileRenderSize;\n      if (direction === \"top\") {\n        this.sprite[i].y = y - this.sprite[i].height * (i + 1);\n        this.sprite[i].x = x\n      } else if (direction === \"bottom\") {\n        this.sprite[i].y = y + this.sprite[i].height * i;\n        this.sprite[i].x = x\n      } else if (direction === \"left\") {\n        this.sprite[i].angle = -90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x - this.sprite[i].height * (i + 1);\n      } else {\n        this.sprite[i].angle = 90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x + this.sprite[i].height * (i + 1);\n      }\n\n      this._laserlength = this.sprite[i].height;\n      this.container.addChild(this.sprite[i]);\n    }\n\n    if (direction === \"top\" || direction === \"bottom\") {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[0].x,\n          this.sprite[(direction === \"bottom\") ? 0 : this.sprite.length - 1].y,\n          this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length\n        ),\n        player.container\n      );\n    } else {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[(direction === \"right\") ? 0 : this.sprite.length - 1].x - ((direction === \"right\") ? this.sprite[0].height : 0),\n          this.sprite[0].y + ((direction === \"right\") ? 0 : -1) * this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length,\n          this.sprite[0].width\n        ),\n        player.container\n      );\n    }\n\n    this.container.addChild(laserShooter);\n\n    this.delay = delay;\n    this._intervalId = this.startInterval();\n    this.laserHitReg.onCollide = this.onHit.bind(this);\n  }\n\n  onHit() {\n    if (this._canHitPlayer) {\n      this._canHitPlayer = false;\n      Game.events.triggerEvent('gameplay:death');\n    }\n  }\n\n  startInterval() {\n\n    return setInterval(() => {\n      if (this.delay !== -1)\n        this._active = !this._active;\n\n      let alpha = (this._active ? 1 : 0);\n      for (let i = 0; i < this.sprite.length; i++) {\n        this.sprite[i].alpha = alpha;\n      }\n\n    }, this.delay)\n  }\n\n  onSceneEnd() {\n    clearInterval(this._intervalId);\n  }\n\n  update() {\n    if (this._active)\n      this.laserHitReg.update()\n  }\n\n}\n","import Game from \"root/main\";\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Collectable{\n  container = new PIXI.Container();\n  count = {total: 0, pick: 0,}\n  sprite\n  _pick = false;\n  constructor(player, x, y, tileRenderSize) {\n    this.sprite =  new PIXI.Sprite(Game.app.loader.resources[tilecoin].texture);\n    this.sprite.width = tileRenderSize;\n    this.sprite.height = tileRenderSize;\n\n    this.container.x = x * tileRenderSize;\n    this.container.y = y * tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.takeCoin = new Trigger(\n      new PIXI.Rectangle(\n        this.container.x,\n        this.container.y,\n        this.sprite.width,\n        this.sprite.height\n      ),\n      player.container\n    );\n    this.takeCoin.onCollide = this.pickup.bind(this);\n  }\n\n  pickup(){\n    this._pick = true;\n    this.takeCoin.onCollide = undefined;\n    this.container.removeChild(this.sprite);\n    console.log(\"pickup\");\n  }\n\n  isPick(){return this._pick}\n\n  update(){\n    this.takeCoin.update()\n  }\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity (E):\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n    Game.gameplayState.paused = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n        Game.gameplayState.paused = false;\n        Game.events.triggerEvent('scene:restart');\n      }\n    }\n  }\n\n}\n","import UserInterface from \"root/ui/ui\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\n\nexport default class Navigation extends UserInterface {\n\n  MainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this.MainMenuButton.x = 20;\n    this.MainMenuButton.y = 20;\n    this.MainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.container.addChild(this.MainMenuButton);\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\nimport Navigation from \"root/ui/navigation\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen(),\n    new Navigation()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport Laser from \"root/Laser\";\nimport Collectable from \"root/Collectable\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\n\nexport default class GameScene extends Scene {\n\n  player;\n  tilemap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n  lasers = [];\n  mobs = [];\n  collectables = [];\n\n  /**\n   * @param {MapEntry} map\n   */\n  constructor(map) {\n    super();\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.player = new Player(this.tilemap, map.dynamicObjectsMap.start.x, map.dynamicObjectsMap.start.y);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n    }\n\n    window.endTrigger = this.endTrigger;\n    for (const laserData of map.dynamicObjectsMap.laserHitReg) {\n      const laser = new Laser(this.player, this.tilemap, laserData)\n      this.lasers.push(laser);\n      this.cameraHandledContainer.addChild(laser.container);\n    }\n    for (const ennemy of map.dynamicObjectsMap.ennemies) {\n      const mob = new Mob(this.tilemap, ennemy.x, ennemy.y);\n      this.mobs.push(mob);\n      this.cameraHandledContainer.addChild(mob.container);\n    }\n    for (const collectableData of map.dynamicObjectsMap.collectables) {\n      const collectable = new Collectable(\n        this.player,\n        collectableData.x,\n        collectableData.y,\n        this.tilemap.tileRenderSize);\n      this.collectables.push(collectable);\n      this.cameraHandledContainer.addChild(collectable.container);\n    }\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.userInterface.update(delta);\n    if (Game.gameplayState.paused)\n      return;\n    this.player.update(delta);\n    this.camera.update();\n    this.updateLasers();\n    this.updateMobs(delta);\n    this.updateCollectable();\n    this.userInterface.update(delta);\n    this.endTrigger.update();\n  }\n\n  updateLasers() {\n    for (const laser of this.lasers) {\n      laser.update();\n    }\n  }\n\n  updateMobs(delta) {\n    for (const mob of this.mobs) {\n      mob.update(delta, this.player);\n    }\n  }\n\n  updateCollectable() {\n    for (const collectable of this.collectables) {\n      collectable.update();\n    }\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n    this.lasers.forEach(item => item.onSceneEnd());\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end');\n    Game.events.triggerEvent('scene:restart');\n  }\n}\n\n","import level1Csv from 'assets/maps/level-1/level-1.csv';\nimport level1Json from 'assets/maps/level-1/level-1.json';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  level1: {\n    tileMap: level1Csv,\n    dynamicObjectsMap: level1Json\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {{\n *   endTrigger: {\n *     x: number,\n *     y: number,\n *     width: number,\n *     height: number\n *   },\n *   start: {\n *     x: number,\n *     y: number\n *   },\n *   laserHitReg: Array<{\n *     x: number,\n *     y: number,\n *     length: number,\n *     delay: number,\n *     direction: 'top'|'left'|'right'|'bottom'\n *   }>,\n *   ennemies: Array<{\n *     x: number,\n *     y: number,\n *     speed: number\n *   }>,\n *   collectables: Array<{\n *     x: number,\n *     y: number\n *   }>\n * }} dynamicObjectsMap\n */\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,9,-1,0,2,-1,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,4,5,5,6,8,18,19,20,18,19,19,19,19,19,19,20,9,-1,-1,-1,-1,-1,7,8,4,15,6,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,6\\n8,4,5,5,5,16,-1,-1,14,5,5,5,6,8,8,8,8,8,8,8,8,18,2,-1,-1,-1,0,20,4,16,-1,14,5,5,5,5,5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,5,5,5,5,5,5,5,5,15,16,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,20\\n8,9,-1,-1,-1,-1,0,19,19,19,19,19,19,2,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8\\n8,18,1,1,1,1,20,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,19,19,19,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level1 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level1);\n  }\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}