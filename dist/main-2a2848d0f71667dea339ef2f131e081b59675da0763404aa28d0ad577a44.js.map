{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/ui/Button.js","webpack:///./src/Scenes/Scene.js","webpack:///./src/Collision.js","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./src/Tileset.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Animation.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/Laser.js","webpack:///./src/Collectable.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/navigation.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/StaticTilemap.js","webpack:///./src/Scenes/GameScene.js","webpack:///./assets/maps/level-1/level-1.csv","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/level-0/level-0.csv","webpack:///./assets/maps/level-0/level-0-back.csv","webpack:///./assets/maps/level-1/level-1-back.csv","webpack:///./assets/maps/level-2/level-2.csv","webpack:///./assets/maps/level-2/level-2-back.csv","webpack:///./assets/player/Player1.png","webpack:///./assets/player/Player1-old.png","webpack:///./assets/tilesets/goldCoin1.png","webpack:///./assets/tilesets/laser.png","webpack:///./assets/tilesets/keyboard-layout.png","webpack:///./assets/tilesets/laser-shooter.png","webpack:///./assets/tilesets/misc.png","webpack:///./assets/tilesets/logo.png","webpack:///./src/Tilemap.js","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Loader.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/Event.js","webpack:///./src/Scenes/level1/level1.js","webpack:///./src/Scenes/howToPlay/howToPlayScene.js","webpack:///./src/Scenes/credits/creditScene.js","webpack:///./src/Scenes/levels/levelsScene.js","webpack:///./src/Scenes/level0/level0.js","webpack:///./src/Scenes/level2/level2.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","renderer","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","Tilemap","tilesets","earth","Tileset","earthTileset","x","y","moon","moonTileset","ticker","add","delta","update","addScene","MainMenu","HowToPlayScene","creditScene","levelsScene","Level1","Level0","Level2","activeScene","game","getScene","Event","isGravityEnabled","gravityForce","paused","Button","text","undefined","Container","TextStyle","fontFamily","fontSize","fill","Text","_textStyle","Graphics","_container","_background","_text","interactive","on","_onHover","_onHoverEnd","_onClick","scale","set","this","_textMectric","_padding","getRandomInt","padding","Math","floor","random","offsets","clear","beginFill","drawPolygon","Point","endFill","onClick","val","TextMetrics","measureText","_drawBackground","PIXIimport","Scene","sceneContainer","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","abs","image","tileSize","texture","resources","generateTileSpriteArray","dimensions","baseTexture","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","Entity","tilemap","gameplayState","_velocity","tileRenderSize","collider","landed","pos","getPosition","vel","getVelocity","containerWidth","container","containerHeight","newPosRect","isColliding","setPosition","setVelocity","onLanded","isLanded","keyboard","isDown","isUp","press","release","downHandler","event","toLowerCase","toUpperCase","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Animation","texPath","frameSize","animationData","defaultAnim","delay","_animTexture","_frameSize","_currentAnim","_animData","_delay","anim","_frameRect","_setCurrentAnimFrame","sprite","_intervalId","stop","setInterval","_isPaused","current","animated","_currentAnimFrame","from","to","loop","tileId","clearInterval","animName","start","Player","top","left","leftQwerty","right","bottom","playerAnimation","player","playerSprite","resizeRatio","playerSize","anchor","keysHandlers","jump","startSneack","stopSneack","events","addEventHandler","onGravityChanges","removeEventHandler","remainingJumps","isSneaked","setCurrentAnimation","maxSpeed","isOn","resume","pause","Mob","playerPosition","mobPosition","playerBox","mobBox","Collision","userPos","frontPositionX","reverse","footPositionY","tilePos","getTileCoord","getTile","speed","isTouching","_canHitPlayer","triggerEvent","move","Camera","followedContainer","sceneContainerWidth","followedContainerX","targetPos","round","screenSize","Trigger","position","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","Laser","direction","blockSize","pixelSize","laserShooter","laserShooterImg","angle","laserimg","_laserlength","laserHitReg","startInterval","onHit","_active","alpha","Collectable","total","pick","tilecoin","takeCoin","pickup","_pick","removeChild","console","log","UserInterface","GravityIndicator","background","gravityText","gravityValueText","onGravitySwitches","style","DeathScreen","availableTexts","textStyle","textDims","startAnim","isAnimating","Navigation","MainMenuButton","goToMainMenu","UserInterfaceHandler","uis","ui","StaticTilemap","map","heightpx","resourcePath","tileset","lines","split","cells","item","Number","generateTilemapContent","group","info","table","groupEnd","colliderBox","colliderTilePos","spriteList","boundingBox","tile","getSprite","GameScene","nextScene","gravitySwitch","screen","backTileMap","backTilesetImg","dynamicObjectsMap","cameraHandledContainer","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","laserData","laser","lasers","ennemies","ennemy","mob","mobs","collectables","collectableData","collectable","userInterface","camera","assignToContainer","updateLasers","updateMobs","updateCollectable","startKeyboardListening","switchGravity","stopKeyboardListening","forEach","onSceneEnd","isPick","MapRegistry","level0","tileMap","level1","level1Json","level2","TilesetType","EARTH","switchTileset","currentTileset","removeChildren","MOON","containers","keys","tilesetType","parentContainer","_parentContainer","restartCurrentScene","sceneClass","_scenesClasses","oldActiveScene","_activeScene","_scenes","getContainer","onSceneStart","assetsToLoad","playerOldFrame","keyboardLayout","miscTileset","logo","pixiLoader","cb","load","logoSprite","logoImg","startButton","startGame","levelsButton","goToLevels","howToPlay","goToHowToPlay","creditsButton","goToCredits","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","align","_textContent","_textMetrics","_keyboardSprite","_mainMenuButton","CreditScene","LevelsScene","id","titleMetrics","_title","generateMenu","getRedirectFunction","levelId","_levels","levelData","button","WebFont","google","families","active"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,GAAG,IAElBM,I,oeCtIT0C,EAAOC,KAAOA,E,IAEOC,E,WAWnB,aAAc,Y,4FAAA,SACZA,EAAKC,IAAM,IAAIF,cAAiB,CAACG,WAAW,EAAMC,aAAa,EAAMC,OAAQT,OAAOU,YAAaC,MAAOX,OAAOY,WAAYC,gBAAiB,UAC5IC,SAASC,KAAKC,YAAYX,EAAKC,IAAIW,MAC/BZ,EAAKC,IAAIY,SAAST,OAAS,MAC7BL,WAAce,WAAaf,cAAiBgB,SAE9C,IAAMC,EAAgB,IAAIjB,YAC1BC,EAAKiB,aAAe,IAAIC,IAAaF,GACrChB,EAAKC,IAAIkB,MAAMC,SAASJ,GACxBK,YAAOrB,EAAKC,IAAIqB,QAAQ,WACtBC,IAAQC,SAAW,CACjBC,MAAO,IAAIC,IAAQC,IAAc,CAACC,EAAG,GAAIC,EAAG,KAC5CC,KAAM,IAAIJ,IAAQK,IAAa,CAACH,EAAG,GAAIC,EAAG,MAE5C7B,EAAKC,IAAI+B,OAAOC,KAAI,SAAAC,GAAK,OAAI,EAAKC,OAAOD,MACzClC,EAAKiB,aAAamB,SAASC,IAAU,YACrCrC,EAAKiB,aAAamB,SAASE,IAAgB,aAC3CtC,EAAKiB,aAAamB,SAASG,IAAa,WACxCvC,EAAKiB,aAAamB,SAASI,IAAa,UACxCxC,EAAKiB,aAAamB,SAASK,IAAQ,UACnCzC,EAAKiB,aAAamB,SAASM,IAAQ,UACnC1C,EAAKiB,aAAamB,SAASO,IAAQ,UACnC3C,EAAKiB,aAAa2B,YAAc,cAElCjD,OAAOkD,KAAO7C,E,sDAGTkC,GACDlC,EAAKiB,aAAa2B,aACpB5C,EAAKiB,aAAa6B,SAAS9C,EAAKiB,aAAa2B,aAAaT,OAAOD,Q,kCAxClDlC,E,gBAAAA,E,yBAAAA,E,SAIH,IAAI+C,K,EAJD/C,E,gBAKI,CACrBgD,kBAAkB,EAClBC,aAAc,EACdC,QAAQ,M,y5CCzBSC,E,sQAiBnB,WAAYC,GAAM,a,4FAAA,aAChB,gBADgB,eAhBRC,GAgBQ,oBAdL,IAAItD,KAAKuD,WAcJ,oBAbL,IAAIvD,KAAKwD,UAAU,CAC9BC,WAAY,iBACZC,SAAU,GACVC,KAAM,WAUU,eARV,IAAI3D,KAAK4D,KAAK,GAAI,EAAKC,aAQb,mDANJ,IAAI7D,KAAK8D,UAML,kBALP,CACTjC,EAAG,GACHC,EAAG,KAKH,EAAKuB,KAAOA,EACZ,EAAKU,WAAW1C,SAAS,EAAK2C,aAC9B,EAAKD,WAAW1C,SAAS,EAAK4C,OAC9B,EAAKD,YAAYE,aAAc,EAC/B,EAAKF,YAAYG,GAAG,YAAa,EAAKC,SAAS9E,KAAd,OACjC,EAAK0E,YAAYG,GAAG,WAAY,EAAKE,YAAY/E,KAAjB,OAChC,EAAK0E,YAAYG,GAAG,QAAS,EAAKG,SAAShF,KAAd,OAC7B,EAAKyE,WAAWlC,EAAI,EAAKkC,WAAWxD,MAAQ,GAC5C,EAAKwD,WAAWjC,EAAI,EAAKiC,WAAW1D,OAAS,GAC7C,EAAK0D,WAAWQ,MAAMC,IAAI,IAC1B,EAAKnD,SAAS,EAAK0C,YAZH,E,uDA0BhB,IAAMxD,EAAQkE,KAAKC,aAAanE,MAA0B,EAAlBkE,KAAKE,SAAS9C,EAChDxB,EAASoE,KAAKC,aAAarE,OAA2B,EAAlBoE,KAAKE,SAAS7C,EAClD8C,EAAe,SAACC,GAEpB,OADAA,GAAW,EACJC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KAI/CJ,KAAKR,MAAMpC,EAAI4C,KAAKE,SAAS9C,EAC7B4C,KAAKR,MAAMnC,EAAI2C,KAAKE,SAAS7C,EAG7B,IAAMmD,EAAU,CACd,CACEpD,EAAG+C,EAAaH,KAAKE,SAAS9C,GAC9BC,EAAG8C,EAAaH,KAAKE,SAAS7C,IAEhC,CACED,EAAG+C,EAAaH,KAAKE,SAAS9C,GAC9BC,EAAG8C,EAAaH,KAAKE,SAAS7C,IAEhC,CACED,EAAG+C,EAAaH,KAAKE,SAAS9C,GAC9BC,EAAG8C,EAAaH,KAAKE,SAAS7C,IAEhC,CACED,EAAG+C,EAAaH,KAAKE,SAAS9C,GAC9BC,EAAG8C,EAAaH,KAAKE,SAAS7C,KAKlC2C,KAAKT,YAAYkB,QACjBT,KAAKT,YAAYmB,UAAU,SAC3BV,KAAKT,YAAYoB,YAAY,CAC3B,IAAIpF,KAAKqF,MAAMJ,EAAQ,GAAGpD,EAAGoD,EAAQ,GAAGnD,GACxC,IAAI9B,KAAKqF,MAAM9E,EAAQ0E,EAAQ,GAAGpD,EAAGoD,EAAQ,GAAGnD,GAChD,IAAI9B,KAAKqF,MAAM9E,EAAQ0E,EAAQ,GAAGpD,EAAGxB,EAAS4E,EAAQ,GAAGnD,GACzD,IAAI9B,KAAKqF,MAAMJ,EAAQ,GAAGpD,EAAGxB,EAAS4E,EAAQ,GAAGnD,KAEnD2C,KAAKT,YAAYsB,Y,iCAIjBb,KAAKV,WAAWlC,EAAI,EACpB4C,KAAKV,WAAWjC,EAAI,EACpB2C,KAAKV,WAAWQ,MAAMC,IAAI,K,oCAI1BC,KAAKV,WAAWlC,EAAI4C,KAAKV,WAAWxD,MAAQ,GAC5CkE,KAAKV,WAAWjC,EAAI2C,KAAKV,WAAW1D,OAAS,GAC7CoE,KAAKV,WAAWQ,MAAMC,IAAI,M,iCAIE,mBAAjBC,KAAKc,SACdd,KAAKc,Y,2BAnEP,OAAOd,KAAKR,MAAMZ,M,aAGXmC,GACPf,KAAKC,aAAe1E,KAAKyF,YAAYC,YAAYF,EAAKf,KAAKZ,YAC3DY,KAAKkB,kBACLlB,KAAKR,MAAMZ,KAAOmC,O,mCAvCcI,Y,yOCDfC,E,WAInB,a,uGAAc,S,OAAA,G,EAAA,oB,EAAA,M,sFACZpB,KAAKqB,eAAiB,IAAI9F,KAAKuD,U,sDAG1BpB,M,qCAGL,OAAOsC,KAAKqB,iB,gJCVT,SAASC,EAAiBC,EAAIC,GACnC,IAASC,EAAoBC,EAAqBC,EAAIC,EAyBtD,OAvBM,EAENL,EAAGM,QAAUN,EAAGnE,EAAImE,EAAGzF,MAAQ,EAC/ByF,EAAGO,QAAUP,EAAGlE,EAAIkE,EAAG3F,OAAS,EAChC4F,EAAGK,QAAUL,EAAGpE,EAAIoE,EAAG1F,MAAQ,EAC/B0F,EAAGM,QAAUN,EAAGnE,EAAImE,EAAG5F,OAAS,EAEhC2F,EAAGQ,UAAYR,EAAGzF,MAAQ,EAC1ByF,EAAGS,WAAaT,EAAG3F,OAAS,EAC5B4F,EAAGO,UAAYP,EAAG1F,MAAQ,EAC1B0F,EAAGQ,WAAaR,EAAG5F,OAAS,EAE5B+F,EAAKJ,EAAGM,QAAUL,EAAGK,QACrBD,EAAKL,EAAGO,QAAUN,EAAGM,QAErBL,EAAqBF,EAAGQ,UAAYP,EAAGO,UACvCL,EAAsBH,EAAGS,WAAaR,EAAGQ,WAErC3B,KAAK4B,IAAIN,GAAMF,GACXpB,KAAK4B,IAAIL,GAAMF,EAtBzB,mC,8BCFe,QAA0B,+C,6BCA1B,QAA0B,+C,4WCEpBxE,E,WAUnB,WAAYgF,EAAOC,I,4FAAU,kFANd,IAObnC,KAAKoC,QAAU5G,IAAKC,IAAIqB,OAAOuF,UAAUH,GAAOE,QAChDpC,KAAKmC,SAAWA,EAChBnC,KAAKsC,0B,yEASL,IALA,IAAMC,EACDlC,KAAKC,MAAMN,KAAKoC,QAAQI,YAAY1G,MAAQkE,KAAKmC,SAAS/E,GADzDmF,EAEDlC,KAAKC,MAAMN,KAAKoC,QAAQI,YAAY5G,OAASoE,KAAKmC,SAAS9E,GAGxDA,EAAI,EAAGA,EAAIkF,EAAclF,IAC/B,IAAK,IAAID,EAAI,EAAGA,EAAImF,EAAcnF,IAAK,CACrC,IAAMqF,EAAY,IAAIlH,KAAKmH,UACzB1C,KAAKmC,SAAS/E,EAAIA,EAClB4C,KAAKmC,SAAS9E,EAAIA,EAClB2C,KAAKmC,SAAS/E,EACd4C,KAAKmC,SAAS9E,GAGhB2C,KAAKoC,QAAQO,MAAQF,EACrBzC,KAAK4C,aAAatK,KAAK0H,KAAKoC,QAAQS,Y,gCAKhCC,GACR,GAAIA,EAAQ9C,KAAK4C,aAAa5K,OAC5B,MAAM,IAAI+K,UAAJ,sBAA6BD,EAA7B,+CAAyE9C,KAAK4C,aAAa5K,SAEjG,OAAO,IAAIuD,KAAKyH,OAAOhD,KAAK4C,aAAaE,S,6ZCzC1BG,E,WAQnB,WAAYC,I,4FAAS,4BANT,IAAI3H,KAAKuD,WAMA,mBALT,CAAC1B,EAAG,EAAGC,EAAG,IAKD,6CAHR,IAAI9B,KAAKmH,UAAU,EAAE,EAAE,EAAE,IAGjB,mBAFV,GAGT1C,KAAKkD,QAAUA,E,sDAGVxF,GACDlC,IAAK2H,cAAc3E,mBACrBwB,KAAKoD,UAAU/F,GAAuC,KAAlC7B,IAAK2H,cAAc1E,aAAuBuB,KAAKkD,QAAQG,eAAiB3F,GAG9F,IAGI4F,EAHAC,GAAS,EACTC,EAAMxD,KAAKyD,cACXC,EAAM1D,KAAK2D,cAETC,EAAiB5D,KAAK6D,UAAU/H,MAChCgI,EAAkB9D,KAAK6D,UAAUjI,OAE7B4H,EAAIpG,EACdoG,EAAIpG,GAAKsG,EAAItG,EAAIM,EACjBsC,KAAK+D,WAAW3G,EAAIoG,EAAIpG,EACxB4C,KAAK+D,WAAW1G,EAAImG,EAAInG,EACxB2C,KAAK+D,WAAWjI,MAAQ8H,EACxB5D,KAAK+D,WAAWnI,OAASkI,GACzBR,EAAWtD,KAAKkD,QAAQc,YAAYhE,KAAK+D,eAEnCT,EAASzB,QAAU7B,KAAK+D,WAAWlC,QAErC2B,EAAIpG,EAAIkG,EAASlG,EAAI4C,KAAK6D,UAAU/H,MAGpC0H,EAAIpG,EAAIkG,EAASlG,EAAIkG,EAASxH,MAE5BN,IAAK2H,cAAc3E,iBACrBkF,EAAItG,EAAI,EAERsG,EAAItG,EAAUsG,EAAItG,EAAI,GAAb,GAIHoG,EAAInG,EACdmG,EAAInG,GAAKqG,EAAIrG,EAAIK,EACjBsC,KAAK+D,WAAW3G,EAAIoG,EAAIpG,EACxB4C,KAAK+D,WAAW1G,EAAImG,EAAInG,EACxB2C,KAAK+D,WAAWjI,MAAQ8H,EACxB5D,KAAK+D,WAAWnI,OAASkI,GACzBR,EAAWtD,KAAKkD,QAAQc,YAAYhE,KAAK+D,eAEnCT,EAASxB,QAAU9B,KAAK+D,WAAWjC,SAErC0B,EAAInG,EAAIiG,EAASjG,EAAI2C,KAAK6D,UAAUjI,OAChCJ,IAAK2H,cAAc3E,kBAAoBkF,EAAIrG,EAAI,EACjDqG,EAAIrG,EAAI,EAGRqG,EAAIrG,EAAUqG,EAAIrG,EAAI,GAAb,EAEXkG,GAAS,EAGK,IAAVG,EAAItG,GAAW5B,IAAK2H,cAAc3E,mBAChCkF,EAAItG,EAAI,IACVsG,EAAItG,GAAK,GAAMM,EACRgG,EAAItG,GAAK,IAChBsG,EAAItG,GAAK,GAAMM,EAEfgG,EAAItG,EAAI,KAIZoG,EAAInG,EAAIiG,EAASjG,EAAIiG,EAAS1H,OAC1BJ,IAAK2H,cAAc3E,kBAAoBkF,EAAIrG,EAAI,EACjDqG,EAAIrG,EAAI,EAERqG,EAAIrG,EAAUqG,EAAIrG,EAAI,GAAb,IAIf2C,KAAKiE,YAAYT,GACjBxD,KAAKkE,YAAYR,GACbH,GACFvD,KAAKmE,WACPnE,KAAKoE,SAAWb,I,6BAIJvD,KAAK2D,cACbtG,GAAK,IAAO2C,KAAKkD,QAAQG,iB,qCAGX,IAAPjG,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACd2C,KAAK6D,UAAUzG,EAAIA,EACnB4C,KAAK6D,UAAUxG,EAAIA,I,oCAInB,MAAO,CACLD,EAAG4C,KAAK6D,UAAUzG,EAClBC,EAAG2C,KAAK6D,UAAUxG,K,qCAIF,IAAPD,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACd2C,KAAKoD,UAAUhG,EAAIA,EACnB4C,KAAKoD,UAAU/F,EAAIA,I,oCAInB,OAAO2C,KAAKoD,Y,+ECnHD,SAASiB,EAAS/J,GAC/B,IAAIM,EAAM,GACVA,EAAIN,MAAQA,EACZM,EAAI0J,QAAS,EACb1J,EAAI2J,MAAO,EACX3J,EAAI4J,WAAQ3F,EACZjE,EAAI6J,aAAU5F,EAEdjE,EAAI8J,YAAc,SAAAC,GACZA,EAAM/J,MAAQA,EAAIN,MAAMsK,eAAiBD,EAAM/J,MAAQA,EAAIN,MAAMuK,gBAC/DjK,EAAI2J,MAAQ3J,EAAI4J,OAAO5J,EAAI4J,QAC/B5J,EAAI0J,QAAS,EACb1J,EAAI2J,MAAO,EACXI,EAAMG,mBAKVlK,EAAImK,UAAY,SAAAJ,GACVA,EAAM/J,MAAQA,EAAIN,MAAMsK,eAAiBD,EAAM/J,MAAQA,EAAIN,MAAMuK,gBAC/DjK,EAAI0J,QAAU1J,EAAI6J,SAAS7J,EAAI6J,UACnC7J,EAAI0J,QAAS,EACb1J,EAAI2J,MAAO,EACXI,EAAMG,mBAKV,IAAME,EAAepK,EAAI8J,YAAY7J,KAAKD,GACpCqK,EAAarK,EAAImK,UAAUlK,KAAKD,GAetC,OAbAO,OAAO+J,iBACL,UAAWF,GAAc,GAE3B7J,OAAO+J,iBACL,QAASD,GAAY,GAIvBrK,EAAIuK,YAAc,WAChBhK,OAAOiK,oBAAoB,UAAWJ,GACtC7J,OAAOiK,oBAAoB,QAASH,IAG/BrK,E,kSCvCYyK,E,WAoBnB,WAAYC,EAASC,EAAWC,EAAeC,EAAaC,I,4FAAO,+KAb/C,GAa+C,oBAZtD,IAAInK,KAAKmH,WAY6C,sBAXpD,GAWoD,4CATvD,GAUV1C,KAAK2F,aAAenK,IAAKC,IAAIqB,OAAOuF,UAAUiD,GAASlD,QACvDpC,KAAK4F,WAAaL,EAClBvF,KAAK6F,aAAeJ,EACpBzF,KAAK8F,UAAYN,EACjBxF,KAAK+F,OAASL,EACdvK,OAAO6K,KAAOhG,KAGdA,KAAKiG,WAAWnK,MAAQyJ,EAAUnI,EAClC4C,KAAKiG,WAAWrK,OAAS2J,EAAUlI,EACnC2C,KAAKiG,WAAW5I,EAAI,EACpB2C,KAAKkG,uBACLlG,KAAK2F,aAAahD,MAAQ3C,KAAKiG,WAG/BjG,KAAKmG,OAAS,IAAI5K,KAAKyH,OAAOhD,KAAK2F,c,wDAIT,IAAtB3F,KAAKoG,aACPpG,KAAKqG,OACPrG,KAAKoG,YAAcE,YAAYtG,KAAKkG,qBAAqBrL,KAAKmF,MAAOA,KAAK+F,U,8BAI1E/F,KAAKuG,WAAY,I,+BAIjBvG,KAAKuG,WAAY,I,6CAIjB,IAAIvG,KAAKuG,UAAT,CAEA,IAAMC,EAAUxG,KAAK8F,UAAU9F,KAAK6F,cAC/BW,IAEDA,EAAQC,UACLzG,KAAK0G,oBACR1G,KAAK0G,kBAAoBF,EAAQG,KAAO,GACtC3G,KAAK0G,mBAAqBF,EAAQI,GAChCJ,EAAQK,OACV7G,KAAK0G,kBAAoBF,EAAQG,KACjC3G,KAAKiG,WAAW7I,EAAIoJ,EAAQG,KAAO3G,KAAKiG,WAAWnK,QAGrDkE,KAAK0G,oBACL1G,KAAKiG,WAAW7I,EAAI4C,KAAK0G,kBAAoB1G,KAAKiG,WAAWnK,SAG/DkE,KAAK0G,kBAAoBF,EAAQM,OACjC9G,KAAKiG,WAAW7I,EAAIoJ,EAAQM,OAAS9G,KAAKiG,WAAWnK,OAEvDkE,KAAK2F,aAAahD,MAAQ3C,KAAKiG,e,8BAIL,IAAtBjG,KAAKoG,cACPW,cAAc/G,KAAKoG,aACnBpG,KAAKoG,aAAe,K,0CAOJY,GACdA,IAAahH,KAAK6F,eACpB7F,KAAK6F,aAAemB,EACpBhH,KAAK0G,kBAAoB1G,KAAK8F,UAAU9F,KAAK6F,cAAcoB,MAC3DjH,KAAKkG,6B,+oDC5FUgB,E,sQAiBnB,WAAYhE,EAAS9F,EAAGC,GAAG,a,4FAAA,aACzB,cAAM6F,IADmB,aAfd,GAec,qFAZZ,CACbiE,IAAK,KACLC,KAAM,KACNC,WAAY,KACZC,MAAO,KACPC,OAAQ,OAOiB,oBALf,GAKe,wBAJV,GAIU,kBAHhB,GAGgB,qBAFb,GAIZ,EAAKC,gBAAkB,IAAInC,EAAUoC,IAAQ,CAACrK,EAAG,GAAIC,EAAG,IAAK,CAC3D,KAAQ,CACNoJ,UAAU,EACVK,OAAQ,GAEV,IAAO,CACLL,UAAU,EACVE,KAAM,EACNC,GAAI,EACJC,MAAM,GAER,KAAQ,CACNJ,UAAU,EACVE,KAAM,GACNC,GAAI,GACJC,MAAM,IAEP,OAAQ,KACX,EAAKa,aAAe,EAAKF,gBAAgBrB,OACzC,EAAKwB,YAAezE,EAAQG,eAAiB,EAAKuE,WAAa,EAAKF,aAAa9L,OACjF,EAAK8L,aAAa5H,MAAMC,IAAI,EAAK4H,aACjC,EAAKD,aAAaG,OAAO9H,IAAI,IAC7B,EAAK2H,aAAatK,EAAI,EAAKsK,aAAa5L,MAAQ,EAChD,EAAK4L,aAAarK,EAAI,EAAKqK,aAAa9L,OAAS,EACjD,EAAKiI,UAAUzG,EAAIA,EAAI,EAAK8F,QAAQG,eACpC,EAAKQ,UAAUxG,EAAIA,EAAI,EAAK6F,QAAQG,eACpC,EAAKQ,UAAUjH,SAAS,EAAK8K,cA5BJ,E,8DAgCzB1H,KAAK8H,aAAaX,IAAM9C,EAAS,KACjCrE,KAAK8H,aAAaP,OAASlD,EAAS,QACpCrE,KAAK8H,aAAaV,KAAO/C,EAAS,KAClCrE,KAAK8H,aAAaT,WAAahD,EAAS,KACxCrE,KAAK8H,aAAaR,MAAQjD,EAAS,KACnCrE,KAAK8H,aAAaX,IAAI3C,MAAQxE,KAAK+H,KAAKlN,KAAKmF,MAC7CA,KAAK8H,aAAaP,OAAO/C,MAAQxE,KAAKgI,YAAYnN,KAAKmF,MACvDA,KAAK8H,aAAaP,OAAO9C,QAAUzE,KAAKiI,WAAWpN,KAAKmF,MACxDA,KAAKwH,gBAAgBP,QACrBzL,IAAK0M,OAAOC,gBAAgB,0BAA2BnI,KAAKoI,iBAAiBvN,KAAKmF,S,8CAIlFA,KAAK8H,aAAaX,IAAIhC,cACtBnF,KAAK8H,aAAaP,OAAOpC,cACzBnF,KAAK8H,aAAaT,WAAWlC,cAC7BnF,KAAK8H,aAAaV,KAAKjC,cACvBnF,KAAK8H,aAAaR,MAAMnC,cACxB3J,IAAK0M,OAAOG,mBAAmB,0BAA2BrI,KAAKoI,iBAAiBvN,KAAKmF,OACrFA,KAAKwH,gBAAgBnB,S,6BAIrB,GAAI7K,IAAK2H,cAAc3E,iBAAkB,CACvC,GAAIwB,KAAKsI,gBAAkB,EACzB,OACFtI,KAAKsI,iBACL,4C,oCAKFtI,KAAKuI,WAAY,I,mCAIjBvI,KAAKuI,WAAY,I,6BAGZ7K,GAaL,GAZIsC,KAAKoE,UAAY5I,IAAK2H,cAAc3E,iBAEpCwB,KAAK8H,aAAaR,MAAMhD,QACvBtE,KAAK8H,aAAaV,KAAK9C,QAAUtE,KAAK8H,aAAaT,WAAW/C,OAE/DtE,KAAKwH,gBAAgBgB,oBAAoB,OAEzCxI,KAAKwH,gBAAgBgB,oBAAoB,QAE3CxI,KAAKwH,gBAAgBgB,oBAAoB,QAE3C,0CAAa9K,GACTlC,IAAK2H,cAAc3E,iBAAkB,CACvC,GAAIwB,KAAK8H,aAAaR,MAAMhD,OAAQ,CAClCtE,KAAK0H,aAAa5H,MAAM1C,EAAI4C,KAAK2H,YACjC,IAAMjE,EAAM1D,KAAK2D,cACbD,EAAItG,EAAI4C,KAAKyI,SAAWzI,KAAKkD,QAAQG,eAAiB,MACxDK,EAAItG,GAAK,GAAMM,EAAQsC,KAAKkD,QAAQG,eAAiB,KAEzD,GAAIrD,KAAK8H,aAAaV,KAAK9C,QAAUtE,KAAK8H,aAAaT,WAAW/C,OAAQ,CACxEtE,KAAK0H,aAAa5H,MAAM1C,GAAK,EAAI4C,KAAK2H,YACtC,IAAMjE,EAAM1D,KAAK2D,cACbD,EAAItG,GAAK,EAAI4C,KAAKyI,SAAWzI,KAAKkD,QAAQG,eAAiB,MAC7DK,EAAItG,GAAK,GAAMM,EAAQsC,KAAKkD,QAAQG,eAAiB,KAErDrD,KAAKuI,YACKvI,KAAK2D,cACbtG,GAAK,GAAMK,EAAQsC,KAAKkD,QAAQG,eAAiB,Q,uCAK1CqF,GACXA,EACF1I,KAAKwH,gBAAgBmB,SAErB3I,KAAKwH,gBAAgBoB,U,iCAIvB,6CACA5I,KAAKsI,eAAiB,O,8BAlIUrF,G,8nDCDf4F,E,sQAMnB,WAAY3F,EAAS9F,EAAGC,GAAG,O,4FAAA,aACzB,cAAM6F,IADmB,mCAJjB,GAIiB,eAHnB,GAGmB,wBAFX,GAId,EAAKiD,OAAS,IAAI5K,KAAKyH,OAAOxH,IAAKC,IAAIqB,OAAOuF,UAAUoF,KAAQrF,SAChE,IAAMuF,EAAwC,EAAzBzE,EAAQG,eAAuB,EAAK8C,OAAOvK,OAHvC,OAIzB,EAAKuK,OAAOrG,MAAMC,IAAI4H,GACtB,EAAK9D,UAAUxG,EAAIA,EAAI6F,EAAQG,eAC/B,EAAKQ,UAAUzG,EAAIA,EAAI8F,EAAQG,eAC/B,EAAKQ,UAAUjH,SAAS,EAAKuJ,QAC7B,EAAKjC,YAAY,CAAC9G,EAAG,EAAGC,EAAG,EAAKsG,cAActG,IARrB,E,gDAWhBoK,GACT,IAAIqB,EAAiBrB,EAAOhE,cACxBsF,EAAc/I,KAAKyD,cACnBuF,EAAY,IAAIzN,KAAKmH,UAAUoG,EAAe1L,EAAG0L,EAAezL,EAAGoK,EAAOC,aAAa5L,MAAO2L,EAAOC,aAAa9L,QAClHqN,EAAS,IAAI1N,KAAKmH,UAAUqG,EAAY3L,EAAG2L,EAAY1L,EAAG2C,KAAKmG,OAAOrK,MAAOkE,KAAKmG,OAAOvK,QAC7F,QAASsN,IAA2BF,EAAWC,K,6BAK/C,IAAME,EAAUnJ,KAAKyD,cACf2F,EAAkBpJ,KAAKqJ,QAAWF,EAAQ/L,EAAI4C,KAAKmG,OAAOrK,MAAQqN,EAAQ/L,EAC1EkM,EAAgBH,EAAQ9L,EAAI2C,KAAKmG,OAAOvK,OACxC2N,EAAUvJ,KAAKkD,QAAQsG,aAAa,CAACpM,EAAGgM,EAAgB/L,EAAGiM,EAAgB,KAEjB,IAA5DtJ,KAAKkD,QAAQuG,QAAQ,CAACrM,EAAGmM,EAAQnM,EAAGC,EAAGkM,EAAQlM,EAAI,QAG4C,IAAxF2C,KAAKkD,QAAQuG,QAAQ,CAACrM,EAAGmM,EAAQnM,GAAM4C,KAAKqJ,SAAY,EAAI,GAAIhM,EAAGkM,EAAQlM,EAAI,MAGK,IAApF2C,KAAKkD,QAAQuG,QAAQ,CAACrM,EAAGmM,EAAQnM,GAAM4C,KAAKqJ,SAAY,EAAI,GAAIhM,EAAGkM,EAAQlM,MAGa,IAAxF2C,KAAKkD,QAAQuG,QAAQ,CAACrM,EAAGmM,EAAQnM,GAAM4C,KAAKqJ,SAAY,EAAI,GAAIhM,EAAGkM,EAAQlM,EAAI,OAJxF2C,KAAKqJ,SAAWrJ,KAAKqJ,SASvBrJ,KAAKkE,YAAY,CAAC9G,EAAG4C,KAAK0J,OAAU1J,KAAKqJ,SAAY,EAAI,GAAKrJ,KAAKkD,QAAQG,eAAiB,IAAMhG,EAAG2C,KAAK2D,cAActG,O,6BAGnHK,EAAO+J,GACZ,0CAAa/J,GACTsC,KAAK2J,WAAWlC,IAAWzH,KAAK4J,gBAClCpO,IAAK0M,OAAO2B,aAAa,kBACzB7J,KAAK4J,eAAgB,GAEvB5J,KAAK8J,Y,8BAvDwB7G,G,kSCHZ8G,E,WAanB,WAAYC,EAAmB3I,I,4FAAgB,4BAXnC,IAAI9F,KAAKuD,WAW0B,4HAPlC,CAAC1B,EAAG5B,IAAKC,IAAIY,SAASP,MAAOuB,EAAG7B,IAAKC,IAAIY,SAAST,SAQ7DoE,KAAK6D,UAAUjH,SAASyE,GACxBrB,KAAKqB,eAAiBA,EACtBrB,KAAKiK,oBAAsBjK,KAAKqB,eAAevF,MAC/CkE,KAAKgK,kBAAoBA,E,wDAIzB,IAAME,EAAqBlK,KAAKgK,kBAAkB5M,EAC9C+M,EAAY9J,KAAK+J,OAAQ,EAAIF,EAAsBlK,KAAKqK,WAAWjN,EAAI,GACvE+M,EAAY,IACdA,EAAaD,EAAqB,GAAM,EAAIA,EAAqB,GAC/DC,GAAa,EAAInK,KAAKiK,oBAAsBjK,KAAKqK,WAAWjN,IAC9D+M,GAAa,EAAInK,KAAKiK,oBAAsBjK,KAAKqK,WAAWjN,GAC9D4C,KAAKqB,eAAejE,EAAI+M,O,kUC3BPG,E,WAWnB,WAAYC,EAAUC,I,4FAAgB,yFAP1B3L,GAO0B,yBANrB,GAOfmB,KAAKyK,OAASF,EACdvK,KAAKwK,eAAiBA,E,wDAWQ,mBAAnBxK,KAAK0K,YACV1K,KAAK2K,UACF3K,KAAK4K,iBACR5K,KAAK0K,YACL1K,KAAK4K,gBAAiB,GAGxB5K,KAAK4K,gBAAiB,K,gCAX1B,OAAO1B,IAA2BlJ,KAAKyK,OAAQzK,KAAKwK,qB,kVCjBnCK,E,WASnB,WAAYpD,EAAQvE,EAApB,GAA+D,IAAjC9F,EAAiC,EAAjCA,EAAGC,EAA8B,EAA9BA,EAAGrF,EAA2B,EAA3BA,OAAQ0N,EAAmB,EAAnBA,MAAOoF,EAAY,EAAZA,W,4FAAY,4BARnD,IAAIvP,KAAKuD,WAQ0C,gBAPtD,IAOsD,wBAN/C,GAM+C,kBALrD,GAKqD,kFAC3C,QAAdgM,GAAqBzN,IACP,SAAdyN,GAAsB1N,IAC1BA,GAAQ8F,EAAQG,eAChBhG,GAAQ6F,EAAQG,eAChB,IAAM0H,EAAY7H,EAAQG,eACpB2H,EAAY9H,EAAQG,eAAiB,GAGrC4H,EAAe,IAAI1P,KAAKyH,OAAOxH,IAAKC,IAAIqB,OAAOuF,UAAU6I,KAAiB9I,SAQhF,OANA6I,EAAanP,MAAQiP,EACrBE,EAAarP,OAAqB,EAAZoP,EACtBC,EAAa7N,EAAIA,EACjB6N,EAAa5N,EAAIA,EACjB4N,EAAapD,OAAO9H,IAAI,GAAK,GAErB+K,GACN,IAAK,OACHzN,GAAiB,EAAZ2N,EACP,IAAK,QACH3N,GAAK0N,EAAY,EAAIC,EACrBC,EAAa5N,GAAK0N,EAAY,EAC9B,MACF,IAAK,MACL,IAAK,SACH3N,GAAK2N,EAAY,EAAIC,EACrBC,EAAa7N,GAAK2N,EAAY,EAIlC,OAAQD,GACN,IAAK,OACHG,EAAaE,OAAS,GACtB,MACF,IAAK,QACHF,EAAaE,MAAQ,GACrB,MACF,IAAK,SACHF,EAAaE,MAAQ,IAKzB,IAAK,IAAIrT,EAAI,EAAGA,GAAKE,EAAS,EAAGF,IAE/BkI,KAAKmG,OAAO7N,KAAK,IAAIiD,KAAKyH,OAAOxH,IAAKC,IAAIqB,OAAOuF,UAAU+I,KAAUhJ,UACrEpC,KAAKmG,OAAOrO,GAAGgE,MAAoB,EAAZkP,EACvBhL,KAAKmG,OAAOrO,GAAG8D,OAASsH,EAAQG,eACd,QAAdyH,GACF9K,KAAKmG,OAAOrO,GAAGuF,EAAIA,EAAI2C,KAAKmG,OAAOrO,GAAG8D,QAAU9D,EAAI,GACpDkI,KAAKmG,OAAOrO,GAAGsF,EAAIA,GACI,WAAd0N,GACT9K,KAAKmG,OAAOrO,GAAGuF,EAAIA,EAAI2C,KAAKmG,OAAOrO,GAAG8D,OAAS9D,EAC/CkI,KAAKmG,OAAOrO,GAAGsF,EAAIA,GACI,SAAd0N,GACT9K,KAAKmG,OAAOrO,GAAGqT,OAAS,GACxBnL,KAAKmG,OAAOrO,GAAGuF,EAAIA,EACnB2C,KAAKmG,OAAOrO,GAAGsF,EAAIA,EAAI4C,KAAKmG,OAAOrO,GAAG8D,QAAU9D,EAAI,KAEpDkI,KAAKmG,OAAOrO,GAAGqT,MAAQ,GACvBnL,KAAKmG,OAAOrO,GAAGuF,EAAIA,EACnB2C,KAAKmG,OAAOrO,GAAGsF,EAAIA,EAAI4C,KAAKmG,OAAOrO,GAAG8D,QAAU9D,EAAI,IAGtDkI,KAAKqL,aAAerL,KAAKmG,OAAOrO,GAAG8D,OACnCoE,KAAK6D,UAAUjH,SAASoD,KAAKmG,OAAOrO,IAIpCkI,KAAKsL,YAAc,IAAIhB,EADP,QAAdQ,GAAqC,WAAdA,EAEvB,IAAIvP,KAAKmH,UACP1C,KAAKmG,OAAO,GAAG/I,EACf4C,KAAKmG,OAAsB,WAAd2E,EAA0B,EAAI9K,KAAKmG,OAAOnO,OAAS,GAAGqF,EACnE2C,KAAKmG,OAAO,GAAGrK,MACfkE,KAAKmG,OAAO,GAAGvK,OAASoE,KAAKmG,OAAOnO,QAMtC,IAAIuD,KAAKmH,UACP1C,KAAKmG,OAAsB,UAAd2E,EAAyB,EAAI9K,KAAKmG,OAAOnO,OAAS,GAAGoF,GAAoB,UAAd0N,EAAyB9K,KAAKmG,OAAO,GAAGvK,OAAS,GACzHoE,KAAKmG,OAAO,GAAG9I,GAAoB,UAAdyN,EAAyB,GAAK,GAAK9K,KAAKmG,OAAO,GAAGrK,MACvEkE,KAAKmG,OAAO,GAAGvK,OAASoE,KAAKmG,OAAOnO,OACpCgI,KAAKmG,OAAO,GAAGrK,OARjB2L,EAAO5D,WAcX7D,KAAK6D,UAAUjH,SAASqO,GAExBjL,KAAK0F,MAAQA,EACb1F,KAAKoG,YAAcpG,KAAKuL,gBACxBvL,KAAKsL,YAAYZ,UAAY1K,KAAKwL,MAAM3Q,KAAKmF,M,uDAIzCA,KAAK4J,gBACP5J,KAAK4J,eAAgB,EACrBpO,IAAK0M,OAAO2B,aAAa,qB,sCAIb,WAEd,OAAOvD,aAAY,YACG,IAAhB,EAAKZ,QACP,EAAK+F,SAAW,EAAKA,SAGvB,IADA,IAAIC,EAAS,EAAKD,QAAU,EAAI,EACvB3T,EAAI,EAAGA,EAAI,EAAKqO,OAAOnO,OAAQF,IACtC,EAAKqO,OAAOrO,GAAG4T,MAAQA,IAGxB1L,KAAK0F,S,mCAIRqB,cAAc/G,KAAKoG,e,+BAIfpG,KAAKyL,SACPzL,KAAKsL,YAAY3N,c,0UCvIFgO,E,WAKnB,WAAYlE,EAAQrK,EAAGC,EAAGgG,I,4FAAgB,4BAJ9B,IAAI9H,KAAKuD,WAIqB,eAHlC,CAAC8M,MAAO,EAAGC,KAAM,IAGiB,wCADlC,GAEN7L,KAAKmG,OAAU,IAAI5K,KAAKyH,OAAOxH,IAAKC,IAAIqB,OAAOuF,UAAUyJ,KAAU1J,SACnEpC,KAAKmG,OAAOrK,MAAQuH,EACpBrD,KAAKmG,OAAOvK,OAASyH,EAErBrD,KAAK6D,UAAUzG,EAAIA,EAAIiG,EACvBrD,KAAK6D,UAAUxG,EAAIA,EAAIgG,EACvBrD,KAAK6D,UAAUjH,SAASoD,KAAKmG,QAC7BnG,KAAK+L,SAAW,IAAIzB,EAClB,IAAI/O,KAAKmH,UACP1C,KAAK6D,UAAUzG,EACf4C,KAAK6D,UAAUxG,EACf2C,KAAKmG,OAAOrK,MACZkE,KAAKmG,OAAOvK,QAEd6L,EAAO5D,WAET7D,KAAK+L,SAASrB,UAAY1K,KAAKgM,OAAOnR,KAAKmF,M,wDAI3CA,KAAKiM,OAAQ,EACbjM,KAAK+L,SAASrB,eAAY7L,EAC1BmB,KAAK6D,UAAUqI,YAAYlM,KAAKmG,QAChCgG,QAAQC,IAAI,Y,+BAGL,OAAOpM,KAAKiM,Q,+BAGnBjM,KAAK+L,SAASpO,c,kUCrCG0O,E,WAInB,c,4FAAc,4BAHF,IAAI9Q,KAAKuD,WAGP,oBAFD,CAAC1B,EAAG5B,IAAKC,IAAIY,SAASP,MAAOuB,EAAG7B,IAAKC,IAAIY,SAAST,S,sDAIxD8B,S,w3CCLY4O,G,wQAanB,aAAc,a,4FAAA,eACZ,gBADY,aAXD,IAAI/Q,KAAK8D,UAWR,uBAVA,IAAI9D,KAAK4D,KAAK,eAAgB,CAC1CH,WAAY,iBACZE,KAAM,UAQM,4BANK,IAAI3D,KAAK4D,KAAK,KAAM,CACrCH,WAAY,iBACZE,KAAM,OACND,SAAU,MAKV,EAAKsN,WAAW7L,UAAU,SAC1B,EAAK6L,WAAW5L,YAAY,CAC1B,IAAIpF,KAAKqF,MAAM,GAAG,IAClB,IAAIrF,KAAKqF,MAAM,IAAI,GACnB,IAAIrF,KAAKqF,MAAM,IAAK,KACpB,IAAIrF,KAAKqF,MAAM,GAAI,OAErB,EAAK2L,WAAW1L,UAChB,EAAKgD,UAAUzG,EAAI,EAAKiN,WAAWjN,EAAI,IACvC,EAAKyG,UAAUxG,EAAI,EAAKgN,WAAWhN,EAAI,IACvC,EAAKmP,YAAYpP,EAAI,GACrB,EAAKoP,YAAYnP,EAAI,GACrB,EAAKoP,iBAAiBrP,EAAI,GAC1B,EAAKqP,iBAAiBpP,EAAI,GAC1B,EAAKwG,UAAUjH,SAAS,EAAK2P,YAC7B,EAAK1I,UAAUjH,SAAS,EAAK6P,kBAC7B,EAAK5I,UAAUjH,SAAS,EAAK4P,aAC7BhR,IAAK0M,OAAOC,gBAAgB,0BAA2B,EAAKuE,kBAAkB7R,KAAvB,QAnB3C,E,uDAsBI6N,GACZA,GACF1I,KAAKyM,iBAAiB7N,KAAO,KAC7BoB,KAAKyM,iBAAiBE,MAAMzN,KAAO,SAEnCc,KAAKyM,iBAAiB7N,KAAO,MAC7BoB,KAAKyM,iBAAiBE,MAAMzN,KAAO,a,gCAzCKmN,G,koDCCzBO,G,wQAsBnB,aAAc,a,4FAAA,eACZ,gBADY,aApBD,IAAIrR,KAAK8D,UAoBR,0BAnBG,CACf,sBACA,SACA,wBACA,sBACA,kBACA,wBACA,kBACA,yBAWY,qBATF,IAAI9D,KAAKwD,UAAU,CAC7BC,WAAY,iBACZC,SAAU,GACVC,KAAM,WAMM,gBAJP,IAAI3D,KAAK4D,KAAK,EAAK0N,eAAe,GAAI,EAAKC,YAIpC,oDAFA,GAIZ,EAAKP,WAAW7L,UAAU,SAC1B,EAAK6L,WAAW5L,YAAY,CAC1B,IAAIpF,KAAKqF,MAAM,EAAE,GACjB,IAAIrF,KAAKqF,MAAM,IAAI,KACnB,IAAIrF,KAAKqF,MAAM,IAAK,KACpB,IAAIrF,KAAKqF,MAAM,GAAI,OAErB,EAAK2L,WAAW1L,UAChB,EAAK0L,WAAWnP,GAAK,EAAI,EAAKmP,WAAWzQ,MACzC,EAAKiR,SAAWxR,KAAKyF,YAAYC,YAAY,EAAKrC,KAAKA,KAAM,EAAKkO,WAClE,EAAKlO,KAAKxB,GAAK,EAAI,EAAK2P,SAASjR,MACjC,EAAK+H,UAAUxG,EAAI,EAAKgN,WAAWhN,EAAI,EAAI,EAAKkP,WAAW3Q,OAAS,EACpE,EAAKiI,UAAUjH,SAAS,EAAK2P,YAC7B,EAAK1I,UAAUjH,SAAS,EAAKgC,MAC7BpD,IAAK0M,OAAOC,gBAAgB,iBAAkB,EAAK6E,UAAUnS,KAAf,QAhBlC,E,iDAoBZ,IAAM0F,EAASF,KAAKC,MAAMD,KAAKE,SAAWP,KAAK6M,eAAe7U,QAC9DgI,KAAKpB,KAAKA,KAAOoB,KAAK6M,eAAetM,GACrCP,KAAK+M,SAAWxR,KAAKyF,YAAYC,YAAYjB,KAAKpB,KAAKA,KAAMoB,KAAK8M,WAClE9M,KAAKpB,KAAKxB,GAAK,EAAI4C,KAAK+M,SAASjR,MACjCkE,KAAKpB,KAAKvB,EAAI2C,KAAKuM,WAAW3Q,OAAS,EAAIoE,KAAK+M,SAASnR,OAAS,EAClEoE,KAAKuM,WAAWnP,EAAI4C,KAAKqK,WAAWjN,EACpC4C,KAAKiN,aAAc,EACnBzR,IAAK2H,cAAczE,QAAS,I,6BAGvBhB,GACL,4CAAaA,GACTsC,KAAKiN,cACHjN,KAAKpB,KAAKxB,EAAI4C,KAAKqK,WAAWjN,IAC5B4C,KAAKpB,KAAKxB,EAAI4C,KAAKuM,WAAWnP,GAAK4C,KAAKpB,KAAKxB,EAAI4C,KAAK+M,SAASjR,MAAQkE,KAAKuM,WAAWnP,EAAI4C,KAAKuM,WAAWzQ,MAC7GkE,KAAKpB,KAAKxB,GAAa,GAARM,EAEfsC,KAAKpB,KAAKxB,GAAa,EAARM,GAGfsC,KAAKuM,WAAWnP,EAAI4C,KAAKuM,WAAWzQ,MAAQ,IAC1CkE,KAAKpB,KAAKxB,EAAI4C,KAAKuM,WAAWnP,GAAK4C,KAAKpB,KAAKxB,EAAI4C,KAAK+M,SAASjR,MAAQkE,KAAKuM,WAAWnP,EAAI4C,KAAKuM,WAAWzQ,MAC7GkE,KAAKuM,WAAWnP,GAAa,GAARM,EAErBsC,KAAKuM,WAAWnP,GAAa,EAARM,GAGnBsC,KAAKpB,KAAKxB,EAAI4C,KAAKqK,WAAWjN,GAAQ4C,KAAKuM,WAAWnP,EAAI4C,KAAKuM,WAAWzQ,MAAQ,IACtFkE,KAAKiN,aAAc,EACnBzR,IAAK2H,cAAczE,QAAS,EAC5BlD,IAAK0M,OAAO2B,aAAa,wB,gCAxEQwC,G,uuCCApBa,G,wQAInB,aAAc,M,MAAA,O,4FAAA,SACZ,e,EADY,M,EAAA,iB,EAFG,IAAIvO,KAAO,a,6FAI1B,EAAKwO,eAAe/P,EAAI,GACxB,EAAK+P,eAAe9P,EAAI,GACxB,EAAK8P,eAAerM,QAAU,EAAKsM,aAAavS,KAAlB,OAC9B,EAAKgJ,UAAUjH,SAAS,EAAKuQ,gBALjB,E,oDASZ3R,IAAKiB,aAAa2B,YAAc,gB,gCAbIiO,G,yzCCAnBgB,G,WASnB,c,4FAAc,6BARF,IAAI9R,KAAKuD,WAQP,cANR,CACJ,IAAIwN,GACJ,IAAIM,GACJ,IAAIM,KAGQ,WACGlN,KAAKsN,KADR,IACZ,2BAAyB,KAAhBC,EAAgB,QACvBvN,KAAK6D,UAAUjH,SAAS2Q,EAAG1J,YAFjB,+B,sDAMPnG,GAAO,WACGsC,KAAKsN,KADR,IACZ,2BAAyB,QACpB3P,OAAOD,GAFA,iC,wCAMImG,GAChBA,EAAUjH,SAASoD,KAAK6D,gB,wVCpBP2J,G,WAcnB,WAAYC,EAAKC,EAAUC,I,4FAAc,6BAb7B,IAAIpS,KAAKuD,WAaoB,kBAZ/B,IAY+B,+CAV5B,IAU4B,gBATjC,GASiC,iBARhC,GAQgC,yBAPxB,GAQfkB,KAAK4N,QAAU,IAAI1Q,KAAQyQ,EAAc,CAACvQ,EAAG,GAAIC,EAAG,KAEpD,IADA,IAAMwQ,EAAQJ,EAAIK,MAAM,MACf1Q,EAAI,EAAGA,EAAIyQ,EAAM7V,OAAQoF,IAAK,CACrC,IACM2Q,EADOF,EAAMzQ,GACA0Q,MAAM,KAAKL,KAAI,SAACO,GACjC,OAAOC,OAAOD,MAEK,IAAjBD,EAAM/V,QAAkC,IAAjB+V,EAAM/V,QAA6B,IAAb+V,EAAM,IAEvD/N,KAAKkD,QAAQ5K,KAAKyV,GAEpB/N,KAAKlE,MAAQkE,KAAKkD,QAAQ,GAAGlL,OAC7BgI,KAAKpE,OAASoE,KAAKkD,QAAQlL,OAC3BgI,KAAKqD,eAAiBhD,KAAK+J,MAAMsD,EAAW1N,KAAKpE,QACjDoE,KAAKkO,yB,6DAIL/B,QAAQgC,MAAM,WACdhC,QAAQiC,KAAK,QACbjC,QAAQkC,MAAMrO,KAAKkD,SACnBiJ,QAAQiC,KAAK,SAAUpO,KAAKlE,MAAO,UAAWkE,KAAKpE,QACnDuQ,QAAQmC,a,kCAOEC,GAEV,IADA,IAAMC,EAAkBxO,KAAKwJ,aAAa+E,GACjClR,EAAImR,EAAgBnR,EAAI,EAAGA,EAAImR,EAAgBnR,EAAI,EAAGA,IAC7D,IAAK,IAAID,EAAIoR,EAAgBpR,EAAI,EAAGA,EAAIoR,EAAgBpR,EAAI,EAAGA,IAC7D,KAAIA,EAAI,GAAKC,EAAI,GAAKD,EAAI4C,KAAKlE,MAAQ,GAAKuB,EAAI2C,KAAKpE,OAAS,GAA9D,CAEA,IAAMuK,EAASnG,KAAKyO,WAAWpR,GAAGD,GAClC,GAAI+I,EAAQ,CACV,GAAIA,EAAO/I,EAAImR,EAAYnR,EAAI,KAAO+I,EAAO/I,EAAImR,EAAYnR,EAAI,IAC/D,SACF,GAAI+I,EAAO9I,EAAIkR,EAAYlR,EAAI,KAAO8I,EAAO9I,EAAIkR,EAAYlR,EAAI,IAC/D,SACF,IAAMqR,EAAc,IAAInT,KAAKmH,UAAUyD,EAAO/I,EAAG+I,EAAO9I,EAAG8I,EAAOrK,MAAOqK,EAAOvK,QAChF,GAAIsN,IAA2BqF,EAAaG,GAC1C,OAAOA,M,sCAaI,IAAPtR,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACf,MAAO,CACLD,EAAGiD,KAAKC,MAAMlD,EAAI4C,KAAKqD,gBACvBhG,EAAGgD,KAAKC,MAAMjD,EAAI2C,KAAKqD,mB,gDASI,IAAPjG,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACzB,MAAO,CACLD,EAAGA,EAAI4C,KAAKqD,eACZhG,EAAGA,EAAI2C,KAAKqD,kB,iCAUA,IAAPjG,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACV,KAAGD,EAAI4C,KAAKlE,MAAQ,GAAKsB,EAAI,GAAKC,EAAI2C,KAAKpE,OAAS,GAAKyB,EAAI,GAG7D,OAAO2C,KAAKkD,QAAQ7F,GAAGD,K,+CAIvB,IAAK,IAAIC,EAAI,EAAGA,EAAI2C,KAAKpE,OAAQyB,IAAK,CACpC2C,KAAKyO,WAAWpR,GAAK,GACrB,IAAK,IAAID,EAAI,EAAGA,EAAI4C,KAAKlE,MAAOsB,IAC9B,IAA4B,IAAxB4C,KAAKkD,QAAQ7F,GAAGD,GAAW,CAC7B,IAAMuR,EAAO3O,KAAK4N,QAAQgB,UAAU5O,KAAKkD,QAAQ7F,GAAGD,IACpDuR,EAAKvR,EAAI4C,KAAKqD,eAAiBjG,EAC/BuR,EAAKtR,EAAI2C,KAAKqD,eAAiBhG,EAC/BsR,EAAK7S,MAAQkE,KAAKqD,eAClBsL,EAAK/S,OAASoE,KAAKqD,eACnBrD,KAAK6D,UAAUjH,SAAS+R,GACxB3O,KAAKyO,WAAWpR,GAAG/E,KAAKqW,QAExB3O,KAAKyO,WAAWpR,GAAG/E,UAAKuG,S,iyFC5GbgQ,G,wQAqBnB,WAAYpB,GAA6B,MAAxBqB,EAAwB,uDAAZ,WAU3B,GAVuC,iBACvC,gBADuC,mGAhB1B,CACbC,cAAe,OAewB,kCAbhB,IAAIxT,KAAKuD,WAaO,2GAThC,IASgC,gBARlC,IAQkC,wBAP1B,IAO0B,qBAN7B,IAQV,EAAKgQ,UAAYA,EACjB,EAAK5L,QAAU,IAAInG,IAAQ0Q,EAAKjS,IAAKC,IAAIuT,OAAOpT,QAChD,EAAKqT,YAAc,IAAIzB,GAAcC,EAAIwB,YAAazT,IAAKC,IAAIuT,OAAOpT,OAAQsT,MAC9E,EAAKzH,OAAS,IAAIP,EAAO,EAAKhE,QAASuK,EAAI0B,kBAAkBlI,MAAM7J,EAAGqQ,EAAI0B,kBAAkBlI,MAAM5J,GAClGlC,OAAOsM,OAAS,EAAKA,OACrBtM,OAAO+H,QAAU,EAAKA,QACtB,EAAKkM,uBAAuBxS,SAAS,EAAKqS,YAAYpL,WAElD4J,EAAI0B,mBAAqB1B,EAAI0B,kBAAkBE,WAAY,CAC7D,IAAMC,EAAa,EAAKpM,QAAQqM,uBAAuB9B,EAAI0B,kBAAkBE,YAC7E,EAAKA,WAAa,IAAI/E,EACpB,IAAI/O,KAAKmH,UACP4M,EAAWlS,EACXkS,EAAWjS,EACXoQ,EAAI0B,kBAAkBE,WAAWvT,MAAQ,EAAKoH,QAAQG,eACtDoK,EAAI0B,kBAAkBE,WAAWzT,OAAS,EAAKsH,QAAQG,gBAEzD,EAAKoE,OAAO5D,WAEd,EAAKwL,WAAW3E,UAAY,EAAK8E,iBAAiB3U,KAAtB,OAG9BM,OAAOkU,WAAa,EAAKA,WAxBc,WAyBf5B,EAAI0B,kBAAkB7D,aAzBP,IAyBvC,2BAA2D,KAAhDmE,EAAgD,QACnDC,EAAQ,IAAI7E,EAAM,EAAKpD,OAAQ,EAAKvE,QAASuM,GACnD,EAAKE,OAAOrX,KAAKoX,GACjB,EAAKN,uBAAuBxS,SAAS8S,EAAM7L,YA5BN,yCA8BlB4J,EAAI0B,kBAAkBS,UA9BJ,IA8BvC,2BAAqD,KAA1CC,EAA0C,QAC7CC,EAAM,IAAIjH,EAAI,EAAK3F,QAAS2M,EAAOzS,EAAGyS,EAAOxS,GACnD,EAAK0S,KAAKzX,KAAKwX,GACf,EAAKV,uBAAuBxS,SAASkT,EAAIjM,YAjCJ,yCAmCT4J,EAAI0B,kBAAkBa,cAnCb,IAmCvC,2BAAkE,KAAvDC,EAAuD,QAC1DC,EAAc,IAAIvE,EACtB,EAAKlE,OACLwI,EAAgB7S,EAChB6S,EAAgB5S,EAChB,EAAK6F,QAAQG,gBACf,EAAK2M,aAAa1X,KAAK4X,GACvB,EAAKd,uBAAuBxS,SAASsT,EAAYrM,YA1CZ,qCA4CvC,EAAKsM,cAAgB,IAAI9C,GACzB,EAAK+B,uBAAuBxS,SAAS,EAAKsG,QAAQW,WAClD,EAAKuL,uBAAuBxS,SAAS,EAAK6K,OAAO5D,WACjD,EAAKuM,OAAS,IAAIrG,EAAO,EAAKtC,OAAO5D,UAAW,EAAKuL,wBACrD,EAAKe,cAAcE,kBAAkB,EAAKD,OAAOvM,WACjD,EAAKxC,eAAezE,SAAS,EAAKwT,OAAOvM,WAjDF,E,4CAoDlCnG,GACL,4CAAaA,GACbsC,KAAKmQ,cAAcxS,OAAOD,GACtBlC,IAAK2H,cAAczE,SAEvBsB,KAAKyH,OAAO9J,OAAOD,GACnBsC,KAAKoQ,OAAOzS,SACZqC,KAAKsQ,eACLtQ,KAAKuQ,WAAW7S,GAChBsC,KAAKwQ,oBACLxQ,KAAKmQ,cAAcxS,OAAOD,GAC1BsC,KAAKqP,WAAW1R,Y,qCAGH,WACOqC,KAAK2P,QADZ,IACb,2BAAiC,QACzBhS,SAFK,iC,iCAMJD,GAAO,WACEsC,KAAK+P,MADP,IAChB,2BAA6B,QACvBpS,OAAOD,EAAOsC,KAAKyH,QAFT,iC,0CAME,WACQzH,KAAKgQ,cADb,IAClB,2BAA6C,QAC/BrS,SAFI,iC,qCAOlBnC,IAAK2H,cAAc3E,kBAAmB,EACtC,mDACAwB,KAAKyH,OAAOgJ,yBACZzQ,KAAK8H,aAAaiH,cAAgB1K,EAAS,KAC3CrE,KAAK8H,aAAaiH,cAAcvK,MAAQxE,KAAK0Q,cAAc7V,KAAKmF,Q,mCAIhE,iDACAA,KAAKyH,OAAOkJ,wBACZ3Q,KAAK8H,aAAaiH,cAAc5J,cAChCnF,KAAK2P,OAAOiB,SAAQ,SAAA5C,GAAI,OAAIA,EAAK6C,kB,sCAIjC1E,QAAQC,IAAI,kBACZ5Q,IAAK2H,cAAc3E,kBAAoBhD,IAAK2H,cAAc3E,iBAC1DhD,IAAK0M,OAAO2B,aAAa,0BAA2BrO,IAAK2H,cAAc3E,oB,yCAIvE2N,QAAQiC,KAAK,sBADI,WAESpO,KAAKgQ,cAFd,IAEjB,2BACE,IAD2C,QAC1Bc,SACf,OAJa,8BAMjBtV,IAAKiB,aAAa2B,YAAc4B,KAAK8O,e,gCApIF1N,M,6BCdxB,I,QCeT2P,EAAc,CAClBC,OAAQ,CACNC,QCjBW,wkFDkBXhC,YElBW,6qGFmBXE,kB,OAEF+B,OAAQ,CACND,QDtBW,k9CCuBXhC,YGvBW,m1DHwBXE,kBAAmBgC,GAErBC,OAAQ,CACNH,QI3BW,6nFJ4BXhC,YK5BW,qoGL6BXE,kB,QAIW4B,O,+BMjCA,QAA0B,+C,6BCA1B,QAA0B,+C,6BCA1B,QAA0B,+C,6BCA1B,QAA0B,+C,6BCA1B,QAA0B,+C,6BCA1B,QAA0B,+C,6BCA1B,QAA0B,+C,6BCA1B,QAA0B,+C,kYCMpBhU,E,WA2BnB,WAAY0Q,EAAKC,I,4FAAU,4BApBf,IAAInS,KAAKuD,WAoBM,oBAnBd,CACX7B,MAAO,IAAI1B,KAAKuD,UAChBxB,KAAM,IAAI/B,KAAKuD,YAiBU,wBAdV/B,EAAQsU,YAAYC,OAcV,iBAbjB,IAaiB,oBAZd,CACXrU,MAAO,GACPK,KAAM,KAUmB,eARnB,GAQmB,gBAPlB,GAOkB,wBANV,GAQf,IADA,IAAMuQ,EAAQJ,EAAIwD,QAAQnD,MAAM,MACvB1Q,EAAI,EAAGA,EAAIyQ,EAAM7V,OAAQoF,IAAK,CACrC,IACM2Q,EADOF,EAAMzQ,GACA0Q,MAAM,KAAKL,KAAI,SAACO,GACjC,OAAOC,OAAOD,MAEK,IAAjBD,EAAM/V,QAAkC,IAAjB+V,EAAM/V,QAA6B,IAAb+V,EAAM,IAEvD/N,KAAKkD,QAAQ5K,KAAKyV,GAEpB/N,KAAKlE,MAAQkE,KAAKkD,QAAQ,GAAGlL,OAC7BgI,KAAKpE,OAASoE,KAAKkD,QAAQlL,OAC3BgI,KAAKqD,eAAiBhD,KAAK+J,MAAMsD,EAAW1N,KAAKpE,QAEjDoE,KAAKkO,yBACL1S,IAAK0M,OAAOC,gBAAgB,0BAA2BnI,KAAKuR,cAAc1W,KAAKmF,O,6DAI/EmM,QAAQgC,MAAM,WACdhC,QAAQiC,KAAK,QACbjC,QAAQkC,MAAMrO,KAAKkD,SACnBiJ,QAAQiC,KAAK,SAAUpO,KAAKlE,MAAO,UAAWkE,KAAKpE,QACnDuQ,QAAQmC,a,kCAOEC,GAEV,IADA,IAAMC,EAAkBxO,KAAKwJ,aAAa+E,GACjClR,EAAImR,EAAgBnR,EAAI,EAAGA,EAAImR,EAAgBnR,EAAI,EAAGA,IAC7D,IAAK,IAAID,EAAIoR,EAAgBpR,EAAI,EAAGA,EAAIoR,EAAgBpR,EAAI,EAAGA,IAC7D,KAAIA,EAAI,GAAKC,EAAI,GAAKD,EAAI4C,KAAKlE,MAAQ,GAAKuB,EAAI2C,KAAKpE,OAAS,GAA9D,CAEA,IAAMuK,EAASnG,KAAKyO,WAAWzO,KAAKwR,gBAAgBnU,GAAGD,GACvD,GAAI+I,EAAQ,CACV,GAAIA,EAAO/I,EAAImR,EAAYnR,EAAI,KAAO+I,EAAO/I,EAAImR,EAAYnR,EAAI,IAC/D,SACF,GAAI+I,EAAO9I,EAAIkR,EAAYlR,EAAI,KAAO8I,EAAO9I,EAAIkR,EAAYlR,EAAI,IAC/D,SACF,IAAMqR,EAAc,IAAInT,KAAKmH,UAAUyD,EAAO/I,EAAG+I,EAAO9I,EAAG8I,EAAOrK,MAAOqK,EAAOvK,QAChF,GAAIsN,IAA2BqF,EAAaG,GAC1C,OAAOA,M,sCAaI,IAAPtR,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACf,MAAO,CACLD,EAAGiD,KAAKC,MAAMlD,EAAI4C,KAAKqD,gBACvBhG,EAAGgD,KAAKC,MAAMjD,EAAI2C,KAAKqD,mB,gDASI,IAAPjG,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACzB,MAAO,CACLD,EAAGA,EAAI4C,KAAKqD,eACZhG,EAAGA,EAAI2C,KAAKqD,kB,iCAUA,IAAPjG,EAAO,EAAPA,EAAGC,EAAI,EAAJA,EACV,KAAGD,EAAI4C,KAAKlE,MAAQ,GAAKsB,EAAI,GAAKC,EAAI2C,KAAKpE,OAAS,GAAKyB,EAAI,GAG7D,OAAO2C,KAAKkD,QAAQ7F,GAAGD,K,oCAGXsL,GACZ1I,KAAK6D,UAAU4N,iBAEbzR,KAAKwR,eADH9I,EACoB3L,EAAQsU,YAAYC,MAEpBvU,EAAQsU,YAAYK,KAC5C1R,KAAK6D,UAAUjH,SAASoD,KAAK2R,WAAW3R,KAAKwR,mB,+CAI7C,cAAwBvZ,OAAO2Z,KAAK7U,EAAQsU,aAA5C,eAA0D,CAArD,IAAIQ,EAAW,KAClBA,EAAc9U,EAAQsU,YAAYQ,GAClC,IAAK,IAAIxU,EAAI,EAAGA,EAAI2C,KAAKpE,OAAQyB,IAAK,CACpC2C,KAAKyO,WAAWoD,GAAaxU,GAAK,GAClC,IAAK,IAAID,EAAI,EAAGA,EAAI4C,KAAKlE,MAAOsB,IAC9B,IAA4B,IAAxB4C,KAAKkD,QAAQ7F,GAAGD,GAAW,CAC7B,IAAMuR,EAAO5R,EAAQC,SAAS6U,GAAajD,UAAU5O,KAAKkD,QAAQ7F,GAAGD,IACrEuR,EAAKvR,EAAI4C,KAAKqD,eAAiBjG,EAC/BuR,EAAKtR,EAAI2C,KAAKqD,eAAiBhG,EAC/BsR,EAAK7S,MAAQkE,KAAKqD,eAClBsL,EAAK/S,OAASoE,KAAKqD,eACnBrD,KAAK2R,WAAWE,GAAajV,SAAS+R,GACtC3O,KAAKyO,WAAWoD,GAAaxU,GAAG/E,KAAKqW,QAErC3O,KAAKyO,WAAWoD,GAAaxU,GAAG/E,UAAKuG,IAK7CmB,KAAK6D,UAAUjH,SAASoD,KAAK2R,WAAW3R,KAAKwR,sB,kCAlJ5BzU,E,cAEE,CACnBuU,MAAO,QACPI,KAAM,S,EAJW3U,E,WAYD,K,iXChBCL,E,WAqBnB,WAAYoV,I,4FAAiB,0BAfnB,IAemB,wBAVZ,IAUY,sBAJd,IAIc,kCAC3B9R,KAAK+R,iBAAmBD,EACxBtW,IAAK0M,OAAOC,gBAAgB,gBAAiBnI,KAAKgS,oBAAoBnX,KAAKmF,O,wDAOpEiS,EAAYpY,GACnBmG,KAAKkS,eAAerY,GAAQoY,I,4CAI5B,GAAKjS,KAAK5B,YAAV,CAEA,IAAM+T,EAAiBnS,KAAK5B,YAC5B4B,KAAKoS,kBAAevT,EAEpBmB,KAAKqS,QAAQF,GAAgBtB,aAC7B7Q,KAAK+R,iBAAiB7F,YAAYlM,KAAKqS,QAAQF,GAAgBG,uBACxDtS,KAAKqS,QAAQF,GAGpBnS,KAAKqS,QAAQF,GAAkB,IAAInS,KAAKkS,eAAeC,GAGvDnS,KAAK+R,iBAAiBnV,SAASoD,KAAKqS,QAAQF,GAAgBG,gBAC5DtS,KAAKqS,QAAQF,GAAgBI,eAC7BvS,KAAKoS,aAAeD,K,+BA8Bb7X,GACP,GAAI0F,KAAKqS,QAAQ/X,GACf,OAAO0F,KAAKqS,QAAQ/X,GACf,MAAM,IAAIyI,UAAJ,gBAAuBzI,EAAvB,qB,kCA1Bb,MAA8B,KAAtB0F,KAAKoS,kBAAuBvT,EAAYmB,KAAKoS,c,aAMvC9X,GACd,IAAI0F,KAAKkS,eAAe5X,GASjB,MAAM,IAAIyI,UAAJ,gBAAuBzI,EAAvB,mBARP0F,KAAKoS,eACPpS,KAAKqS,QAAQrS,KAAKoS,cAAcvB,aAChC7Q,KAAK+R,iBAAiB7F,YAAYlM,KAAKqS,QAAQrS,KAAKoS,cAAcE,iBAEpEtS,KAAKoS,aAAe9X,EACpB0F,KAAKqS,QAAQ/X,GAAS,IAAI0F,KAAKkS,eAAe5X,GAC9C0F,KAAK+R,iBAAiBnV,SAASoD,KAAKqS,QAAQ/X,GAAOgY,gBACnDtS,KAAKqS,QAAQ/X,GAAOiY,oB,msCC/D1B,IAAMC,EAAe,CACnBjV,IACAJ,IACAsK,IACAqE,IACA2G,IACA/C,IACAzE,IACAyH,IACAC,IACAC,KAGa,SAAS9V,EAAO+V,EAAYC,GACzC,IAD6C,EACzCrZ,EAAIoZ,EADqC,IAE1BL,GAF0B,IAE7C,2BAAiC,KAAtBxE,EAAsB,QAC/BvU,EAAIA,EAAEgE,IAAIuQ,IAHiC,8BAK7CvU,EAAEsZ,KAAKD,K,w6CCxBYjV,E,sQAQnB,aAAc,a,4FAAA,aACZ,gBADY,0IAEZ,EAAKmV,WAAa,IAAIzX,KAAKyH,OAAOxH,IAAKC,IAAIqB,OAAOuF,UAAU4Q,KAAS7Q,SACrE,EAAK4Q,WAAWlX,MAAgC,EAAxB,EAAKkX,WAAWlX,MACxC,EAAKkX,WAAWpX,OAAkC,EAAzB,EAAKoX,WAAWpX,OACzC,EAAKoX,WAAW5V,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAI,EAAKkX,WAAWlX,MAAQ,EACxE,EAAKkX,WAAW3V,EAAI7B,IAAKC,IAAIuT,OAAOpT,OAAS,EAAI,IAEjD,EAAKsX,YAAc,IAAIvU,IAAO,QAC9B,EAAKuU,YAAY9V,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAI,EAAKoX,YAAYpX,MAAQ,EAC1E,EAAKoX,YAAY7V,EAAI7B,IAAKC,IAAIuT,OAAOpT,OAAS,EAAI,IAClD,EAAKsX,YAAYpS,QAAU,EAAKqS,UAAUtY,KAAf,MAE3B,EAAKuY,aAAe,IAAIzU,IAAO,UAC/B,EAAKyU,aAAahW,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAI,EAAKsX,aAAatX,MAAQ,EAC5E,EAAKsX,aAAa/V,EAAI7B,IAAKC,IAAIuT,OAAOpT,OAAS,EAAI,GACnD,EAAKwX,aAAatS,QAAU,EAAKuS,WAAWxY,KAAhB,MAG5B,EAAKyY,UAAY,IAAI3U,IAAO,iBAC5B,EAAK2U,UAAUlW,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAI,EAAKwX,UAAUxX,MAAQ,EACtE,EAAKwX,UAAUjW,EAAI7B,IAAKC,IAAIuT,OAAOpT,OAAS,EAAI,GAChD,EAAK0X,UAAUxS,QAAU,EAAKyS,cAAc1Y,KAAnB,MAEzB,EAAK2Y,cAAgB,IAAI7U,IAAO,WAChC,EAAK6U,cAAcpW,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAI,EAAK0X,cAAc1X,MAAQ,EAC9E,EAAK0X,cAAcnW,EAAI7B,IAAKC,IAAIuT,OAAOpT,OAAS,EAAI,IACpD,EAAK4X,cAAc1S,QAAU,EAAK2S,YAAY5Y,KAAjB,MAG7B,EAAKwG,eAAezE,SAAS,EAAKoW,YAClC,EAAK3R,eAAezE,SAAS,EAAKsW,aAClC,EAAK7R,eAAezE,SAAS,EAAK0W,WAClC,EAAKjS,eAAezE,SAAS,EAAK4W,eAClC,EAAKnS,eAAezE,SAAS,EAAKwW,cAlCtB,E,iDAsCZ5X,IAAKiB,aAAa2B,YAAc,W,sCAIhC5C,IAAKiB,aAAa2B,YAAc,c,oCAIhC5C,IAAKiB,aAAa2B,YAAc,Y,mCAIhC5C,IAAKiB,aAAa2B,YAAc,c,8BA1DEgD,M,0vCCJjB7C,E,0IAET,I,4KAEMmV,EAAWC,GACpB3T,KAAK4T,QAAQF,KAChB1T,KAAK4T,QAAQF,GAAa,IAC5B1T,KAAK4T,QAAQF,GAAWpb,KAAKqb,K,mCAGlBD,GACX,GAAI1T,KAAK4T,QAAQF,IAAcG,MAAMC,QAAQ9T,KAAK4T,QAAQF,IAAa,4BAD9CK,EAC8C,iCAD9CA,EAC8C,4BAC9C/T,KAAK4T,QAAQF,IADiC,IACrE,2BAAgD,KAArCM,EAAqC,QAC9CA,EAAQ,WAAR,EAAYD,IAFuD,kC,yCAOtDL,EAAWC,GAC5B,GAAI3T,KAAK4T,QAAQF,IAAcG,MAAMC,QAAQ9T,KAAK4T,QAAQF,IAAa,CACrE,IAAMO,EAAMjU,KAAK4T,QAAQF,GAAWQ,QAAQP,IAC/B,IAATM,GACFjU,KAAK4T,QAAQF,GAAWxa,OAAO+a,EAAK,S,0pCCpBvBhW,E,gQAEnB,aAAc,O,4FAAA,qBACN8S,IAAYG,OAAQ,U,UAHMrC,M,usGCEf/Q,E,sQAqCnB,aAAc,a,4FAAA,aACZ,gBADY,ozBAXD,IAAIvC,KAAKwD,UAAU,CAC9BC,WAAY,iBACZC,SAAU,GACVC,KAAM,QACNiV,MAAO,YAOK,sBALC5Y,KAAKyF,YAAYC,YAAY,EAAKmT,aAAc,EAAKhV,aAKtD,eAJN,IAAI7D,KAAK4D,KAAK,EAAKiV,aAAc,EAAKhV,aAIhC,yBAHI,IAAI7D,KAAKyH,OAAOxH,IAAKC,IAAIqB,OAAOuF,UAAUqQ,KAAgBtQ,UAG9D,yBAFI,IAAIzD,IAAO,cAI3B,EAAKa,MAAMpC,EAAI5B,IAAKC,IAAIY,SAASP,MAAQ,EAAI,EAAKuY,aAAavY,MAAQ,EACvE,EAAK0D,MAAMnC,EAAI7B,IAAKC,IAAIY,SAAST,OAAS,EAAI,EAAKyY,aAAazY,OAAS,EAAI,IAC7E,EAAK0Y,gBAAgBlX,EAAI5B,IAAKC,IAAIY,SAASP,MAAQ,EAAI,EAAKwY,gBAAgBxY,MAAQ,EACpF,EAAKwY,gBAAgBjX,EAAI7B,IAAKC,IAAIY,SAAST,OAAS,EAAI,IACxD,EAAKyF,eAAezE,SAAS,EAAK4C,OAClC,EAAK6B,eAAezE,SAAS,EAAK0X,iBAClC,EAAKC,gBAAgBnX,EAAI,GACzB,EAAKmX,gBAAgBlX,EAAI,GACzB,EAAKkX,gBAAgBzT,QAAU,EAAKsM,aAAavS,KAAlB,MAC/B,EAAKwG,eAAezE,SAAS,EAAK2X,iBAXtB,E,oDAgBZ/Y,IAAKiB,aAAa2B,YAAc,gB,8BArDQgD,M,g6CCDvBoT,E,sQAuBnB,aAAc,a,4FAAA,aACZ,gBADY,iPAVD,IAAIjZ,KAAKwD,UAAU,CAC9BC,WAAY,iBACZC,SAAU,GACVC,KAAM,QACNiV,MAAO,YAMK,sBAJC5Y,KAAKyF,YAAYC,YAAY,EAAKmT,aAAc,EAAKhV,aAItD,eAHN,IAAI7D,KAAK4D,KAAK,EAAKiV,aAAc,EAAKhV,aAGhC,yBAFI,IAAIT,IAAO,cAI3B,EAAKa,MAAMpC,EAAI5B,IAAKC,IAAIY,SAASP,MAAQ,EAAI,EAAKuY,aAAavY,MAAQ,EACvE,EAAK0D,MAAMnC,EAAI7B,IAAKC,IAAIY,SAAST,OAAS,EAAI,EAAKyY,aAAazY,OAAS,EACzE,EAAKyF,eAAezE,SAAS,EAAK4C,OAClC,EAAK+U,gBAAgBnX,EAAI,GACzB,EAAKmX,gBAAgBlX,EAAI,GACzB,EAAKkX,gBAAgBzT,QAAU,EAAKsM,aAAavS,KAAlB,MAC/B,EAAKwG,eAAezE,SAAS,EAAK2X,iBARtB,E,oDAYZ/Y,IAAKiB,aAAa2B,YAAc,gB,8BAnCKgD,M,g6CCApBqT,E,sQAwBnB,aAAc,O,4FAAA,aACZ,gBADY,SAvBL,IAAIlZ,KAAK4D,KAAK,SAAU,CAC/BH,WAAY,iBACZC,SAAU,GACVC,KAAM,QACNiV,MAAO,YAmBK,yBAjBI,IAAIxV,IAAO,cAiBf,iBAfJ,CACR,CACE9E,KAAM,WACN6a,GAAI,UAEN,CACE7a,KAAM,UACN6a,GAAI,UAEN,CACE7a,KAAM,UACN6a,GAAI,YAMN,IAAMC,EAAepZ,KAAKyF,YAAYC,YAAY,EAAK2T,OAAOhW,KAAM,EAAKgW,OAAOjI,OAFpE,OAGZ,EAAKiI,OAAOxX,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAI6Y,EAAa7Y,MAAQ,EACjE,EAAK8Y,OAAOvX,EAAI,IAChB,EAAKgE,eAAezE,SAAS,EAAKgY,QAClC,EAAKL,gBAAgBnX,EAAI,GACzB,EAAKmX,gBAAgBlX,EAAI,GACzB,EAAKkX,gBAAgBzT,QAAU,EAAKsM,aAAavS,KAAlB,MAC/B,EAAKwG,eAAezE,SAAS,EAAK2X,iBAClC,EAAKM,eAVO,E,oDAiBZ,IAHA,IAAMC,EAAsB,SAACC,GAAD,OAAa,WACvCvZ,IAAKiB,aAAa2B,YAAc2W,IAEzBjd,EAAI,EAAGA,EAAIkI,KAAKgV,QAAQhd,OAAQF,IAAK,CAC5C,IAAMmd,EAAYjV,KAAKgV,QAAQld,GACzBod,EAAS,IAAIvW,IAAOsW,EAAUpb,MACpCqb,EAAO9X,EAAI5B,IAAKC,IAAIuT,OAAOlT,MAAQ,EAAIoZ,EAAOpZ,MAAQ,EACtDoZ,EAAO7X,EAAI,IAAU,IAAJvF,EACjBod,EAAOpU,QAAUgU,EAAoBG,EAAUP,IAC/C1U,KAAKqB,eAAezE,SAASsY,M,qCAK/B1Z,IAAKiB,aAAa2B,YAAc,gB,8BApDKgD,M,ynCCDpBlD,E,gQAEnB,aAAc,O,4FAAA,qBACN6S,IAAYC,OAAQ,U,UAHMnC,M,ynCCAf1Q,E,gQAEnB,aAAc,O,4FAAA,qBACN4S,IAAYK,Q,UAHcvC,M,6BCHpC,wBAIEsG,QAAQpC,KAAK,CACXqC,OAAQ,CACNC,SAAU,CAAC,mBAEbC,OAAQ,WACN,IAAI9Z,Q","file":"main-059675da0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([40,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\nimport Tileset from \"root/Tileset\";\nimport earthTileset from \"assets/tilesets/earth.png\";\nimport moonTileset from \"assets/tilesets/moon.png\";\nimport Tilemap from \"root/Tilemap\";\nimport Level1 from \"root/Scenes/level1/level1\";\nimport HowToPlayScene from \"root/Scenes/howToPlay/howToPlayScene\";\nimport creditScene from \"root/Scenes/credits/creditScene\";\nimport levelsScene from \"root/Scenes/levels/levelsScene\";\nimport Level0 from \"root/Scenes/level0/level0\";\nimport Level2 from \"root/Scenes/level2/level2\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2,\n    paused: false,\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    if (Game.app.renderer.height > 500)\n      PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Tilemap.tilesets = {\n        earth: new Tileset(earthTileset, {x: 32, y: 32}),\n        moon: new Tileset(moonTileset, {x: 32, y: 32})\n      };\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(MainMenu, 'MainMenu');\n      Game.sceneManager.addScene(HowToPlayScene, 'HowToPlay');\n      Game.sceneManager.addScene(creditScene, 'credits');\n      Game.sceneManager.addScene(levelsScene, 'levels');\n      Game.sceneManager.addScene(Level1, 'level1');\n      Game.sceneManager.addScene(Level0, 'level0');\n      Game.sceneManager.addScene(Level2, 'level2');\n      Game.sceneManager.activeScene = 'MainMenu';\n    });\n    window.game = Game;\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","import * as PIXIimport from 'pixi.js';\n\nexport default class Button extends PIXIimport.Container {\n  onClick = undefined;\n\n  _container = new PIXI.Container();\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 45,\n    fill: '0xfff'\n  });\n  _text = new PIXI.Text('', this._textStyle);\n  _textMectric;\n  _background = new PIXI.Graphics();\n  _padding = {\n    x: 90,\n    y: 10\n  }\n\n  constructor(text) {\n    super();\n    this.text = text;\n    this._container.addChild(this._background);\n    this._container.addChild(this._text);\n    this._background.interactive = true;\n    this._background.on('mouseover', this._onHover.bind(this));\n    this._background.on('mouseout', this._onHoverEnd.bind(this));\n    this._background.on('click', this._onClick.bind(this));\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n    this.addChild(this._container);\n  }\n\n  get text() {\n    return this._text.text;\n  }\n\n  set text(val) {\n    this._textMectric = PIXI.TextMetrics.measureText(val, this._textStyle);\n    this._drawBackground();\n    this._text.text = val;\n  }\n\n  _drawBackground() {\n    const width = this._textMectric.width + this._padding.x * 2;\n    const height = this._textMectric.height + this._padding.y * 2;\n    const getRandomInt = (padding) => {\n      padding /= 2;\n      return Math.floor(Math.random() * Math.floor(padding));\n    }\n\n    // Setting text position\n    this._text.x = this._padding.x;\n    this._text.y = this._padding.y;\n\n    // Generating offsets of the borders\n    const offsets = [\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      }\n    ]\n\n    // Draw\n    this._background.clear();\n    this._background.beginFill(0x3E83C1);\n    this._background.drawPolygon([\n      new PIXI.Point(offsets[0].x, offsets[0].y),\n      new PIXI.Point(width - offsets[1].x, offsets[1].y),\n      new PIXI.Point(width - offsets[2].x, height - offsets[2].y),\n      new PIXI.Point(offsets[3].x, height - offsets[3].y),\n    ]);\n    this._background.endFill();\n  }\n\n  _onHover() {\n    this._container.x = 0;\n    this._container.y = 0;\n    this._container.scale.set(1);\n  }\n\n  _onHoverEnd() {\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n  }\n\n  _onClick() {\n    if (typeof this.onClick === 'function')\n      this.onClick();\n  }\n\n\n}\n","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","import Game from \"./main\";\n\nexport default class Tileset {\n\n  texture;\n  tileSize;\n  tileTextures = [];\n\n  /**\n   * @param {string} image\n   * @param {{x: number, y: number}} tileSize\n   */\n  constructor(image, tileSize) {\n    this.texture = Game.app.loader.resources[image].texture;\n    this.tileSize = tileSize;\n    this.generateTileSpriteArray();\n  }\n\n  generateTileSpriteArray() {\n    const dimensions = {\n      x: Math.floor(this.texture.baseTexture.width / this.tileSize.x),\n      y: Math.floor(this.texture.baseTexture.height / this.tileSize.y)\n    };\n\n    for(let y = 0; y < dimensions.y; y++) {\n      for (let x = 0; x < dimensions.x; x++) {\n        const rectangle = new PIXI.Rectangle(\n          this.tileSize.x * x,\n          this.tileSize.y * y,\n          this.tileSize.x,\n          this.tileSize.y\n        );\n\n        this.texture.frame = rectangle;\n        this.tileTextures.push(this.texture.clone());\n      }\n    }\n  }\n\n  getSprite(index) {\n    if (index > this.tileTextures.length) {\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\n    }\n      return new PIXI.Sprite(this.tileTextures[index]);\n  }\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n  isLanded = true;\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let landed = false;\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        landed = true;\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.61)\n            vel.x -= 0.6 * delta;\n          else if (vel.x < -0.61)\n            vel.x += 0.6 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n    if (landed)\n      this.onLanded();\n    this.isLanded = landed;\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value.toLowerCase() || event.key === key.value.toUpperCase()) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value.toLowerCase() || event.key === key.value.toUpperCase()) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Game from \"root/main\";\n\n/**\n * @typedef {Object.<string, {isAnimated: boolean, tileId?: number, from?: number, to?: number}>} AnimationData\n */\n\nexport default class Animation {\n  _animTexture;\n  _frameSize;\n  sprite;\n  /** @type AnimationData */\n  _animData;\n  _currentAnim;\n  _currentAnimFrame = 0;\n  _frameRect = new PIXI.Rectangle();\n  _intervalId = -1;\n  _delay;\n  _isPaused = false;\n\n  /**\n   * @param {string} texPath\n   * @param {{x: number, y: number}} frameSize\n   * @param {AnimationData} animationData\n   * @param {string} defaultAnim\n   * @param {number} delay\n   */\n  constructor(texPath, frameSize, animationData, defaultAnim, delay) {\n    this._animTexture = Game.app.loader.resources[texPath].texture;\n    this._frameSize = frameSize;\n    this._currentAnim = defaultAnim;\n    this._animData = animationData;\n    this._delay = delay;\n    window.anim = this;\n\n    /* Setting up default frame */\n    this._frameRect.width = frameSize.x;\n    this._frameRect.height = frameSize.y;\n    this._frameRect.y = 0;\n    this._setCurrentAnimFrame();\n    this._animTexture.frame = this._frameRect;\n\n\n    this.sprite = new PIXI.Sprite(this._animTexture);\n  }\n\n  start() {\n    if (this._intervalId !== -1)\n      this.stop();\n    this._intervalId = setInterval(this._setCurrentAnimFrame.bind(this), this._delay);\n  }\n\n  pause() {\n    this._isPaused = true;\n  }\n\n  resume() {\n    this._isPaused = false;\n  }\n\n  _setCurrentAnimFrame() {\n    if (this._isPaused)\n      return;\n    const current = this._animData[this._currentAnim];\n    if (!current)\n      return;\n    if (current.animated) {\n      if (!this._currentAnimFrame)\n        this._currentAnimFrame = current.from - 1;\n      if (this._currentAnimFrame >= current.to) {\n        if (current.loop) {\n          this._currentAnimFrame = current.from;\n          this._frameRect.x = current.from * this._frameRect.width;\n        }\n      } else {\n        this._currentAnimFrame++;\n        this._frameRect.x = this._currentAnimFrame * this._frameRect.width;\n      }\n    } else {\n      this._currentAnimFrame = current.tileId;\n      this._frameRect.x = current.tileId * this._frameRect.width;\n    }\n    this._animTexture.frame = this._frameRect;\n  }\n\n  stop() {\n    if (this._intervalId !== -1) {\n      clearInterval(this._intervalId);\n      this._intervalId = -1;\n    }\n  }\n\n  /**\n   * @param {string} animName\n   */\n  setCurrentAnimation(animName) {\n    if (animName !== this._currentAnim) {\n      this._currentAnim = animName;\n      this._currentAnimFrame = this._animData[this._currentAnim].start;\n      this._setCurrentAnimFrame();\n    }\n  }\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\nimport Animation from \"root/Animation\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerAnimation;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    leftQwerty: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.playerAnimation = new Animation(player, {x: 32, y: 56}, {\n      'idle': {\n        animated: false,\n        tileId: 0\n      },\n      'run': {\n        animated: true,\n        from: 1,\n        to: 7,\n        loop: true\n      },\n      'jump': {\n        animated: true,\n        from: 10,\n        to: 13,\n        loop: false\n      }\n    }, 'idle', 100);\n    this.playerSprite = this.playerAnimation.sprite;\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.x = x * this.tilemap.tileRenderSize;\n    this.container.y = y * this.tilemap.tileRenderSize;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.leftQwerty = keyboard('a');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n    this.playerAnimation.start();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravityChanges.bind(this));\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.leftQwerty.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n    Game.events.removeEventHandler('gameplay:gravity-switch', this.onGravityChanges.bind(this));\n    this.playerAnimation.stop();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    if (this.isLanded && Game.gameplayState.isGravityEnabled) {\n      if (\n        this.keysHandlers.right.isDown ||\n        (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown)\n      )\n        this.playerAnimation.setCurrentAnimation('run');\n      else\n        this.playerAnimation.setCurrentAnimation('idle');\n    } else {\n      this.playerAnimation.setCurrentAnimation('jump');\n    }\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x += 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x -= 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n    }\n  }\n\n  onGravityChanges(isOn) {\n    if (isOn)\n      this.playerAnimation.resume();\n    else\n      this.playerAnimation.pause();\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport player from 'assets/player/Player1-old.png';\nimport * as Collision from \"root/Collision\";\n\nexport default class Mob extends Entity {\n  sprite;\n  reverse = false;\n  speed = 5;\n  _canHitPlayer = true;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.sprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    const resizeRatio = (tilemap.tileRenderSize * 2) / (this.sprite.height);\n    this.sprite.scale.set(resizeRatio);\n    this.container.y = y * tilemap.tileRenderSize;\n    this.container.x = x * tilemap.tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width : userPos.x;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air DO NOTHING\n      return;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front of knees is filled\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y - 1}) !== -1) {\n      // If tile in front of head is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1) * this.tilemap.tileRenderSize * 0.03, y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player) && this._canHitPlayer) {\n      Game.events.triggerEvent('gameplay:death');\n      this._canHitPlayer = false;\n    }\n    this.move();\n  }\n\n\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\nimport laserimg from 'assets/tilesets/laser.png';\nimport laserShooterImg from 'assets/tilesets/laser-shooter.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Laser {\n  container = new PIXI.Container();\n  sprite = [];\n  _canHitPlayer = true;\n  _active = true;\n  _intervalId;\n  _laserlength;\n  delay;\n\n  constructor(player, tilemap, {x, y, length, delay, direction}) {\n    if (direction === 'top') y++;\n    if (direction === 'left') x++;\n    x = x * tilemap.tileRenderSize;\n    y = y * tilemap.tileRenderSize;\n    const blockSize = tilemap.tileRenderSize;\n    const pixelSize = tilemap.tileRenderSize / 32;\n\n\n    const laserShooter = new PIXI.Sprite(Game.app.loader.resources[laserShooterImg].texture)\n\n    laserShooter.width = blockSize;\n    laserShooter.height = pixelSize * 7;\n    laserShooter.x = x;\n    laserShooter.y = y;\n    laserShooter.anchor.set(0.5, 1);\n\n    switch (direction) {\n      case 'left':\n        y += pixelSize * 2;\n      case 'right':\n        y += blockSize / 2 - pixelSize;\n        laserShooter.y += blockSize / 2;\n        break;\n      case 'top':\n      case 'bottom':\n        x += blockSize / 2 - pixelSize;\n        laserShooter.x += blockSize / 2;\n        break;\n    }\n\n    switch (direction) {\n      case 'left':\n        laserShooter.angle = -90;\n        break;\n      case 'right':\n        laserShooter.angle = 90;\n        break;\n      case 'bottom':\n        laserShooter.angle = 180;\n        break;\n    }\n\n\n    for (let i = 0; i <= length - 1; i++) {\n\n      this.sprite.push(new PIXI.Sprite(Game.app.loader.resources[laserimg].texture));\n      this.sprite[i].width = pixelSize * 2;\n      this.sprite[i].height = tilemap.tileRenderSize;\n      if (direction === \"top\") {\n        this.sprite[i].y = y - this.sprite[i].height * (i + 1);\n        this.sprite[i].x = x\n      } else if (direction === \"bottom\") {\n        this.sprite[i].y = y + this.sprite[i].height * i;\n        this.sprite[i].x = x\n      } else if (direction === \"left\") {\n        this.sprite[i].angle = -90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x - this.sprite[i].height * (i + 1);\n      } else {\n        this.sprite[i].angle = 90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x + this.sprite[i].height * (i + 1);\n      }\n\n      this._laserlength = this.sprite[i].height;\n      this.container.addChild(this.sprite[i]);\n    }\n\n    if (direction === \"top\" || direction === \"bottom\") {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[0].x,\n          this.sprite[(direction === \"bottom\") ? 0 : this.sprite.length - 1].y,\n          this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length\n        ),\n        player.container\n      );\n    } else {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[(direction === \"right\") ? 0 : this.sprite.length - 1].x - ((direction === \"right\") ? this.sprite[0].height : 0),\n          this.sprite[0].y + ((direction === \"right\") ? 0 : -1) * this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length,\n          this.sprite[0].width\n        ),\n        player.container\n      );\n    }\n\n    this.container.addChild(laserShooter);\n\n    this.delay = delay;\n    this._intervalId = this.startInterval();\n    this.laserHitReg.onCollide = this.onHit.bind(this);\n  }\n\n  onHit() {\n    if (this._canHitPlayer) {\n      this._canHitPlayer = false;\n      Game.events.triggerEvent('gameplay:death');\n    }\n  }\n\n  startInterval() {\n\n    return setInterval(() => {\n      if (this.delay !== -1)\n        this._active = !this._active;\n\n      let alpha = (this._active ? 1 : 0);\n      for (let i = 0; i < this.sprite.length; i++) {\n        this.sprite[i].alpha = alpha;\n      }\n\n    }, this.delay)\n  }\n\n  onSceneEnd() {\n    clearInterval(this._intervalId);\n  }\n\n  update() {\n    if (this._active)\n      this.laserHitReg.update()\n  }\n\n}\n","import Game from \"root/main\";\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Collectable{\n  container = new PIXI.Container();\n  count = {total: 0, pick: 0,}\n  sprite\n  _pick = false;\n  constructor(player, x, y, tileRenderSize) {\n    this.sprite =  new PIXI.Sprite(Game.app.loader.resources[tilecoin].texture);\n    this.sprite.width = tileRenderSize;\n    this.sprite.height = tileRenderSize;\n\n    this.container.x = x * tileRenderSize;\n    this.container.y = y * tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.takeCoin = new Trigger(\n      new PIXI.Rectangle(\n        this.container.x,\n        this.container.y,\n        this.sprite.width,\n        this.sprite.height\n      ),\n      player.container\n    );\n    this.takeCoin.onCollide = this.pickup.bind(this);\n  }\n\n  pickup(){\n    this._pick = true;\n    this.takeCoin.onCollide = undefined;\n    this.container.removeChild(this.sprite);\n    console.log(\"pickup\");\n  }\n\n  isPick(){return this._pick}\n\n  update(){\n    this.takeCoin.update()\n  }\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity (E):\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n    Game.gameplayState.paused = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n        Game.gameplayState.paused = false;\n        Game.events.triggerEvent('scene:restart');\n      }\n    }\n  }\n\n}\n","import UserInterface from \"root/ui/ui\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\n\nexport default class Navigation extends UserInterface {\n\n  MainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this.MainMenuButton.x = 20;\n    this.MainMenuButton.y = 20;\n    this.MainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.container.addChild(this.MainMenuButton);\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\nimport Navigation from \"root/ui/navigation\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen(),\n    new Navigation()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class StaticTilemap {\n  container = new PIXI.Container();\n  tilemap = [];\n  tileset;\n  spriteList = [];\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry.backTileMap} map\n   * @param {number} heightpx\n   * @param {string} resourcePath\n   */\n  constructor(map, heightpx, resourcePath) {\n    this.tileset = new Tileset(resourcePath, {x: 32, y: 32});\n    const lines = map.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    this.generateTilemapContent();\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  generateTilemapContent() {\n    for (let y = 0; y < this.height; y++) {\n      this.spriteList[y] = [];\n      for (let x = 0; x < this.width; x++) {\n        if (this.tilemap[y][x] !== -1) {\n          const tile = this.tileset.getSprite(this.tilemap[y][x]);\n          tile.x = this.tileRenderSize * x;\n          tile.y = this.tileRenderSize * y;\n          tile.width = this.tileRenderSize;\n          tile.height = this.tileRenderSize;\n          this.container.addChild(tile);\n          this.spriteList[y].push(tile);\n        } else {\n          this.spriteList[y].push(undefined);\n        }\n      }\n    }\n  }\n\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport Laser from \"root/Laser\";\nimport Collectable from \"root/Collectable\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\nimport StaticTilemap from \"root/StaticTilemap\";\nimport backTilesetImg from 'assets/tilesets/misc.png';\n\nexport default class GameScene extends Scene {\n\n  player;\n  tilemap;\n  backTileMap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n  lasers = [];\n  mobs = [];\n  collectables = [];\n  nextScene = '';\n\n  /**\n   * @param {MapEntry} map\n   * @param {string} nextScene\n   */\n  constructor(map, nextScene = 'MainMenu') {\n    super();\n    this.nextScene = nextScene;\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.backTileMap = new StaticTilemap(map.backTileMap, Game.app.screen.height, backTilesetImg);\n    this.player = new Player(this.tilemap, map.dynamicObjectsMap.start.x, map.dynamicObjectsMap.start.y);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n    this.cameraHandledContainer.addChild(this.backTileMap.container);\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n    }\n\n    window.endTrigger = this.endTrigger;\n    for (const laserData of map.dynamicObjectsMap.laserHitReg) {\n      const laser = new Laser(this.player, this.tilemap, laserData)\n      this.lasers.push(laser);\n      this.cameraHandledContainer.addChild(laser.container);\n    }\n    for (const ennemy of map.dynamicObjectsMap.ennemies) {\n      const mob = new Mob(this.tilemap, ennemy.x, ennemy.y);\n      this.mobs.push(mob);\n      this.cameraHandledContainer.addChild(mob.container);\n    }\n    for (const collectableData of map.dynamicObjectsMap.collectables) {\n      const collectable = new Collectable(\n        this.player,\n        collectableData.x,\n        collectableData.y,\n        this.tilemap.tileRenderSize);\n      this.collectables.push(collectable);\n      this.cameraHandledContainer.addChild(collectable.container);\n    }\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.userInterface.update(delta);\n    if (Game.gameplayState.paused)\n      return;\n    this.player.update(delta);\n    this.camera.update();\n    this.updateLasers();\n    this.updateMobs(delta);\n    this.updateCollectable();\n    this.userInterface.update(delta);\n    this.endTrigger.update();\n  }\n\n  updateLasers() {\n    for (const laser of this.lasers) {\n      laser.update();\n    }\n  }\n\n  updateMobs(delta) {\n    for (const mob of this.mobs) {\n      mob.update(delta, this.player);\n    }\n  }\n\n  updateCollectable() {\n    for (const collectable of this.collectables) {\n      collectable.update();\n    }\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n    this.lasers.forEach(item => item.onSceneEnd());\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end');\n    for (const collectable of this.collectables) {\n      if (!collectable.isPick())\n        return;\n    }\n    Game.sceneManager.activeScene = this.nextScene;\n  }\n}\n\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,18,1,1,2,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,4,5,5,6,8,8,8,8,18,19,19,19,19,19,19,20,8,9,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,6\\n8,4,5,5,5,16,-1,-1,14,5,5,5,6,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,7,8,4,15,15,15,5,5,5,5,5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,5,5,5,5,5,5,5,5,15,16,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,20\\n8,9,-1,-1,-1,-1,0,19,19,19,19,19,19,2,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8\\n8,18,1,1,1,1,20,8,8,8,8,8,8,18,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import level1Csv from 'assets/maps/level-1/level-1.csv';\nimport level1Json from 'assets/maps/level-1/level-1.json';\nimport level1BackCsv from 'assets/maps/level-1/level-1-back.csv';\n\nimport level0Csv from 'assets/maps/level-0/level-0.csv';\nimport level0Json from 'assets/maps/level-0/level-0.json';\nimport level0BackCsv from 'assets/maps/level-0/level-0-back.csv';\n\nimport level2Csv from 'assets/maps/level-2/level-2.csv';\nimport level2Json from 'assets/maps/level-2/level-2.json';\nimport level2BackCsv from 'assets/maps/level-2/level-2-back.csv';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  level0: {\n    tileMap: level0Csv,\n    backTileMap: level0BackCsv,\n    dynamicObjectsMap: level0Json\n  },\n  level1: {\n    tileMap: level1Csv,\n    backTileMap: level1BackCsv,\n    dynamicObjectsMap: level1Json\n  },\n  level2: {\n    tileMap: level2Csv,\n    backTileMap: level2BackCsv,\n    dynamicObjectsMap: level2Json\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {string} backTileMap\n * @property {{\n *   endTrigger: {\n *     x: number,\n *     y: number,\n *     width: number,\n *     height: number\n *   },\n *   start: {\n *     x: number,\n *     y: number\n *   },\n *   laserHitReg: Array<{\n *     x: number,\n *     y: number,\n *     length: number,\n *     delay: number,\n *     direction: 'top'|'left'|'right'|'bottom'\n *   }>,\n *   ennemies: Array<{\n *     x: number,\n *     y: number,\n *     speed: number\n *   }>,\n *   collectables: Array<{\n *     x: number,\n *     y: number\n *   }>\n * }} dynamicObjectsMap\n */\n","export default \"4,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,-1,-1,14,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,15,15,15,15,15,15,15,15,15,15,6,8\\n9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8\\n9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,4,15,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8\\n9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,4,16,-1,-1,-1,-1,-1,-1,-1,14,15,15,6,8,8,8,8,8,8,8,8,8,8,8,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8\\n9,-1,-1,0,1,1,1,20,8,8,8,4,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,20,8\\n9,-1,-1,7,8,8,8,8,8,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,6,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,19,19,20,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,7,4,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,8,8,8,8,9,-1,-1,-1,-1,0,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,9,-1,-1,-1,0,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,9,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,16,-1,-1,-1,14,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n18,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,18,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,1,20,8,8,8,8,18,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,1,19,19,1,19,19,1,1,1,19,19,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","export default \"-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,0,2,2,2,2,2,2,1,1,1,1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,0,2,2,2,2,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,24,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,10,11,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,27,-1,-1,-1,-1,8,10,11,-1,-1,-1,-1,-1,34,28,29,23,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n\";","export default \"-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,1,2,1,2,1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,13,-1,-1,-1,-1,-1,-1,-1,-1,17,33,-1,-1,-1,-1,-1,-1,-1,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n\";","export default \"8,8,4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,4,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,2,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,-1,7,8,4,15,15,15,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,18,1,1,1,2,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,4,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8\\n8,8,4,15,15,15,16,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,0,1,1,20,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,15,6\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,18,2,-1,-1,-1,-1,-1,0,20,4,15,15,15,6,9,-1,-1,-1,-1,0,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,7,9,-1,-1,-1,-1,7,8,18,1,1,1,1,1,1,1,1,1,20,18,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,8,18,2,-1,-1,-1,0,20,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,20\\n8,8,18,1,1,2,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8\\n8,8,8,8,8,18,1,1,1,1,1,20,8,8,9,-1,-1,-1,7,8,9,-1,-1,-1,-1,14,16,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,20,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","export default \"-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,17,23,23,23,23,23,28,23,23,19,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,12,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,18,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,7,-1,-1,-1\\n-1,-1,-1,24,-1,-1,0,1,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,7,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,24,7,-1,-1,-1\\n-1,-1,-1,6,-1,21,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,9,11,7,-1,-1,-1\\n-1,-1,-1,6,-1,5,-1,-1,-1,26,-1,-1,-1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,7,-1,-1,-1\\n-1,-1,-1,6,-1,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,1,1,1,1,1,-1,-1,15,-1,-1,0,1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n\";","export default __webpack_public_path__ + \"images/ce9ad9322be2e6a2d659d391ad63dcce.png\";","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","export default __webpack_public_path__ + \"images/ede9caaf7e31907c893eb304262121b7.png\";","export default __webpack_public_path__ + \"images/292ea24d6b3465aa22255944c425e911.png\";","export default __webpack_public_path__ + \"images/180f3d5944db4f30c53830e5e93949d6.png\";","export default __webpack_public_path__ + \"images/8735110ff70fad2f5892a9277e5a428c.png\";","export default __webpack_public_path__ + \"images/3da781d07900cba62dffcc69437420ab.png\";","export default __webpack_public_path__ + \"images/54f63343cef9c24ddf89da1fd59036f0.png\";","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  static tilesets = {};\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = Tilemap.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Class dictionnary\n   * @type {Object.<string, function>}\n   */\n  _scenesClasses = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n    Game.events.addEventHandler('scene:restart', this.restartCurrentScene.bind(this));\n  }\n\n  /**\n   * @param {function} sceneClass\n   * @param {string} name\n   */\n  addScene(sceneClass, name) {\n    this._scenesClasses[name] = sceneClass;\n  }\n\n  restartCurrentScene() {\n    if (!this.activeScene)\n      return;\n    const oldActiveScene = this.activeScene;\n    this._activeScene = undefined;\n    // stop old instance\n    this._scenes[oldActiveScene].onSceneEnd();\n    this._parentContainer.removeChild(this._scenes[oldActiveScene].getContainer());\n    delete this._scenes[oldActiveScene];\n\n    // create new instance\n    this._scenes[oldActiveScene] = new this._scenesClasses[oldActiveScene]();\n\n    // Initialize and display new instance\n    this._parentContainer.addChild(this._scenes[oldActiveScene].getContainer());\n    this._scenes[oldActiveScene].onSceneStart();\n    this._activeScene = oldActiveScene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenesClasses[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._scenes[value] = new this._scenesClasses[value]();\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","import moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport player from 'assets/player/Player1.png';\nimport playerOldFrame from 'assets/player/Player1-old.png';\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport laser from 'assets/tilesets/laser.png';\nimport keyboardLayout from 'assets/tilesets/keyboard-layout.png';\nimport laserShooter from 'assets/tilesets/laser-shooter.png';\nimport miscTileset from 'assets/tilesets/misc.png';\nimport logo from 'assets/tilesets/logo.png';\n\nconst assetsToLoad = [\n  moonTileset,\n  earthTileset,\n  player,\n  tilecoin,\n  playerOldFrame,\n  laser,\n  laserShooter,\n  keyboardLayout,\n  miscTileset,\n  logo\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\nimport logoImg from 'assets/tilesets/logo.png';\n\nexport default class MainMenu extends Scene {\n\n  startButton;\n  levelsButton;\n  creditsButton;\n  howToPlay;\n  logoSprite;\n\n  constructor() {\n    super();\n    this.logoSprite = new PIXI.Sprite(Game.app.loader.resources[logoImg].texture);\n    this.logoSprite.width = this.logoSprite.width * 2;\n    this.logoSprite.height = this.logoSprite.height * 2;\n    this.logoSprite.x = Game.app.screen.width / 2 - this.logoSprite.width / 2;\n    this.logoSprite.y = Game.app.screen.height / 2 - 450;\n\n    this.startButton = new Button('Play');\n    this.startButton.x = Game.app.screen.width / 2 - this.startButton.width / 2;\n    this.startButton.y = Game.app.screen.height / 2 - 150;\n    this.startButton.onClick = this.startGame.bind(this);\n\n    this.levelsButton = new Button('Levels');\n    this.levelsButton.x = Game.app.screen.width / 2 - this.levelsButton.width / 2;\n    this.levelsButton.y = Game.app.screen.height / 2 - 50;\n    this.levelsButton.onClick = this.goToLevels.bind(this);\n\n\n    this.howToPlay = new Button('How to play ?');\n    this.howToPlay.x = Game.app.screen.width / 2 - this.howToPlay.width / 2;\n    this.howToPlay.y = Game.app.screen.height / 2 + 50;\n    this.howToPlay.onClick = this.goToHowToPlay.bind(this);\n\n    this.creditsButton = new Button('Credits');\n    this.creditsButton.x = Game.app.screen.width / 2 - this.creditsButton.width / 2;\n    this.creditsButton.y = Game.app.screen.height / 2 + 150;\n    this.creditsButton.onClick = this.goToCredits.bind(this);\n\n\n    this.sceneContainer.addChild(this.logoSprite);\n    this.sceneContainer.addChild(this.startButton);\n    this.sceneContainer.addChild(this.howToPlay);\n    this.sceneContainer.addChild(this.creditsButton);\n    this.sceneContainer.addChild(this.levelsButton);\n  }\n\n  startGame() {\n    Game.sceneManager.activeScene = 'level0';\n  }\n\n  goToHowToPlay() {\n    Game.sceneManager.activeScene = 'HowToPlay';\n  }\n\n  goToCredits() {\n    Game.sceneManager.activeScene = 'credits';\n  }\n\n  goToLevels() {\n    Game.sceneManager.activeScene = 'levels';\n  }\n\n}\n","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level1 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level1, 'level2');\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport keyboardLayout from 'assets/tilesets/keyboard-layout.png';\nimport Button from \"root/ui/Button\";\n\nexport default class HowToPlayScene extends Scene {\n\n  _textContent =\n  `Welcome to NO GRAVITY\n  \n  The game is pretty simple, get all the gold \n  coins and reach the end of the level.\n  \n  To achieve this, we created a whole new tech named\n  the \"Neosensor Turbothermal Gavitotron\" (You can call it NTG too).\n  It basically allow you to avoid the gravity field of the earth by\n  teleport all your environment on space.\n  \n  To activate it just press the big red button on yous suit also\n  named the E button.\n  \n  To move aroud your environment, just use your feets or you can\n  also use the little button just next to your gloves, those are\n  the A and D buttons (if you're french, you can also use the Q\n  button).\n  \n  Ah and you can also use the SPACE button to have an impulsion in\n  your legs and jump.\n  \n  See you explorer.`\n\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 25,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _textMetrics = PIXI.TextMetrics.measureText(this._textContent, this._textStyle);\n  _text = new PIXI.Text(this._textContent, this._textStyle);\n  _keyboardSprite = new PIXI.Sprite(Game.app.loader.resources[keyboardLayout].texture);\n  _mainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this._text.x = Game.app.renderer.width / 2 - this._textMetrics.width / 2;\n    this._text.y = Game.app.renderer.height / 2 - this._textMetrics.height / 2 - 100;\n    this._keyboardSprite.x = Game.app.renderer.width / 2 - this._keyboardSprite.width / 2;\n    this._keyboardSprite.y = Game.app.renderer.height / 2 + 200;\n    this.sceneContainer.addChild(this._text);\n    this.sceneContainer.addChild(this._keyboardSprite);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n  }\n\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport Button from \"root/ui/Button\";\n\nexport default class CreditScene extends Scene {\n  _textContent = `NO GRAVITY\n  \n  Code:\n  Marius \"Astroboy\" Van Nieuwenhuyse\n  Jason \"Vakeros\" Defer\n  \n  Art:\n  Jesse \"Jwoodif\" Jamison Menser\n  \n  Created using PIXI.js library\n  All assets created by Jwoodif`;\n\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 40,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _textMetrics = PIXI.TextMetrics.measureText(this._textContent, this._textStyle);\n  _text = new PIXI.Text(this._textContent, this._textStyle);\n  _mainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this._text.x = Game.app.renderer.width / 2 - this._textMetrics.width / 2;\n    this._text.y = Game.app.renderer.height / 2 - this._textMetrics.height / 2;\n    this.sceneContainer.addChild(this._text);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport Button from \"root/ui/Button\";\n\nexport default class LevelsScene extends Scene {\n  _title = new PIXI.Text('LEVELS', {\n    fontFamily: 'Londrina Solid',\n    fontSize: 40,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _mainMenuButton = new Button('Main Menu');\n\n  _levels = [\n    {\n      name: 'Tutorial',\n      id: 'level0'\n    },\n    {\n      name: 'Level 1',\n      id: 'level1'\n    },\n    {\n      name: 'Level 2',\n      id: 'level2'\n    },\n  ];\n\n  constructor() {\n    super();\n    const titleMetrics = PIXI.TextMetrics.measureText(this._title.text, this._title.style);\n    this._title.x = Game.app.screen.width / 2 - titleMetrics.width / 2;\n    this._title.y = 100;\n    this.sceneContainer.addChild(this._title);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n    this.generateMenu();\n  }\n\n  generateMenu() {\n    const getRedirectFunction = (levelId) => () => {\n      Game.sceneManager.activeScene = levelId;\n    }\n    for (let i = 0; i < this._levels.length; i++) {\n      const levelData = this._levels[i];\n      const button = new Button(levelData.name);\n      button.x = Game.app.screen.width / 2 - button.width / 2;\n      button.y = 200 + i * 100;\n      button.onClick = getRedirectFunction(levelData.id);\n      this.sceneContainer.addChild(button);\n    }\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level0 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level0, 'level1');\n  }\n}\n","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level2 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level2);\n  }\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}