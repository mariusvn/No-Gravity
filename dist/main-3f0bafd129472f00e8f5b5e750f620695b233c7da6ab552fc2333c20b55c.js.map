{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/Tileset.js","webpack:///./src/Collision.js","webpack:///./assets/player/Player1.png","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./src/Scenes/Scene.js","webpack:///./src/Tilemap.js","webpack:///./assets/tilesets/interface32x.png","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/Event.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/Scenes/GameScene.js","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/test/test-world.csv","webpack:///./src/Scenes/testScene/testScene.js","webpack:///./assets/tilesets/prototype.png","webpack:///./assets/player/prototype.png","webpack:///./src/Loader.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","renderer","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","Tilemap","tilesets","earth","Tileset","earthTileset","x","y","moon","moonTileset","ticker","add","delta","update","addScene","testScene","MainMenu","activeScene","game","getScene","Event","isGravityEnabled","gravityForce","paused","image","tileSize","this","texture","resources","generateTileSpriteArray","dimensions","Math","floor","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","abs","Scene","sceneContainer","Container","map","heightpx","TilesetType","EARTH","lines","tileMap","split","cells","item","Number","tilemap","tileRenderSize","round","generateTilemapContent","events","addEventHandler","switchTileset","console","group","info","table","groupEnd","colliderBox","colliderTilePos","getTileCoord","sprite","spriteList","currentTileset","boundingBox","Collision","isOn","container","removeChildren","MOON","containers","keys","tilesetType","tile","getSprite","undefined","parentContainer","_parentContainer","restartCurrentScene","sceneClass","_scenes","_scenesClasses","oldActiveScene","_activeScene","onSceneEnd","removeChild","getContainer","onSceneStart","button","setScene","spritesId","onClick","scaleX","scaleY","text","textAttribute","fontFamily","fontSize","fill","align","tilesetimg","sprites","scale","initPos","tileset","position","interactive","on","over","out","click","set","anchor","Text","style","TextStyle","textMetrics","TextMetrics","measureText","textPos","e","isOver","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","Entity","gameplayState","_velocity","collider","pos","getPosition","vel","getVelocity","containerWidth","containerHeight","newPosRect","isColliding","onLanded","setPosition","setVelocity","keyboard","isDown","isUp","press","release","downHandler","event","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Player","top","left","right","bottom","playerSprite","player","resizeRatio","playerSize","keysHandlers","jump","startSneack","stopSneack","remainingJumps","isSneaked","maxSpeed","Mob","playerPosition","mobPosition","playerBox","mobBox","userPos","frontPositionX","reverse","footPositionY","tilePos","getTile","speed","isTouching","move","Camera","followedContainer","sceneContainerWidth","followedContainerX","targetPos","screenSize","Trigger","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","UserInterface","GravityIndicator","Graphics","background","beginFill","drawPolygon","Point","endFill","gravityText","gravityValueText","onGravitySwitches","DeathScreen","availableTexts","textStyle","textDims","triggerEvent","startAnim","random","isAnimating","UserInterfaceHandler","uis","ui","GameScene","gravitySwitch","screen","dynamicObjectsMap","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","mob","mob2","userInterface","cameraHandledContainer","camera","assignToContainer","startKeyboardListening","switchGravity","stopKeyboardListening","log","MapRegistry","test","assetsToLoad","prototypeTileset","prototypePlayer","pixiLoader","cb","load","WebFont","google","families","active"],"mappings":"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","file":"main-05b233c7d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([24,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport testScene from \"./Scenes/testScene/testScene\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\nimport Tileset from \"root/Tileset\";\nimport earthTileset from \"assets/tilesets/earth.png\";\nimport moonTileset from \"assets/tilesets/moon.png\";\nimport Tilemap from \"root/Tilemap\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2,\n    paused: false,\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    if (Game.app.renderer.height > 500)\n      PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n    //TODO remove frame dependency\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Tilemap.tilesets = {\n        earth: new Tileset(earthTileset, {x: 32, y: 32}),\n        moon: new Tileset(moonTileset, {x: 32, y: 32})\n      };\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(testScene, 'testScene');\n      Game.sceneManager.addScene(MainMenu, 'MainMenu');\n      Game.sceneManager.activeScene = 'testScene';\n    });\n    window.game = Game;\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","import Game from \"./main\";\n\nexport default class Tileset {\n\n  texture;\n  tileSize;\n  tileTextures = [];\n\n  /**\n   * @param {string} image\n   * @param {{x: number, y: number}} tileSize\n   */\n  constructor(image, tileSize) {\n    this.texture = Game.app.loader.resources[image].texture;\n    this.tileSize = tileSize;\n    this.generateTileSpriteArray();\n  }\n\n  generateTileSpriteArray() {\n    const dimensions = {\n      x: Math.floor(this.texture.width / this.tileSize.x),\n      y: Math.floor(this.texture.height / this.tileSize.y)\n    };\n\n    for(let y = 0; y < dimensions.y; y++) {\n      for (let x = 0; x < dimensions.x; x++) {\n        const rectangle = new PIXI.Rectangle(\n          this.tileSize.x * x,\n          this.tileSize.y * y,\n          this.tileSize.x,\n          this.tileSize.y\n        );\n\n        this.texture.frame = rectangle;\n        this.tileTextures.push(this.texture.clone());\n      }\n    }\n  }\n\n  getSprite(index) {\n    if (index > this.tileTextures.length) {\n      debugger;\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\n    }\n      return new PIXI.Sprite(this.tileTextures[index]);\n  }\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  static tilesets = {};\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = Tilemap.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","export default __webpack_public_path__ + \"images/9703cb95d0ea129f569e26e4a3fc1dd7.png\";","import Game from \"root/main\";\n\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Class dictionnary\n   * @type {Object.<string, function>}\n   */\n  _scenesClasses = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n    Game.events.addEventHandler('scene:restart', this.restartCurrentScene.bind(this));\n  }\n\n  /**\n   * @param {function} sceneClass\n   * @param {string} name\n   */\n  addScene(sceneClass, name) {\n    this._scenes[name] = new sceneClass();\n    this._scenesClasses[name] = sceneClass;\n  }\n\n  restartCurrentScene() {\n    if (!this.activeScene)\n      return;\n    const oldActiveScene = this.activeScene;\n    this._activeScene = undefined;\n    // unload old instance\n    this._scenes[oldActiveScene].onSceneEnd();\n    this._parentContainer.removeChild(this._scenes[oldActiveScene].getContainer());\n    delete this._scenes[oldActiveScene];\n\n    // create new instance\n    this._scenes[oldActiveScene] = new this._scenesClasses[oldActiveScene]();\n\n    // Initialize and display new instance\n    this._parentContainer.addChild(this._scenes[oldActiveScene].getContainer());\n    this._scenes[oldActiveScene].onSceneStart();\n    this._activeScene = oldActiveScene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenes[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","import Scene from \"../Scene\";\nimport Game from \"root/main.js\";\nimport Tileset from \"root/Tileset\";\nimport tilesetimg from 'assets/tilesets/interface32x.png';\n//import prototypeTileset from 'assets/tilesets/prototype.png';\nexport default class MainMenu extends Scene {\n\n  constructor() {\n    super();\n    let b = new button(this.sceneContainer,[69, 70, 71], setScene, 200, 100, 1, 1);\n  //  this.sceneContainer.addChild(graph);\n  }\n\n\n  update(delta) {\n    super.update(delta);\n\n  }\n\n}\n\nclass tools {\n\n}\n\nfunction cc(){\n  alert(\"cc\")\n}\n\nfunction setScene(){\n  // Game.sceneManager.addScene(new GameScene(), 'GameScene');\n   Game.sceneManager.activeScene = 'testScene';\n}\n\nclass button {\n  tileset = new Tileset(tilesetimg, {x: 32, y: 32});\n  isOver = false;\n  constructor(sceneContainer, spritesId, onClick, x = 0, y = 0, scaleX = 1, scaleY = 1, text = 'start', textAttribute = {fontFamily : 'Arial', fontSize: 15, fill : 0xff1010, align : 'left'} ) {\n    this.sprites = [];\n    this.scale = {x: scaleX, y: scaleY};\n    this.onClick = onClick;\n    let initPos = x;\n    for (var i = 0; i < spritesId.length; i++) {\n      let sprite = this.tileset.getSprite(spritesId[i]);\n      this.sprites.push(sprite);\n      sprite.position.x = x + sprite.width/2;\n      sprite.position.y = y;\n      x += 32;\n      sceneContainer.addChild(sprite);\n      this.sprites[i].interactive = true;\n      this.sprites[i].on(\"pointerover\", this.over.bind(this));\n      this.sprites[i].on(\"pointerout\", this.out.bind(this));\n      this.sprites[i].on(\"click\", this.click.bind(this));\n      this.sprites[i].scale.set(scaleX, scaleY);\n      this.sprites[i].anchor.set(0.5,0);\n   //   this.sprites[i].anchor.set(0.5);\n    }\n    this.text = new PIXI.Text(text,textAttribute);\n    this.text.anchor.set(1,1 );\n    let style = new PIXI.TextStyle(textAttribute);\n    let textMetrics = PIXI.TextMetrics.measureText(text, style)\n    //alert(textMetrics.width);\n    let textPos = {x: initPos + ((((x - initPos)/2)*scaleX) +textMetrics.width/2), y: y + (this.sprites[0].height -  textMetrics.height/2)};// textMetrics.width\n    this.text.position = textPos;\n    sceneContainer.addChild(this.text);\n    //Game.app.stage.on(\"pointermove\", this.mouseMove);\n //   this.sceneContainer.addChild(sprite2);\n   // this.sceneContainer.addChild(sprite[2]);\n  }\n\n  over(e)\n  {\n   //  this.onClick();\n    this.isOver = true;\n    for (var i = 0; i < this.sprites.length; i++) {\n     //   this.sprites[i].anchor.set(0.5,0);\n        this.text.position.y = this.text.position.y +1;\n        this.sprites[i].scale.set(this.scale.x + 0.2, this.scale.y + 0.2);\n      //  this.sprites[i].anchor.set(0);\n    }\n    this.text.scale.set(1);\n\n  }\n\n  out(e)\n  {\n   //  this.onClick();text\n    this.isOver = true;\n    for (var i = 0; i < this.sprites.length; i++) {\n        this.text.position.y = this.text.position.y -1;\n        this.sprites[i].scale.set(this.scale.x, this.scale.y);\n    }\n    this.text.scale.set(1);\n  }\n\n  click(e){\n    if(this.isOver)\n      this.onClick();\n  }\n\n  update(delta) {\n\n  }\n}\n\n//Game.app.stage.interactive = true;","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        this.onLanded();\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.15)\n            vel.x -= 0.35 * delta;\n          else if (vel.x < -0.15)\n            vel.x += 0.35 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap) {\n    super(tilemap);\n    this.playerSprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.x = 2 * this.tilemap.tileRenderSize;\n    this.container.y = 23 * this.tilemap.tileRenderSize;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x += 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.keysHandlers.left.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x -= 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n    }\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport player from 'assets/player/Player1.png';\nimport * as Collision from \"root/Collision\";\n\nexport default class Mob extends Entity {\n  sprite;\n  tilemap;\n  reverse = false;\n  speed = 5;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.sprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    const resizeRatio = (tilemap.tileRenderSize * 2) / (this.sprite.height);\n    this.sprite.scale.set(resizeRatio);\n    this.container.y = y;\n    this.container.x = x;\n    this.container.addChild(this.sprite);\n    this.tilemap = tilemap;\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width : userPos.x;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air DO NOTHING\n      return;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front of knees is filled\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y -1}) !== -1) {\n      // If tile in front of head is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1) * this.tilemap.tileRenderSize * 0.03, y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player)) {\n      //\tconsole.log(\"hit\");\n    }\n    this.move();\n  }\n\n\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity:\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    // TODO test key to trigger death screen animation\n    const a = keyboard('g');\n    a.press = () => {\n      Game.events.triggerEvent('gameplay:death');\n    }\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n    Game.gameplayState.paused = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n        Game.gameplayState.paused = false;\n        Game.events.triggerEvent('scene:restart');\n      }\n    }\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\n\nexport default class GameScene extends Scene {\n\n  player;\n  mob;\n  tilemap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n\n  /**\n   * @param {MapEntry} map\n   */\n  constructor(map) {\n    super();\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.player = new Player(this.tilemap);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n    }\n\n    window.endTrigger = this.endTrigger;\n    this.mob = new Mob(this.tilemap, 33 * this.tilemap.tileRenderSize, 20 * this.tilemap.tileRenderSize);\n    this.mob2 = new Mob(this.tilemap, 4 * this.tilemap.tileRenderSize, 16 * this.tilemap.tileRenderSize);\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.cameraHandledContainer.addChild(this.mob.container);\n    this.cameraHandledContainer.addChild(this.mob2.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.userInterface.update(delta);\n    if (Game.gameplayState.paused)\n      return;\n    this.player.update(delta);\n    this.mob.update(delta, this.player);\n    this.mob2.update(delta, this.player);\n    this.camera.update();\n    this.endTrigger.update();\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end');\n    Game.events.triggerEvent('scene:restart');\n  }\n}\n\n","import testmapCsv from 'assets/maps/test/test-world.csv';\nimport testDynamicMap from 'assets/maps/test/dynamicMap.json';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  test: {\n    tileMap: testmapCsv,\n    dynamicObjectsMap: testDynamicMap\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {any} dynamicObjectsMap\n */\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,4,5,5,5,6,8,4,5,5,5,5,5,5,6,8,4,5,5,5,5,6,4,5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,4,15,15,16,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,15,15,15,6\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,8,4,15,15,16,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,8,8,8,8,8,8,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,8,8,8,4,15,15,6,9,-1,-1,-1,-1,-1,0,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,0,2,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,15,15,15,16,-1,-1,7,18,1,1,1,1,1,20,4,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,7,9,-1,0,20,4,16,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,7,18,1,20,4,16,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,0,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,7,8,8,4,16,-1,-1,-1,-1,-1,0,20,9,-1,-1,-1,-1,14,15,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,6,4,15,15,15,15,15,15,15,15,15,6\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,14,15,15,16,-1,-1,-1,-1,-1,0,20,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,20,4,16,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,20,4,15,16,-1,-1,-1,-1,0,1,20,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,20,4,16,-1,-1,-1,-1,-1,-1,14,15,6,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,0,2,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,20,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,9,-1,-1,-1,-1,-1,7,18,1,1,20,9,-1,-1,-1,0,1,2,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,20,8,8,8,4,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,14,15,15,15,15,16,-1,-1,-1,7,4,16,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,2,-1,-1,-1,-1,14,15,15,15,15,15,15,15,15,16,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,4,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,20,9,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,4,16,-1,-1,-1,-1,-1,7,18,2,-1,-1,-1,-1,24,-1,-1,-1,-1,24,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,0,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,2,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,20,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,20\\n11,-1,-1,14,15,15,15,16,-1,-1,-1,-1,21,22,22,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,0,1,1,20,8,8,8,18,19,19,19,19,19,19,20,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,5,6\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,11,-1,-1,-1,-1,-1,-1,7,8,8,8,8,4,15,15,15,15,15,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,22,22,22,22,23,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,4,5,15,15,15,15,15,5,6,19,1,1,1,1,1,2,-1,-1,13,11,-1,-1,-1,-1,-1,-1,14,15,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,16,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20\\n18,1,1,1,1,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,2,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,0,1,20,8,8,18,2,-1,-1,-1,-1,0,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,1,1,1,1,1,1,1,1,1,20,18,19,19,19,19,19,19,20,18,1,1,1,1,1,1,20,8,8,8,8,8,18,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import GameScene from \"../GameScene\";\r\nimport MapRegistry from \"../../MapRegistry\";\r\n\r\nexport default class testScene extends GameScene {\r\n\r\n  constructor() {\r\n    super(MapRegistry.test);\r\n  }\r\n\r\n\r\n  update(delta) {\r\n    super.update(delta);\r\n  }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"images/22c5f11edadebb669e9464b10c20f3c5.png\";","export default __webpack_public_path__ + \"images/ab913da421ec22a5ad4eb0902f92d892.png\";","import prototypeTileset from 'assets/tilesets/prototype.png';\nimport prototypePlayer from 'assets/player/prototype.png';\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport tilesetimg from 'assets/tilesets/interface32x.png';\nimport player from 'assets/player/Player1.png';\n\nconst assetsToLoad = [\n  prototypeTileset,\n  prototypePlayer,\n  moonTileset,\n  tilesetimg,\n  earthTileset,\n  player\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}