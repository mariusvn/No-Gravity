{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./assets/player/Player1-old.png","webpack:///./src/Tileset.js","webpack:///./src/Collision.js","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./assets/tilesets/interface32x.png","webpack:///./assets/player/Player1.png","webpack:///./assets/tilesets/goldCoin1.png","webpack:///./src/Scenes/Scene.js","webpack:///./src/Tilemap.js","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Loader.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/Event.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Animation.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/Laser.js","webpack:///./src/Collectable.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/Scenes/GameScene.js","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/level-1/level-1.csv","webpack:///./src/Scenes/level1/level1.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","renderer","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","Tilemap","tilesets","earth","Tileset","earthTileset","x","y","moon","moonTileset","ticker","add","delta","update","addScene","MainMenu","Level1","activeScene","game","getScene","Event","isGravityEnabled","gravityForce","paused","image","tileSize","this","texture","resources","generateTileSpriteArray","dimensions","Math","floor","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","abs","Scene","sceneContainer","Container","map","heightpx","TilesetType","EARTH","lines","tileMap","split","cells","item","Number","tilemap","tileRenderSize","round","generateTilemapContent","events","addEventHandler","switchTileset","console","group","info","table","groupEnd","colliderBox","colliderTilePos","getTileCoord","sprite","spriteList","currentTileset","boundingBox","Collision","isOn","container","removeChildren","MOON","containers","keys","tilesetType","tile","getSprite","undefined","parentContainer","_parentContainer","restartCurrentScene","sceneClass","_scenes","_scenesClasses","oldActiveScene","_activeScene","onSceneEnd","removeChild","getContainer","onSceneStart","assetsToLoad","tilesetimg","player","tilecoin","playerOldFrame","pixiLoader","cb","load","button","setScene","spritesId","onClick","scaleX","scaleY","text","textAttribute","fontFamily","fontSize","fill","align","sprites","scale","initPos","tileset","position","interactive","on","over","out","click","set","anchor","Text","style","TextStyle","textMetrics","TextMetrics","measureText","textPos","e","isOver","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","Entity","gameplayState","_velocity","collider","landed","pos","getPosition","vel","getVelocity","containerWidth","containerHeight","newPosRect","isColliding","setPosition","setVelocity","onLanded","isLanded","keyboard","isDown","isUp","press","release","downHandler","event","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Animation","texPath","frameSize","animationData","defaultAnim","delay","_animTexture","_frameSize","_currentAnim","_animData","_delay","anim","_frameRect","_setCurrentAnimFrame","_intervalId","setInterval","current","animated","_currentAnimFrame","from","to","tileId","clearInterval","animName","Player","top","left","right","bottom","playerAnimation","playerSprite","resizeRatio","playerSize","keysHandlers","jump","startSneack","stopSneack","start","unload","remainingJumps","isSneaked","setCurrentAnimation","maxSpeed","Mob","playerPosition","mobPosition","playerBox","mobBox","userPos","frontPositionX","reverse","footPositionY","tilePos","getTile","speed","isTouching","_canHitPlayer","triggerEvent","move","Camera","followedContainer","sceneContainerWidth","followedContainerX","targetPos","screenSize","Trigger","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","Laser","direction","laserimg","angle","_laserlength","laserHitReg","startInterval","onHit","_active","alpha","Collectable","total","pick","takeCoin","pickup","_pick","log","UserInterface","GravityIndicator","Graphics","background","beginFill","drawPolygon","Point","endFill","gravityText","gravityValueText","onGravitySwitches","DeathScreen","availableTexts","textStyle","textDims","startAnim","random","isAnimating","UserInterfaceHandler","uis","ui","GameScene","gravitySwitch","screen","dynamicObjectsMap","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","laserData","laser","lasers","cameraHandledContainer","ennemies","ennemy","mob","mobs","collectables","collectableData","collectable","userInterface","camera","assignToContainer","updateLasers","updateMobs","updateCollectable","startKeyboardListening","switchGravity","stopKeyboardListening","forEach","MapRegistry","level1","WebFont","google","families","active"],"mappings":"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","file":"main-022ab1e32.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([26,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\nimport Tileset from \"root/Tileset\";\nimport earthTileset from \"assets/tilesets/earth.png\";\nimport moonTileset from \"assets/tilesets/moon.png\";\nimport Tilemap from \"root/Tilemap\";\nimport Level1 from \"root/Scenes/level1/level1\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2,\n    paused: false,\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    if (Game.app.renderer.height > 500)\n      PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Tilemap.tilesets = {\n        earth: new Tileset(earthTileset, {x: 32, y: 32}),\n        moon: new Tileset(moonTileset, {x: 32, y: 32})\n      };\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(MainMenu, 'MainMenu');\n      Game.sceneManager.addScene(Level1, 'level1');\n      Game.sceneManager.activeScene = 'level1';\n    });\n    window.game = Game;\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","import Game from \"./main\";\n\nexport default class Tileset {\n\n  texture;\n  tileSize;\n  tileTextures = [];\n\n  /**\n   * @param {string} image\n   * @param {{x: number, y: number}} tileSize\n   */\n  constructor(image, tileSize) {\n    this.texture = Game.app.loader.resources[image].texture;\n    this.tileSize = tileSize;\n    this.generateTileSpriteArray();\n  }\n\n  generateTileSpriteArray() {\n    const dimensions = {\n      x: Math.floor(this.texture.width / this.tileSize.x),\n      y: Math.floor(this.texture.height / this.tileSize.y)\n    };\n\n    for(let y = 0; y < dimensions.y; y++) {\n      for (let x = 0; x < dimensions.x; x++) {\n        const rectangle = new PIXI.Rectangle(\n          this.tileSize.x * x,\n          this.tileSize.y * y,\n          this.tileSize.x,\n          this.tileSize.y\n        );\n\n        this.texture.frame = rectangle;\n        this.tileTextures.push(this.texture.clone());\n      }\n    }\n  }\n\n  getSprite(index) {\n    if (index > this.tileTextures.length) {\n      debugger;\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\n    }\n      return new PIXI.Sprite(this.tileTextures[index]);\n  }\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","export default __webpack_public_path__ + \"images/9703cb95d0ea129f569e26e4a3fc1dd7.png\";","export default __webpack_public_path__ + \"images/30fe6fb893db61d20647ca451629b4ae.png\";","export default __webpack_public_path__ + \"images/ede9caaf7e31907c893eb304262121b7.png\";","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  static tilesets = {};\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = Tilemap.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Class dictionnary\n   * @type {Object.<string, function>}\n   */\n  _scenesClasses = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n    Game.events.addEventHandler('scene:restart', this.restartCurrentScene.bind(this));\n  }\n\n  /**\n   * @param {function} sceneClass\n   * @param {string} name\n   */\n  addScene(sceneClass, name) {\n    this._scenes[name] = new sceneClass();\n    this._scenesClasses[name] = sceneClass;\n  }\n\n  restartCurrentScene() {\n    if (!this.activeScene)\n      return;\n    const oldActiveScene = this.activeScene;\n    this._activeScene = undefined;\n    // unload old instance\n    this._scenes[oldActiveScene].onSceneEnd();\n    this._parentContainer.removeChild(this._scenes[oldActiveScene].getContainer());\n    delete this._scenes[oldActiveScene];\n\n    // create new instance\n    this._scenes[oldActiveScene] = new this._scenesClasses[oldActiveScene]();\n\n    // Initialize and display new instance\n    this._parentContainer.addChild(this._scenes[oldActiveScene].getContainer());\n    this._scenes[oldActiveScene].onSceneStart();\n    this._activeScene = oldActiveScene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenes[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","import moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport tilesetimg from 'assets/tilesets/interface32x.png';\nimport player from 'assets/player/Player1.png';\nimport playerOldFrame from 'assets/player/Player1-old.png';\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\n\nconst assetsToLoad = [\n  moonTileset,\n  tilesetimg,\n  earthTileset,\n  player,\n  tilecoin,\n  playerOldFrame\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import Scene from \"../Scene\";\nimport Game from \"root/main.js\";\nimport Tileset from \"root/Tileset\";\nimport tilesetimg from 'assets/tilesets/interface32x.png';\n//import prototypeTileset from 'assets/tilesets/prototype.png';\nexport default class MainMenu extends Scene {\n\n  constructor() {\n    super();\n    let b = new button(this.sceneContainer,[69, 70, 71], setScene, 200, 100, 1, 1);\n  //  this.sceneContainer.addChild(graph);\n  }\n\n\n  update(delta) {\n    super.update(delta);\n\n  }\n\n}\n\nclass tools {\n\n}\n\nfunction cc(){\n  alert(\"cc\")\n}\n\nfunction setScene(){\n  // Game.sceneManager.addScene(new GameScene(), 'GameScene');\n   Game.sceneManager.activeScene = 'testScene';\n}\n\nclass button {\n  tileset = new Tileset(tilesetimg, {x: 32, y: 32});\n  isOver = false;\n  constructor(sceneContainer, spritesId, onClick, x = 0, y = 0, scaleX = 1, scaleY = 1, text = 'start', textAttribute = {fontFamily : 'Arial', fontSize: 15, fill : 0xff1010, align : 'left'} ) {\n    this.sprites = [];\n    this.scale = {x: scaleX, y: scaleY};\n    this.onClick = onClick;\n    let initPos = x;\n    for (var i = 0; i < spritesId.length; i++) {\n      let sprite = this.tileset.getSprite(spritesId[i]);\n      this.sprites.push(sprite);\n      sprite.position.x = x + sprite.width/2;\n      sprite.position.y = y;\n      x += 32;\n      sceneContainer.addChild(sprite);\n      this.sprites[i].interactive = true;\n      this.sprites[i].on(\"pointerover\", this.over.bind(this));\n      this.sprites[i].on(\"pointerout\", this.out.bind(this));\n      this.sprites[i].on(\"click\", this.click.bind(this));\n      this.sprites[i].scale.set(scaleX, scaleY);\n      this.sprites[i].anchor.set(0.5,0);\n   //   this.sprites[i].anchor.set(0.5);\n    }\n    this.text = new PIXI.Text(text,textAttribute);\n    this.text.anchor.set(1,1 );\n    let style = new PIXI.TextStyle(textAttribute);\n    let textMetrics = PIXI.TextMetrics.measureText(text, style)\n    //alert(textMetrics.width);\n    let textPos = {x: initPos + ((((x - initPos)/2)*scaleX) +textMetrics.width/2), y: y + (this.sprites[0].height -  textMetrics.height/2)};// textMetrics.width\n    this.text.position = textPos;\n    sceneContainer.addChild(this.text);\n    //Game.app.stage.on(\"pointermove\", this.mouseMove);\n //   this.sceneContainer.addChild(sprite2);\n   // this.sceneContainer.addChild(sprite[2]);\n  }\n\n  over(e)\n  {\n   //  this.onClick();\n    this.isOver = true;\n    for (var i = 0; i < this.sprites.length; i++) {\n     //   this.sprites[i].anchor.set(0.5,0);\n        this.text.position.y = this.text.position.y +1;\n        this.sprites[i].scale.set(this.scale.x + 0.2, this.scale.y + 0.2);\n      //  this.sprites[i].anchor.set(0);\n    }\n    this.text.scale.set(1);\n\n  }\n\n  out(e)\n  {\n   //  this.onClick();text\n    this.isOver = true;\n    for (var i = 0; i < this.sprites.length; i++) {\n        this.text.position.y = this.text.position.y -1;\n        this.sprites[i].scale.set(this.scale.x, this.scale.y);\n    }\n    this.text.scale.set(1);\n  }\n\n  click(e){\n    if(this.isOver)\n      this.onClick();\n  }\n\n  update(delta) {\n\n  }\n}\n\n//Game.app.stage.interactive = true;","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n  isLanded = true;\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let landed = false;\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        landed = true;\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.15)\n            vel.x -= 0.6 * delta;\n          else if (vel.x < -0.15)\n            vel.x += 0.6 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n    if (landed)\n      this.onLanded();\n    this.isLanded = landed;\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Game from \"root/main\";\n\n/**\n * @typedef {Object.<string, {isAnimated: boolean, tileId?: number, from?: number, to?: number}>} AnimationData\n */\n\nexport default class Animation {\n  _animTexture;\n  _frameSize;\n  sprite;\n  /** @type AnimationData */\n  _animData;\n  _currentAnim;\n  _currentAnimFrame = 0;\n  _frameRect = new PIXI.Rectangle();\n  _intervalId = -1;\n  _delay;\n\n  /**\n   * @param {string} texPath\n   * @param {{x: number, y: number}} frameSize\n   * @param {AnimationData} animationData\n   * @param {string} defaultAnim\n   * @param {number} delay\n   */\n  constructor(texPath, frameSize, animationData, defaultAnim, delay) {\n    this._animTexture = Game.app.loader.resources[texPath].texture;\n    this._frameSize = frameSize;\n    this._currentAnim = defaultAnim;\n    this._animData = animationData;\n    this._delay = delay;\n    window.anim = this;\n\n    /* Setting up default frame */\n    this._frameRect.width = frameSize.x;\n    this._frameRect.height = frameSize.y;\n    this._frameRect.y = 0;\n    this._setCurrentAnimFrame();\n    this._animTexture.frame = this._frameRect;\n\n\n    this.sprite = new PIXI.Sprite(this._animTexture);\n  }\n\n  start() {\n    this._intervalId = setInterval(this._setCurrentAnimFrame.bind(this), this._delay);\n  }\n\n  _setCurrentAnimFrame() {\n    const current = this._animData[this._currentAnim];\n    if (!current)\n      return;\n    if (current.animated) {\n      if (!this._currentAnimFrame)\n        this._currentAnimFrame = current.from - 1;\n      if (this._currentAnimFrame >= current.to) {\n        this._currentAnimFrame = current.from;\n        this._frameRect.x = current.from * this._frameRect.width;\n      } else {\n        this._currentAnimFrame++;\n        this._frameRect.x = this._currentAnimFrame * this._frameRect.width;\n      }\n    } else {\n      this._currentAnimFrame = current.tileId;\n      this._frameRect.x = current.tileId * this._frameRect.width;\n    }\n    this._animTexture.frame = this._frameRect;\n  }\n\n  unload() {\n    if (this._intervalId !== -1) {\n      clearInterval(this._intervalId);\n      this._intervalId = -1;\n    }\n  }\n\n  /**\n   * @param {string} animName\n   */\n  setCurrentAnimation(animName) {\n    if (animName !== this._currentAnim) {\n      this._currentAnim = animName;\n    }\n  }\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\nimport Animation from \"root/Animation\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerAnimation;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.playerAnimation = new Animation(player, {x: 32, y: 56}, {\n      'idle': {\n        animated: false,\n        tileId: 0\n      },\n      'run': {\n        animated: true,\n        from: 1,\n        to: 7\n      }\n    }, 'idle', 100);\n    this.playerSprite = this.playerAnimation.sprite;\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.x = x * this.tilemap.tileRenderSize;\n    this.container.y = y * this.tilemap.tileRenderSize;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n    this.playerAnimation.start();\n    /*const run = () => this.playerAnimation.setCurrentAnimation('run');\n    const idle = (keyCheck) => () => {\n      if (!keyCheck.isDown)\n        this.playerAnimation.setCurrentAnimation('idle');\n    }\n    this.keysHandlers.right.press = run;\n    this.keysHandlers.left.press = run;\n    this.keysHandlers.right.release = idle(this.keysHandlers.left);\n    this.keysHandlers.left.release = idle(this.keysHandlers.right);*/\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n    this.playerAnimation.unload();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    if (this.isLanded) {\n      if (this.keysHandlers.right.isDown || this.keysHandlers.left.isDown)\n        this.playerAnimation.setCurrentAnimation('run');\n      else\n        this.playerAnimation.setCurrentAnimation('idle');\n    } else {\n      this.playerAnimation.setCurrentAnimation('idle');\n    }\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x += 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.keysHandlers.left.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x -= 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n    }\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport player from 'assets/player/Player1-old.png';\nimport * as Collision from \"root/Collision\";\n\nexport default class Mob extends Entity {\n  sprite;\n  reverse = false;\n  speed = 5;\n  _canHitPlayer = true;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.sprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    const resizeRatio = (tilemap.tileRenderSize * 2) / (this.sprite.height);\n    this.sprite.scale.set(resizeRatio);\n    this.container.y = y * tilemap.tileRenderSize;\n    this.container.x = x * tilemap.tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width : userPos.x;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air DO NOTHING\n      return;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front of knees is filled\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y - 1}) !== -1) {\n      // If tile in front of head is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1) * this.tilemap.tileRenderSize * 0.03, y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player) && this._canHitPlayer) {\n      Game.events.triggerEvent('gameplay:death');\n      this._canHitPlayer = false;\n    }\n    this.move();\n  }\n\n\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\nimport laserimg from 'assets/player/Player1-old.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Laser {\n  container = new PIXI.Container();\n  sprite = [];\n  _canHitPlayer = true;\n  _active = true;\n  _intervalId;\n  _laserlength;\n  delay;\n\n  constructor(player, tilemap, {x, y, length, delay, direction}) {\n    x = x * tilemap.tileRenderSize;\n    y = y * tilemap.tileRenderSize;\n    for (let i = 0; i <= length - 1; i++) {\n\n      this.sprite.push(new PIXI.Sprite(Game.app.loader.resources[laserimg].texture));\n      this.sprite[i].width = tilemap.tileRenderSize;\n      this.sprite[i].height = tilemap.tileRenderSize;\n      if (direction === \"top\") {\n        this.sprite[i].y = y - this.sprite[i].height * (i + 1);\n        this.sprite[i].x = x\n      } else if (direction === \"bottom\") {\n        this.sprite[i].y = y + this.sprite[i].height * i;\n        this.sprite[i].x = x\n      } else if (direction === \"left\") {\n        this.sprite[i].angle = -90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x - this.sprite[i].height * (i + 1);\n      } else {\n        this.sprite[i].angle = 90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x + this.sprite[i].height * (i + 1);\n      }\n\n      this._laserlength = this.sprite[i].height;\n      this.container.addChild(this.sprite[i]);\n    }\n\n    if (direction === \"top\" || direction === \"bottom\") {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[0].x,\n          this.sprite[(direction === \"bottom\") ? 0 : this.sprite.length - 1].y,\n          this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length\n        ),\n        player.container\n      );\n    } else {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[(direction === \"right\") ? 0 : this.sprite.length - 1].x - ((direction === \"right\") ? this.sprite[0].height : 0),\n          this.sprite[0].y + ((direction === \"right\") ? 0 : -1) * this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length,\n          this.sprite[0].width\n        ),\n        player.container\n      );\n    }\n\n    this.delay = delay;\n    this._intervalId = this.startInterval();\n    this.laserHitReg.onCollide = this.onHit.bind(this);\n  }\n\n  onHit() {\n    if (this._canHitPlayer) {\n      this._canHitPlayer = false;\n      Game.events.triggerEvent('gameplay:death');\n    }\n  }\n\n  startInterval() {\n\n    return setInterval(() => {\n      if (this.delay !== -1)\n        this._active = !this._active;\n\n      let alpha = (this._active ? 1 : 0);\n      for (let i = 0; i < this.sprite.length; i++) {\n        this.sprite[i].alpha = alpha;\n      }\n\n    }, this.delay)\n  }\n\n  onSceneEnd() {\n    clearInterval(this._intervalId);\n  }\n\n  update() {\n    if (this._active)\n      this.laserHitReg.update()\n  }\n\n}\n","import Game from \"root/main\";\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Collectable{\n  container = new PIXI.Container();\n  count = {total: 0, pick: 0,}\n  sprite\n  _pick = false;\n  constructor(player, x, y, tileRenderSize) {\n    this.sprite =  new PIXI.Sprite(Game.app.loader.resources[tilecoin].texture);\n    this.sprite.width = tileRenderSize;\n    this.sprite.height = tileRenderSize;\n\n    this.container.x = x * tileRenderSize;\n    this.container.y = y * tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.takeCoin = new Trigger(\n      new PIXI.Rectangle(\n        this.container.x,\n        this.container.y,\n        this.sprite.width,\n        this.sprite.height\n      ),\n      player.container\n    );\n    this.takeCoin.onCollide = this.pickup.bind(this);\n  }\n\n  pickup(){\n    this._pick = true;\n    this.takeCoin.onCollide = undefined;\n    this.container.removeChild(this.sprite);\n    console.log(\"pickup\");\n  }\n\n  isPick(){return this._pick}\n\n  update(){\n    this.takeCoin.update()\n  }\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity:\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    // TODO test key to trigger death screen animation\n    const a = keyboard('g');\n    a.press = () => {\n      Game.events.triggerEvent('gameplay:death');\n    }\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n    Game.gameplayState.paused = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n        Game.gameplayState.paused = false;\n        Game.events.triggerEvent('scene:restart');\n      }\n    }\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport Laser from \"root/Laser\";\nimport Collectable from \"root/Collectable\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\n\nexport default class GameScene extends Scene {\n\n  player;\n  tilemap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n  lasers = [];\n  mobs = [];\n  collectables = [];\n\n  /**\n   * @param {MapEntry} map\n   */\n  constructor(map) {\n    super();\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.player = new Player(this.tilemap, map.dynamicObjectsMap.start.x, map.dynamicObjectsMap.start.y);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n    }\n\n    window.endTrigger = this.endTrigger;\n    for (const laserData of map.dynamicObjectsMap.laserHitReg) {\n      const laser = new Laser(this.player, this.tilemap, laserData)\n      this.lasers.push(laser);\n      this.cameraHandledContainer.addChild(laser.container);\n    }\n    for (const ennemy of map.dynamicObjectsMap.ennemies) {\n      const mob = new Mob(this.tilemap, ennemy.x, ennemy.y);\n      this.mobs.push(mob);\n      this.cameraHandledContainer.addChild(mob.container);\n    }\n    for (const collectableData of map.dynamicObjectsMap.collectables) {\n      const collectable = new Collectable(\n        this.player,\n        collectableData.x,\n        collectableData.y,\n        this.tilemap.tileRenderSize);\n      this.collectables.push(collectable);\n      this.cameraHandledContainer.addChild(collectable.container);\n    }\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.userInterface.update(delta);\n    if (Game.gameplayState.paused)\n      return;\n    this.player.update(delta);\n    this.camera.update();\n    this.updateLasers();\n    this.updateMobs(delta);\n    this.updateCollectable();\n    this.userInterface.update(delta);\n    this.endTrigger.update();\n  }\n\n  updateLasers() {\n    for (const laser of this.lasers) {\n      laser.update();\n    }\n  }\n\n  updateMobs(delta) {\n    for (const mob of this.mobs) {\n      mob.update(delta, this.player);\n    }\n  }\n\n  updateCollectable() {\n    for (const collectable of this.collectables) {\n      collectable.update();\n    }\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n    this.lasers.forEach(item => item.onSceneEnd());\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end');\n    Game.events.triggerEvent('scene:restart');\n  }\n}\n\n","import level1Csv from 'assets/maps/level-1/level-1.csv';\nimport level1Json from 'assets/maps/level-1/level-1.json';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  level1: {\n    tileMap: level1Csv,\n    dynamicObjectsMap: level1Json\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {{\n *   endTrigger: {\n *     x: number,\n *     y: number,\n *     width: number,\n *     height: number\n *   },\n *   start: {\n *     x: number,\n *     y: number\n *   },\n *   laserHitReg: Array<{\n *     x: number,\n *     y: number,\n *     length: number,\n *     delay: number,\n *     direction: 'top'|'left'|'right'|'bottom'\n *   }>,\n *   ennemies: Array<{\n *     x: number,\n *     y: number,\n *     speed: number\n *   }>,\n *   collectables: Array<{\n *     x: number,\n *     y: number\n *   }>\n * }} dynamicObjectsMap\n */\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,9,-1,0,2,-1,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,4,5,5,6,8,18,19,20,18,19,19,19,19,19,19,20,9,-1,-1,-1,-1,-1,7,8,4,15,6,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,6\\n8,4,5,5,5,16,-1,-1,14,5,5,5,6,8,8,8,8,8,8,8,8,18,2,-1,-1,-1,0,20,4,16,-1,14,5,5,5,5,5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,5,5,5,5,5,5,5,5,15,16,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,20\\n8,9,-1,-1,-1,-1,0,19,19,19,19,19,19,2,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8\\n8,18,1,1,1,1,20,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,19,19,19,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level1 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level1);\n  }\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}