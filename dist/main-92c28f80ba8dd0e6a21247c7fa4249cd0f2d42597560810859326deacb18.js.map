{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/ui/Button.js","webpack:///./src/Scenes/Scene.js","webpack:///./src/Collision.js","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./src/Tileset.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Animation.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/Laser.js","webpack:///./src/Collectable.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/navigation.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/StaticTilemap.js","webpack:///./src/Scenes/GameScene.js","webpack:///./assets/maps/level-1/level-1.csv","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/level-0/level-0.csv","webpack:///./assets/maps/level-0/level-0-back.csv","webpack:///./assets/maps/level-1/level-1-back.csv","webpack:///./assets/maps/level-2/level-2.csv","webpack:///./assets/maps/level-2/level-2-back.csv","webpack:///./assets/player/Player1.png","webpack:///./assets/tilesets/goldCoin1.png","webpack:///./assets/tilesets/laser.png","webpack:///./assets/tilesets/keyboard-layout.png","webpack:///./assets/tilesets/laser-shooter.png","webpack:///./assets/tilesets/misc.png","webpack:///./assets/tilesets/logo.png","webpack:///./assets/tilesets/buzzsaw.png","webpack:///./assets/tilesets/flag.png","webpack:///./src/Tilemap.js","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/Event.js","webpack:///./src/Scenes/level1/level1.js","webpack:///./src/Scenes/howToPlay/howToPlayScene.js","webpack:///./src/Scenes/credits/creditScene.js","webpack:///./src/Scenes/levels/levelsScene.js","webpack:///./src/Scenes/level0/level0.js","webpack:///./src/Scenes/level2/level2.js","webpack:///./assets/player/Player1-old.png","webpack:///./src/Loader.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","renderer","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","Tilemap","tilesets","earth","Tileset","earthTileset","x","y","moon","moonTileset","ticker","add","delta","update","addScene","MainMenu","HowToPlayScene","creditScene","levelsScene","Level1","Level0","Level2","activeScene","game","getScene","Event","isGravityEnabled","gravityForce","paused","Button","text","undefined","Container","TextStyle","fontFamily","fontSize","fill","Text","_textStyle","Graphics","_container","_background","_text","interactive","on","_onHover","_onHoverEnd","_onClick","scale","set","this","_textMectric","_padding","getRandomInt","padding","Math","floor","random","offsets","clear","beginFill","drawPolygon","Point","endFill","onClick","val","TextMetrics","measureText","_drawBackground","PIXIimport","Scene","sceneContainer","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","abs","image","tileSize","texture","resources","generateTileSpriteArray","dimensions","baseTexture","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","Entity","tilemap","gameplayState","_velocity","tileRenderSize","collider","landed","pos","getPosition","vel","getVelocity","containerWidth","container","containerHeight","newPosRect","isColliding","setPosition","setVelocity","onLanded","isLanded","keyboard","isDown","isUp","press","release","downHandler","event","toLowerCase","toUpperCase","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Animation","texPath","frameSize","animationData","defaultAnim","delay","_animTexture","_frameSize","_currentAnim","_animData","_delay","anim","_frameRect","_setCurrentAnimFrame","sprite","_intervalId","stop","setInterval","_isPaused","current","animated","_currentAnimFrame","from","to","loop","onAnimationFinished","_lastestAnimFinished","tileId","clearInterval","animName","start","Player","top","left","leftQwerty","right","bottom","playerAnimation","player","playerSprite","resizeRatio","playerSize","anchor","keysHandlers","jump","startSneack","stopSneack","events","addEventHandler","onGravityChanges","removeEventHandler","remainingJumps","isSneaked","setCurrentAnimation","maxSpeed","isOn","resume","pause","Mob","speeeeed","_animation","sawAnimImg","speed","playerPosition","mobPosition","playerBox","mobBox","Collision","userPos","frontPositionX","reverse","footPositionY","tilePos","getTileCoord","getTile","isTouching","_canHitPlayer","triggerEvent","move","Camera","followedContainer","sceneContainerWidth","followedContainerX","targetPos","round","screenSize","Trigger","position","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","Laser","direction","blockSize","pixelSize","laserShooter","laserShooterImg","angle","laserimg","_laserlength","laserHitReg","startInterval","onHit","_active","alpha","Collectable","total","pick","tilecoin","takeCoin","pickup","_pick","removeChild","console","log","UserInterface","GravityIndicator","background","gravityText","gravityValueText","onGravitySwitches","style","DeathScreen","availableTexts","textStyle","textDims","startAnim","isAnimating","Navigation","MainMenuButton","goToMainMenu","UserInterfaceHandler","uis","ui","StaticTilemap","map","heightpx","resourcePath","tileset","lines","split","cells","item","Number","generateTilemapContent","group","info","table","groupEnd","colliderBox","colliderTilePos","spriteList","boundingBox","tile","getSprite","GameScene","nextScene","gravitySwitch","screen","backTileMap","backTilesetImg","dynamicObjectsMap","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","flagAnimation","flagAnimImg","flagSprite","cameraHandledContainer","laserData","laser","lasers","ennemies","ennemy","mob","mobs","collectables","collectableData","collectable","userInterface","camera","assignToContainer","updateLasers","updateMobs","updateCollectable","startKeyboardListening","switchGravity","stopKeyboardListening","forEach","onSceneEnd","unload","isPick","setTimeout","MapRegistry","level0","tileMap","level1","level1Json","level2","TilesetType","EARTH","switchTileset","currentTileset","removeChildren","MOON","containers","keys","tilesetType","parentContainer","_parentContainer","restartCurrentScene","sceneClass","_scenesClasses","oldActiveScene","_activeScene","_scenes","getContainer","onSceneStart","logoSprite","logoImg","startButton","startGame","levelsButton","goToLevels","howToPlay","goToHowToPlay","creditsButton","goToCredits","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","align","_textContent","keyboardLayout","_textMetrics","_keyboardSprite","_mainMenuButton","CreditScene","LevelsScene","id","titleMetrics","_title","generateMenu","getRedirectFunction","levelId","_levels","levelData","button","assetsToLoad","playerOldFrame","miscTileset","logo","flagAnim","pixiLoader","cb","load","WebFont","google","families","active"],"mappings":"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","file":"main-00f2d4259.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([41,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\nimport Tileset from \"root/Tileset\";\nimport earthTileset from \"assets/tilesets/earth.png\";\nimport moonTileset from \"assets/tilesets/moon.png\";\nimport Tilemap from \"root/Tilemap\";\nimport Level1 from \"root/Scenes/level1/level1\";\nimport HowToPlayScene from \"root/Scenes/howToPlay/howToPlayScene\";\nimport creditScene from \"root/Scenes/credits/creditScene\";\nimport levelsScene from \"root/Scenes/levels/levelsScene\";\nimport Level0 from \"root/Scenes/level0/level0\";\nimport Level2 from \"root/Scenes/level2/level2\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2,\n    paused: false,\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    if (Game.app.renderer.height > 500)\n      PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Tilemap.tilesets = {\n        earth: new Tileset(earthTileset, {x: 32, y: 32}),\n        moon: new Tileset(moonTileset, {x: 32, y: 32})\n      };\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(MainMenu, 'MainMenu');\n      Game.sceneManager.addScene(HowToPlayScene, 'HowToPlay');\n      Game.sceneManager.addScene(creditScene, 'credits');\n      Game.sceneManager.addScene(levelsScene, 'levels');\n      Game.sceneManager.addScene(Level1, 'level1');\n      Game.sceneManager.addScene(Level0, 'level0');\n      Game.sceneManager.addScene(Level2, 'level2');\n      Game.sceneManager.activeScene = 'MainMenu';\n    });\n    window.game = Game;\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","import * as PIXIimport from 'pixi.js';\n\nexport default class Button extends PIXIimport.Container {\n  onClick = undefined;\n\n  _container = new PIXI.Container();\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 45,\n    fill: '0xfff'\n  });\n  _text = new PIXI.Text('', this._textStyle);\n  _textMectric;\n  _background = new PIXI.Graphics();\n  _padding = {\n    x: 90,\n    y: 10\n  }\n\n  constructor(text) {\n    super();\n    this.text = text;\n    this._container.addChild(this._background);\n    this._container.addChild(this._text);\n    this._background.interactive = true;\n    this._background.on('mouseover', this._onHover.bind(this));\n    this._background.on('mouseout', this._onHoverEnd.bind(this));\n    this._background.on('click', this._onClick.bind(this));\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n    this.addChild(this._container);\n  }\n\n  get text() {\n    return this._text.text;\n  }\n\n  set text(val) {\n    this._textMectric = PIXI.TextMetrics.measureText(val, this._textStyle);\n    this._drawBackground();\n    this._text.text = val;\n  }\n\n  _drawBackground() {\n    const width = this._textMectric.width + this._padding.x * 2;\n    const height = this._textMectric.height + this._padding.y * 2;\n    const getRandomInt = (padding) => {\n      padding /= 2;\n      return Math.floor(Math.random() * Math.floor(padding));\n    }\n\n    // Setting text position\n    this._text.x = this._padding.x;\n    this._text.y = this._padding.y;\n\n    // Generating offsets of the borders\n    const offsets = [\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      }\n    ]\n\n    // Draw\n    this._background.clear();\n    this._background.beginFill(0x3E83C1);\n    this._background.drawPolygon([\n      new PIXI.Point(offsets[0].x, offsets[0].y),\n      new PIXI.Point(width - offsets[1].x, offsets[1].y),\n      new PIXI.Point(width - offsets[2].x, height - offsets[2].y),\n      new PIXI.Point(offsets[3].x, height - offsets[3].y),\n    ]);\n    this._background.endFill();\n  }\n\n  _onHover() {\n    this._container.x = 0;\n    this._container.y = 0;\n    this._container.scale.set(1);\n  }\n\n  _onHoverEnd() {\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n  }\n\n  _onClick() {\n    if (typeof this.onClick === 'function')\n      this.onClick();\n  }\n\n\n}\n","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","import Game from \"./main\";\n\nexport default class Tileset {\n\n  texture;\n  tileSize;\n  tileTextures = [];\n\n  /**\n   * @param {string} image\n   * @param {{x: number, y: number}} tileSize\n   */\n  constructor(image, tileSize) {\n    this.texture = Game.app.loader.resources[image].texture;\n    this.tileSize = tileSize;\n    this.generateTileSpriteArray();\n  }\n\n  generateTileSpriteArray() {\n    const dimensions = {\n      x: Math.floor(this.texture.baseTexture.width / this.tileSize.x),\n      y: Math.floor(this.texture.baseTexture.height / this.tileSize.y)\n    };\n\n    for(let y = 0; y < dimensions.y; y++) {\n      for (let x = 0; x < dimensions.x; x++) {\n        const rectangle = new PIXI.Rectangle(\n          this.tileSize.x * x,\n          this.tileSize.y * y,\n          this.tileSize.x,\n          this.tileSize.y\n        );\n\n        this.texture.frame = rectangle;\n        this.tileTextures.push(this.texture.clone());\n      }\n    }\n  }\n\n  getSprite(index) {\n    if (index > this.tileTextures.length) {\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\n    }\n      return new PIXI.Sprite(this.tileTextures[index]);\n  }\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n  isLanded = true;\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let landed = false;\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        landed = true;\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.61)\n            vel.x -= 0.6 * delta;\n          else if (vel.x < -0.61)\n            vel.x += 0.6 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n    if (landed)\n      this.onLanded();\n    this.isLanded = landed;\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value.toLowerCase() || event.key === key.value.toUpperCase()) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value.toLowerCase() || event.key === key.value.toUpperCase()) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Game from \"root/main\";\n\n/**\n * @typedef {Object.<string, {isAnimated: boolean, tileId?: number, from?: number, to?: number}>} AnimationData\n */\n\nexport default class Animation {\n  _animTexture;\n  _frameSize;\n  sprite;\n  /** @type AnimationData */\n  _animData;\n  _currentAnim;\n  _currentAnimFrame = 0;\n  _frameRect = new PIXI.Rectangle();\n  _intervalId = -1;\n  _delay;\n  _isPaused = false;\n  onAnimationFinished = undefined;\n  _lastestAnimFinished = '';\n\n  /**\n   * @param {string} texPath\n   * @param {{x: number, y: number}} frameSize\n   * @param {AnimationData} animationData\n   * @param {string} defaultAnim\n   * @param {number} delay\n   */\n  constructor(texPath, frameSize, animationData, defaultAnim, delay) {\n    this._animTexture = Game.app.loader.resources[texPath].texture;\n    this._frameSize = frameSize;\n    this._currentAnim = defaultAnim;\n    this._animData = animationData;\n    this._delay = delay;\n    window.anim = this;\n\n    /* Setting up default frame */\n    this._frameRect.width = frameSize.x;\n    this._frameRect.height = frameSize.y;\n    this._frameRect.y = 0;\n    this._setCurrentAnimFrame();\n    this._animTexture.frame = this._frameRect;\n\n\n    this.sprite = new PIXI.Sprite(this._animTexture);\n  }\n\n  start() {\n    if (this._intervalId !== -1)\n      this.stop();\n    this._intervalId = setInterval(this._setCurrentAnimFrame.bind(this), this._delay);\n  }\n\n  pause() {\n    this._isPaused = true;\n  }\n\n  resume() {\n    this._isPaused = false;\n  }\n\n  _setCurrentAnimFrame() {\n    if (this._isPaused)\n      return;\n    const current = this._animData[this._currentAnim];\n    if (!current)\n      return;\n    if (current.animated) {\n      if (this._currentAnimFrame === undefined)\n        this._currentAnimFrame = current.from - 1;\n      if (this._currentAnimFrame >= current.to) {\n        if (current.loop) {\n          this._currentAnimFrame = current.from;\n          this._frameRect.x = current.from * this._frameRect.width;\n        } else {\n          if (typeof this.onAnimationFinished === 'function') {\n            if (this._lastestAnimFinished !== this._currentAnim) {\n              this._lastestAnimFinished = this._currentAnim;\n              this.onAnimationFinished(this._currentAnim);\n            }\n          }\n        }\n      } else {\n        this._currentAnimFrame++;\n        this._frameRect.x = this._currentAnimFrame * this._frameRect.width;\n      }\n    } else {\n      this._currentAnimFrame = current.tileId;\n      this._frameRect.x = current.tileId * this._frameRect.width;\n    }\n    this._animTexture.frame = this._frameRect;\n  }\n\n  stop() {\n    if (this._intervalId !== -1) {\n      clearInterval(this._intervalId);\n      this._intervalId = -1;\n    }\n  }\n\n  /**\n   * @param {string} animName\n   */\n  setCurrentAnimation(animName) {\n    if (animName !== this._currentAnim) {\n      this._currentAnim = animName;\n      this._currentAnimFrame = this._animData[this._currentAnim].start;\n      this._setCurrentAnimFrame();\n    }\n  }\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\nimport Animation from \"root/Animation\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerAnimation;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    leftQwerty: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.playerAnimation = new Animation(player, {x: 32, y: 56}, {\n      'idle': {\n        animated: false,\n        tileId: 0\n      },\n      'run': {\n        animated: true,\n        from: 1,\n        to: 7,\n        loop: true\n      },\n      'jump': {\n        animated: true,\n        from: 10,\n        to: 13,\n        loop: false\n      }\n    }, 'idle', 100);\n    this.playerSprite = this.playerAnimation.sprite;\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.x = x * this.tilemap.tileRenderSize;\n    this.container.y = y * this.tilemap.tileRenderSize;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.leftQwerty = keyboard('a');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n    this.playerAnimation.start();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravityChanges.bind(this));\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.leftQwerty.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n    Game.events.removeEventHandler('gameplay:gravity-switch', this.onGravityChanges.bind(this));\n    this.playerAnimation.stop();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    if (this.isLanded && Game.gameplayState.isGravityEnabled) {\n      if (\n        this.keysHandlers.right.isDown ||\n        (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown)\n      )\n        this.playerAnimation.setCurrentAnimation('run');\n      else\n        this.playerAnimation.setCurrentAnimation('idle');\n    } else {\n      this.playerAnimation.setCurrentAnimation('jump');\n    }\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x += 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x -= 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n    }\n  }\n\n  onGravityChanges(isOn) {\n    if (isOn)\n      this.playerAnimation.resume();\n    else\n      this.playerAnimation.pause();\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport * as Collision from \"root/Collision\";\nimport sawAnimImg from 'assets/tilesets/buzzsaw.png';\nimport Animation from \"root/Animation\";\n\nexport default class Mob extends Entity {\n  sprite;\n  reverse = false;\n  speed = 5;\n  _canHitPlayer = true;\n  _animation;\n\n  constructor(tilemap, x, y, speeeeed = 1.0) {\n    super(tilemap);\n    this._animation = new Animation(sawAnimImg, {x: 18, y: 18}, {\n      'anim': {\n        animated: true,\n        from: 0,\n        to: 2,\n        loop: true\n      }\n    }, 'anim', 50);\n    this.sprite = this._animation.sprite;\n    this.sprite.height = tilemap.tileRenderSize;\n    this.sprite.width = tilemap.tileRenderSize;\n    this.container.y = y * tilemap.tileRenderSize;\n    this.container.x = x * tilemap.tileRenderSize;\n    this.container.addChild(this.sprite);\n    this._animation.start();\n    this.speed = speeeeed;\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width - 1 : userPos.x + 1;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air DO NOTHING\n      return;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the saw is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1) * this.tilemap.tileRenderSize * 0.03, y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player) && this._canHitPlayer) {\n      Game.events.triggerEvent('gameplay:death');\n      this._canHitPlayer = false;\n    }\n    this.move();\n  }\n\n  unload() {\n    this._animation.stop();\n  }\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\nimport laserimg from 'assets/tilesets/laser.png';\nimport laserShooterImg from 'assets/tilesets/laser-shooter.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Laser {\n  container = new PIXI.Container();\n  sprite = [];\n  _canHitPlayer = true;\n  _active = true;\n  _intervalId;\n  _laserlength;\n  delay;\n\n  constructor(player, tilemap, {x, y, length, delay, direction}) {\n    if (direction === 'top') y++;\n    if (direction === 'left') x++;\n    x = x * tilemap.tileRenderSize;\n    y = y * tilemap.tileRenderSize;\n    const blockSize = tilemap.tileRenderSize;\n    const pixelSize = tilemap.tileRenderSize / 32;\n\n\n    const laserShooter = new PIXI.Sprite(Game.app.loader.resources[laserShooterImg].texture)\n\n    laserShooter.width = blockSize;\n    laserShooter.height = pixelSize * 7;\n    laserShooter.x = x;\n    laserShooter.y = y;\n    laserShooter.anchor.set(0.5, 1);\n\n    switch (direction) {\n      case 'left':\n        y += pixelSize * 2;\n      case 'right':\n        y += blockSize / 2 - pixelSize;\n        laserShooter.y += blockSize / 2;\n        break;\n      case 'top':\n      case 'bottom':\n        x += blockSize / 2 - pixelSize;\n        laserShooter.x += blockSize / 2;\n        break;\n    }\n\n    switch (direction) {\n      case 'left':\n        laserShooter.angle = -90;\n        break;\n      case 'right':\n        laserShooter.angle = 90;\n        break;\n      case 'bottom':\n        laserShooter.angle = 180;\n        break;\n    }\n\n\n    for (let i = 0; i <= length - 1; i++) {\n\n      this.sprite.push(new PIXI.Sprite(Game.app.loader.resources[laserimg].texture));\n      this.sprite[i].width = pixelSize * 2;\n      this.sprite[i].height = tilemap.tileRenderSize;\n      if (direction === \"top\") {\n        this.sprite[i].y = y - this.sprite[i].height * (i + 1);\n        this.sprite[i].x = x\n      } else if (direction === \"bottom\") {\n        this.sprite[i].y = y + this.sprite[i].height * i;\n        this.sprite[i].x = x\n      } else if (direction === \"left\") {\n        this.sprite[i].angle = -90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x - this.sprite[i].height * (i + 1);\n      } else {\n        this.sprite[i].angle = 90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x + this.sprite[i].height * (i + 1);\n      }\n\n      this._laserlength = this.sprite[i].height;\n      this.container.addChild(this.sprite[i]);\n    }\n\n    if (direction === \"top\" || direction === \"bottom\") {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[0].x,\n          this.sprite[(direction === \"bottom\") ? 0 : this.sprite.length - 1].y,\n          this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length\n        ),\n        player.container\n      );\n    } else {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[(direction === \"right\") ? 0 : this.sprite.length - 1].x - ((direction === \"right\") ? this.sprite[0].height : 0),\n          this.sprite[0].y + ((direction === \"right\") ? 0 : -1) * this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length,\n          this.sprite[0].width\n        ),\n        player.container\n      );\n    }\n\n    this.container.addChild(laserShooter);\n\n    this.delay = delay;\n    this._intervalId = this.startInterval();\n    this.laserHitReg.onCollide = this.onHit.bind(this);\n  }\n\n  onHit() {\n    if (this._canHitPlayer) {\n      this._canHitPlayer = false;\n      Game.events.triggerEvent('gameplay:death');\n    }\n  }\n\n  startInterval() {\n\n    return setInterval(() => {\n      if (this.delay !== -1)\n        this._active = !this._active;\n\n      let alpha = (this._active ? 1 : 0);\n      for (let i = 0; i < this.sprite.length; i++) {\n        this.sprite[i].alpha = alpha;\n      }\n\n    }, this.delay)\n  }\n\n  onSceneEnd() {\n    clearInterval(this._intervalId);\n  }\n\n  update() {\n    if (this._active)\n      this.laserHitReg.update()\n  }\n\n}\n","import Game from \"root/main\";\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Collectable{\n  container = new PIXI.Container();\n  count = {total: 0, pick: 0,}\n  sprite\n  _pick = false;\n  constructor(player, x, y, tileRenderSize) {\n    this.sprite =  new PIXI.Sprite(Game.app.loader.resources[tilecoin].texture);\n    this.sprite.width = tileRenderSize;\n    this.sprite.height = tileRenderSize;\n\n    this.container.x = x * tileRenderSize;\n    this.container.y = y * tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.takeCoin = new Trigger(\n      new PIXI.Rectangle(\n        this.container.x,\n        this.container.y,\n        this.sprite.width,\n        this.sprite.height\n      ),\n      player.container\n    );\n    this.takeCoin.onCollide = this.pickup.bind(this);\n  }\n\n  pickup(){\n    this._pick = true;\n    this.takeCoin.onCollide = undefined;\n    this.container.removeChild(this.sprite);\n    console.log(\"pickup\");\n  }\n\n  isPick(){return this._pick}\n\n  update(){\n    this.takeCoin.update()\n  }\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity (E):\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n    Game.gameplayState.paused = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n        Game.gameplayState.paused = false;\n        Game.events.triggerEvent('scene:restart');\n      }\n    }\n  }\n\n}\n","import UserInterface from \"root/ui/ui\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\n\nexport default class Navigation extends UserInterface {\n\n  MainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this.MainMenuButton.x = 20;\n    this.MainMenuButton.y = 20;\n    this.MainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.container.addChild(this.MainMenuButton);\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\nimport Navigation from \"root/ui/navigation\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen(),\n    new Navigation()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class StaticTilemap {\n  container = new PIXI.Container();\n  tilemap = [];\n  tileset;\n  spriteList = [];\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry.backTileMap} map\n   * @param {number} heightpx\n   * @param {string} resourcePath\n   */\n  constructor(map, heightpx, resourcePath) {\n    this.tileset = new Tileset(resourcePath, {x: 32, y: 32});\n    const lines = map.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    this.generateTilemapContent();\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  generateTilemapContent() {\n    for (let y = 0; y < this.height; y++) {\n      this.spriteList[y] = [];\n      for (let x = 0; x < this.width; x++) {\n        if (this.tilemap[y][x] !== -1) {\n          const tile = this.tileset.getSprite(this.tilemap[y][x]);\n          tile.x = this.tileRenderSize * x;\n          tile.y = this.tileRenderSize * y;\n          tile.width = this.tileRenderSize;\n          tile.height = this.tileRenderSize;\n          this.container.addChild(tile);\n          this.spriteList[y].push(tile);\n        } else {\n          this.spriteList[y].push(undefined);\n        }\n      }\n    }\n  }\n\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport Laser from \"root/Laser\";\nimport Collectable from \"root/Collectable\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\nimport StaticTilemap from \"root/StaticTilemap\";\nimport backTilesetImg from 'assets/tilesets/misc.png';\nimport Animation from \"root/Animation\";\nimport flagAnimImg from 'assets/tilesets/flag.png';\n\nexport default class GameScene extends Scene {\n\n  player;\n  tilemap;\n  backTileMap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n  lasers = [];\n  mobs = [];\n  collectables = [];\n  nextScene = '';\n  flagSprite;\n  flagAnimation;\n\n  /**\n   * @param {MapEntry} map\n   * @param {string} nextScene\n   */\n  constructor(map, nextScene = 'MainMenu') {\n    super();\n    this.nextScene = nextScene;\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.backTileMap = new StaticTilemap(map.backTileMap, Game.app.screen.height, backTilesetImg);\n    this.player = new Player(this.tilemap, map.dynamicObjectsMap.start.x, map.dynamicObjectsMap.start.y);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n      this.flagAnimation = new Animation(flagAnimImg, {x: 26, y: 62}, {\n        'idle': {\n          animated: false,\n          tileId: 0\n        },\n        'reached': {\n          animated: true,\n          from: 1,\n          to: 12,\n          loop: false\n        }\n      }, 'idle', 100);\n      this.flagSprite = this.flagAnimation.sprite;\n      this.flagSprite.height = this.tilemap.tileRenderSize * 2;\n      this.flagSprite.width = this.tilemap.tileRenderSize;\n      this.flagSprite.x = triggerPos.x + map.dynamicObjectsMap.endTrigger.width / 2 - this.flagSprite.width / 2;\n      this.flagSprite.y = triggerPos.y + map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize - this.flagSprite.height;\n      this.cameraHandledContainer.addChild(this.flagSprite);\n    }\n\n    window.endTrigger = this.endTrigger;\n    for (const laserData of map.dynamicObjectsMap.laserHitReg) {\n      const laser = new Laser(this.player, this.tilemap, laserData)\n      this.lasers.push(laser);\n      this.cameraHandledContainer.addChild(laser.container);\n    }\n    for (const ennemy of map.dynamicObjectsMap.ennemies) {\n      const mob = new Mob(this.tilemap, ennemy.x, ennemy.y, ennemy.speed);\n      this.mobs.push(mob);\n      this.cameraHandledContainer.addChild(mob.container);\n    }\n    this.cameraHandledContainer.addChild(this.backTileMap.container);\n    for (const collectableData of map.dynamicObjectsMap.collectables) {\n      const collectable = new Collectable(\n        this.player,\n        collectableData.x,\n        collectableData.y,\n        this.tilemap.tileRenderSize);\n      this.collectables.push(collectable);\n      this.cameraHandledContainer.addChild(collectable.container);\n    }\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.userInterface.update(delta);\n    if (Game.gameplayState.paused)\n      return;\n    this.player.update(delta);\n    this.camera.update();\n    this.updateLasers();\n    this.updateMobs(delta);\n    this.updateCollectable();\n    this.userInterface.update(delta);\n    this.endTrigger.update();\n  }\n\n  updateLasers() {\n    for (const laser of this.lasers) {\n      laser.update();\n    }\n  }\n\n  updateMobs(delta) {\n    for (const mob of this.mobs) {\n      mob.update(delta, this.player);\n    }\n  }\n\n  updateCollectable() {\n    for (const collectable of this.collectables) {\n      collectable.update();\n    }\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n    if (this.flagAnimation)\n      this.flagAnimation.start();\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n    this.lasers.forEach(item => item.onSceneEnd());\n    this.mobs.forEach(item => item.unload());\n    if (this.flagAnimation)\n      this.flagAnimation.stop();\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end');\n    for (const collectable of this.collectables) {\n      if (!collectable.isPick())\n        return;\n    }\n    this.flagAnimation.onAnimationFinished = (animName) => {\n      console.log('yayayay');\n      if (animName === 'reached') {\n        this.flagAnimation.stop();\n        setTimeout(() => {\n          Game.sceneManager.activeScene = this.nextScene;\n        }, 700);\n      }\n    }\n    this.flagAnimation.setCurrentAnimation('reached');\n  }\n}\n\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,18,1,1,2,-1,-1,-1,-1,-1,-1,7,8,2,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,4,5,5,6,8,8,8,8,18,19,19,19,19,19,19,20,8,9,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,6\\n8,4,5,5,5,16,-1,-1,14,5,5,5,6,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,7,8,4,15,15,15,5,5,5,5,5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,5,5,5,5,5,5,5,5,15,16,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,20\\n8,9,-1,-1,-1,-1,0,19,19,19,19,19,19,2,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8\\n8,18,1,1,1,1,20,8,8,8,8,8,8,18,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import level1Csv from 'assets/maps/level-1/level-1.csv';\nimport level1Json from 'assets/maps/level-1/level-1.json';\nimport level1BackCsv from 'assets/maps/level-1/level-1-back.csv';\n\nimport level0Csv from 'assets/maps/level-0/level-0.csv';\nimport level0Json from 'assets/maps/level-0/level-0.json';\nimport level0BackCsv from 'assets/maps/level-0/level-0-back.csv';\n\nimport level2Csv from 'assets/maps/level-2/level-2.csv';\nimport level2Json from 'assets/maps/level-2/level-2.json';\nimport level2BackCsv from 'assets/maps/level-2/level-2-back.csv';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  level0: {\n    tileMap: level0Csv,\n    backTileMap: level0BackCsv,\n    dynamicObjectsMap: level0Json\n  },\n  level1: {\n    tileMap: level1Csv,\n    backTileMap: level1BackCsv,\n    dynamicObjectsMap: level1Json\n  },\n  level2: {\n    tileMap: level2Csv,\n    backTileMap: level2BackCsv,\n    dynamicObjectsMap: level2Json\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {string} backTileMap\n * @property {{\n *   endTrigger: {\n *     x: number,\n *     y: number,\n *     width: number,\n *     height: number\n *   },\n *   start: {\n *     x: number,\n *     y: number\n *   },\n *   laserHitReg: Array<{\n *     x: number,\n *     y: number,\n *     length: number,\n *     delay: number,\n *     direction: 'top'|'left'|'right'|'bottom'\n *   }>,\n *   ennemies: Array<{\n *     x: number,\n *     y: number,\n *     speed: number\n *   }>,\n *   collectables: Array<{\n *     x: number,\n *     y: number\n *   }>\n * }} dynamicObjectsMap\n */\n","export default \"4,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,-1,-1,14,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,15,15,15,15,15,15,15,15,15,15,6,8\\n9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8\\n9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,4,15,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8\\n9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,4,16,-1,-1,-1,-1,-1,-1,-1,14,15,15,6,8,8,8,8,8,8,8,8,8,8,8,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8\\n9,-1,-1,0,1,1,1,20,8,8,8,4,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,20,8\\n9,-1,-1,7,8,8,8,8,8,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,6,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,19,19,20,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,7,4,15,15,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,6,8,8,8,8,9,-1,-1,-1,-1,0,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,9,-1,-1,-1,0,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,9,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,15,16,-1,-1,-1,14,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n18,1,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,18,1,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,1,20,8,8,8,8,18,1,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,1,19,19,1,19,19,1,1,1,19,19,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","export default \"-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,0,2,2,2,2,2,2,1,1,1,1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,0,2,2,2,2,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,24,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,10,11,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,27,-1,-1,-1,-1,8,10,11,-1,-1,-1,-1,-1,34,28,29,23,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n\";","export default \"-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,36,37,37,37,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,1,2,1,2,1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,13,-1,-1,-1,-1,-1,-1,-1,-1,17,33,-1,-1,-1,-1,-1,-1,-1,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n\";","export default \"8,8,4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,4,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,9,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,2,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,-1,7,8,4,15,15,15,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,15,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,18,1,1,1,2,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,4,15,15,15,15,15,15,6,8,8,8,8,8,8,8,8\\n8,8,4,15,15,15,16,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,0,1,1,20,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,16,-1,-1,-1,-1,-1,-1,14,15,15,15,15,15,15,15,6\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,9,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,18,2,-1,-1,-1,-1,-1,0,20,4,15,15,15,6,9,-1,-1,-1,-1,0,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,8,9,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,7,9,-1,-1,-1,-1,7,8,18,1,1,1,1,1,1,1,1,1,20,18,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,7,8,18,2,-1,-1,-1,0,20,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,20\\n8,8,18,1,1,2,-1,-1,-1,-1,-1,7,8,8,9,-1,-1,-1,7,8,9,-1,-1,-1,-1,7,9,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8\\n8,8,8,8,8,18,1,1,1,1,1,20,8,8,9,-1,-1,-1,7,8,9,-1,-1,-1,-1,14,16,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,20,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","export default \"-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,17,23,23,23,23,23,28,23,23,19,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,19,-1,-1,-1,-1,-1,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,12,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,18,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,7,-1,-1,-1\\n-1,-1,-1,24,-1,-1,0,1,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,7,-1,-1,-1\\n-1,-1,-1,6,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,24,7,-1,-1,-1\\n-1,-1,-1,6,-1,21,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,9,11,7,-1,-1,-1\\n-1,-1,-1,6,-1,5,-1,-1,-1,26,-1,-1,-1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,7,-1,-1,-1\\n-1,-1,-1,6,-1,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,1,1,1,1,1,-1,-1,15,-1,-1,0,1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\n\";","export default __webpack_public_path__ + \"images/ce9ad9322be2e6a2d659d391ad63dcce.png\";","export default __webpack_public_path__ + \"images/ede9caaf7e31907c893eb304262121b7.png\";","export default __webpack_public_path__ + \"images/292ea24d6b3465aa22255944c425e911.png\";","export default __webpack_public_path__ + \"images/180f3d5944db4f30c53830e5e93949d6.png\";","export default __webpack_public_path__ + \"images/8735110ff70fad2f5892a9277e5a428c.png\";","export default __webpack_public_path__ + \"images/62cc938cec323807175d45757ef5a4ca.png\";","export default __webpack_public_path__ + \"images/54f63343cef9c24ddf89da1fd59036f0.png\";","export default __webpack_public_path__ + \"images/6f5d9a25047816f8646ced72befab750.png\";","export default __webpack_public_path__ + \"images/514eaf0183932dff71c1246d473eb43d.png\";","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  static tilesets = {};\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = Tilemap.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Class dictionnary\n   * @type {Object.<string, function>}\n   */\n  _scenesClasses = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n    Game.events.addEventHandler('scene:restart', this.restartCurrentScene.bind(this));\n  }\n\n  /**\n   * @param {function} sceneClass\n   * @param {string} name\n   */\n  addScene(sceneClass, name) {\n    this._scenesClasses[name] = sceneClass;\n  }\n\n  restartCurrentScene() {\n    if (!this.activeScene)\n      return;\n    const oldActiveScene = this.activeScene;\n    this._activeScene = undefined;\n    // stop old instance\n    this._scenes[oldActiveScene].onSceneEnd();\n    this._parentContainer.removeChild(this._scenes[oldActiveScene].getContainer());\n    delete this._scenes[oldActiveScene];\n\n    // create new instance\n    this._scenes[oldActiveScene] = new this._scenesClasses[oldActiveScene]();\n\n    // Initialize and display new instance\n    this._parentContainer.addChild(this._scenes[oldActiveScene].getContainer());\n    this._scenes[oldActiveScene].onSceneStart();\n    this._activeScene = oldActiveScene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenesClasses[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._scenes[value] = new this._scenesClasses[value]();\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\nimport logoImg from 'assets/tilesets/logo.png';\n\nexport default class MainMenu extends Scene {\n\n  startButton;\n  levelsButton;\n  creditsButton;\n  howToPlay;\n  logoSprite;\n\n  constructor() {\n    super();\n    this.logoSprite = new PIXI.Sprite(Game.app.loader.resources[logoImg].texture);\n    this.logoSprite.width = this.logoSprite.width * 2;\n    this.logoSprite.height = this.logoSprite.height * 2;\n    this.logoSprite.x = Game.app.screen.width / 2 - this.logoSprite.width / 2;\n    this.logoSprite.y = Game.app.screen.height / 2 - 450;\n\n    this.startButton = new Button('Play');\n    this.startButton.x = Game.app.screen.width / 2 - this.startButton.width / 2;\n    this.startButton.y = Game.app.screen.height / 2 - 150;\n    this.startButton.onClick = this.startGame.bind(this);\n\n    this.levelsButton = new Button('Levels');\n    this.levelsButton.x = Game.app.screen.width / 2 - this.levelsButton.width / 2;\n    this.levelsButton.y = Game.app.screen.height / 2 - 50;\n    this.levelsButton.onClick = this.goToLevels.bind(this);\n\n\n    this.howToPlay = new Button('How to play ?');\n    this.howToPlay.x = Game.app.screen.width / 2 - this.howToPlay.width / 2;\n    this.howToPlay.y = Game.app.screen.height / 2 + 50;\n    this.howToPlay.onClick = this.goToHowToPlay.bind(this);\n\n    this.creditsButton = new Button('Credits');\n    this.creditsButton.x = Game.app.screen.width / 2 - this.creditsButton.width / 2;\n    this.creditsButton.y = Game.app.screen.height / 2 + 150;\n    this.creditsButton.onClick = this.goToCredits.bind(this);\n\n\n    this.sceneContainer.addChild(this.logoSprite);\n    this.sceneContainer.addChild(this.startButton);\n    this.sceneContainer.addChild(this.howToPlay);\n    this.sceneContainer.addChild(this.creditsButton);\n    this.sceneContainer.addChild(this.levelsButton);\n  }\n\n  startGame() {\n    Game.sceneManager.activeScene = 'level0';\n  }\n\n  goToHowToPlay() {\n    Game.sceneManager.activeScene = 'HowToPlay';\n  }\n\n  goToCredits() {\n    Game.sceneManager.activeScene = 'credits';\n  }\n\n  goToLevels() {\n    Game.sceneManager.activeScene = 'levels';\n  }\n\n}\n","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level1 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level1, 'level2');\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport keyboardLayout from 'assets/tilesets/keyboard-layout.png';\nimport Button from \"root/ui/Button\";\n\nexport default class HowToPlayScene extends Scene {\n\n  _textContent =\n  `Welcome to NO GRAVITY!\n  \n  The game is pretty simple. Get all the gold \n  coins and reach the end of the level.\n  \n  To help you achieve this, we've created a whole new tech called\n  the \"Neosensor Turbothermal Gravitotron\" or NTG for short.\n  It basically allows you to avoid the gravity field of the earth by\n  teleporting your entire environment to space.\n  \n  To activate it just press the big red button on your suit, AKA\n  the E button on your keyboard.\n  \n  To move around, just use your feet or you can\n  use the little buttons on your gloves, otherwise known as\n  the A and D buttons on your keyboard. (if you're using a\n  French keyboard, you can also use the Q button).\n  \n  Oh and don't forget that you can also use the SPACE button to get a\n  little boost in your legs and jump!\n  \n  See you explorer.`\n\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 25,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _textMetrics = PIXI.TextMetrics.measureText(this._textContent, this._textStyle);\n  _text = new PIXI.Text(this._textContent, this._textStyle);\n  _keyboardSprite = new PIXI.Sprite(Game.app.loader.resources[keyboardLayout].texture);\n  _mainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this._text.x = Game.app.renderer.width / 2 - this._textMetrics.width / 2;\n    this._text.y = Game.app.renderer.height / 2 - this._textMetrics.height / 2 - 100;\n    this._keyboardSprite.x = Game.app.renderer.width / 2 - this._keyboardSprite.width / 2;\n    this._keyboardSprite.y = Game.app.renderer.height / 2 + 200;\n    this.sceneContainer.addChild(this._text);\n    this.sceneContainer.addChild(this._keyboardSprite);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n  }\n\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport Button from \"root/ui/Button\";\n\nexport default class CreditScene extends Scene {\n  _textContent = `NO GRAVITY\n  \n  Code:\n  Marius \"Astroboy\" Van Nieuwenhuyse\n  Jason \"Vakeros\" Defer\n  \n  Art:\n  Jesse \"Jwoodif\" Jamison Menser\n  \n  Created using PIXI.js library\n  All assets created by Jwoodif`;\n\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 40,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _textMetrics = PIXI.TextMetrics.measureText(this._textContent, this._textStyle);\n  _text = new PIXI.Text(this._textContent, this._textStyle);\n  _mainMenuButton = new Button('Main Menu');\n\n  constructor() {\n    super();\n    this._text.x = Game.app.renderer.width / 2 - this._textMetrics.width / 2;\n    this._text.y = Game.app.renderer.height / 2 - this._textMetrics.height / 2;\n    this.sceneContainer.addChild(this._text);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Game from \"root/main\";\nimport Button from \"root/ui/Button\";\n\nexport default class LevelsScene extends Scene {\n  _title = new PIXI.Text('LEVELS', {\n    fontFamily: 'Londrina Solid',\n    fontSize: 40,\n    fill: '0xfff',\n    align: 'center'\n  });\n  _mainMenuButton = new Button('Main Menu');\n\n  _levels = [\n    {\n      name: 'Tutorial',\n      id: 'level0'\n    },\n    {\n      name: 'Level 1',\n      id: 'level1'\n    },\n    {\n      name: 'Level 2',\n      id: 'level2'\n    },\n  ];\n\n  constructor() {\n    super();\n    const titleMetrics = PIXI.TextMetrics.measureText(this._title.text, this._title.style);\n    this._title.x = Game.app.screen.width / 2 - titleMetrics.width / 2;\n    this._title.y = 100;\n    this.sceneContainer.addChild(this._title);\n    this._mainMenuButton.x = 20;\n    this._mainMenuButton.y = 20;\n    this._mainMenuButton.onClick = this.goToMainMenu.bind(this);\n    this.sceneContainer.addChild(this._mainMenuButton);\n    this.generateMenu();\n  }\n\n  generateMenu() {\n    const getRedirectFunction = (levelId) => () => {\n      Game.sceneManager.activeScene = levelId;\n    }\n    for (let i = 0; i < this._levels.length; i++) {\n      const levelData = this._levels[i];\n      const button = new Button(levelData.name);\n      button.x = Game.app.screen.width / 2 - button.width / 2;\n      button.y = 200 + i * 100;\n      button.onClick = getRedirectFunction(levelData.id);\n      this.sceneContainer.addChild(button);\n    }\n  }\n\n  goToMainMenu() {\n    Game.sceneManager.activeScene = 'MainMenu';\n  }\n}\n","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level0 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level0, 'level1');\n  }\n}\n","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level2 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level2);\n  }\n}\n","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","import moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport player from 'assets/player/Player1.png';\nimport playerOldFrame from 'assets/player/Player1-old.png';\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport laser from 'assets/tilesets/laser.png';\nimport keyboardLayout from 'assets/tilesets/keyboard-layout.png';\nimport laserShooter from 'assets/tilesets/laser-shooter.png';\nimport miscTileset from 'assets/tilesets/misc.png';\nimport logo from 'assets/tilesets/logo.png';\nimport sawAnimImg from 'assets/tilesets/buzzsaw.png';\nimport flagAnim from 'assets/tilesets/flag.png';\n\nconst assetsToLoad = [\n  moonTileset,\n  earthTileset,\n  player,\n  tilecoin,\n  playerOldFrame,\n  laser,\n  laserShooter,\n  keyboardLayout,\n  miscTileset,\n  logo,\n  sawAnimImg,\n  flagAnim\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}