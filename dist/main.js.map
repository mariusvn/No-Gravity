{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./assets/tilesets/prototype.png","webpack:///./assets/player/prototype.png","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Loader.js","webpack:///./src/Scenes/Scene.js","webpack:///./src/Tileset.js","webpack:///./src/Tilemap.js","webpack:///./src/Player/Entity.js","webpack:///./src/Player/Player.js","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/test/testmap.csv","webpack:///./src/Scenes/testScene/testScene.js","webpack:///./src/Scenes/GameScene.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","height","innerHeight","width","innerWidth","document","body","appendChild","view","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","console","info","Loader","loader","ticker","add","delta","update","addScene","testScene","activeScene","getScene","isGravityEnabled","gravityForce","parentContainer","this","_parentContainer","scene","_scenes","TypeError","_activeScene","undefined","removeChild","getContainer","assetsToLoad","prototypeTileset","prototypePlayer","pixiLoader","cb","item","load","Scene","sceneContainer","Container","Tileset","image","tileSize","texture","resources","generateTileSpriteArray","dimensions","Math","floor","x","y","rectangle","Rectangle","frame","tileTextures","clone","index","Sprite","Tilemap","map","heightpx","lines","tileMap","split","cells","Number","tilemap","tileRenderSize","round","dumpTilemap","generateTilemapContent","group","table","groupEnd","colliderBox","spriteList","boundingBox","getBounds","tile","tileset","getSprite","container","Entity","gameplayState","_velocity","pos","getPosition","isColliding","setPosition","Player","playerSprite","MapRegistry","test","dynamicObjectsMap","screen","player"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([15,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\r\nimport SceneManager from \"./Scenes/SceneManager\";\r\nimport testScene from \"./Scenes/testScene/testScene\";\r\nimport Loader from \"./Loader\";\r\n\r\nglobal.PIXI = PIXI;\r\n\r\nexport default class Game {\r\n\r\n  static app;\r\n  static sceneManager;\r\n  static gameplayState = {\r\n    isGravityEnabled: true,\r\n    gravityForce: 1\r\n  }\r\n\r\n  constructor() {\r\n    Game.app = new PIXI.Application({antialias: true, height: window.innerHeight, width: window.innerWidth});\r\n    document.body.appendChild(Game.app.view);\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n    const mainContainer = new PIXI.Container();\r\n    Game.sceneManager = new SceneManager(mainContainer);\r\n    Game.app.stage.addChild(mainContainer);\r\n    console.info(\"Loading assets ...\");\r\n    Loader(Game.app.loader, () => {\r\n      console.info(\"Assets loaded !\");\r\n      Game.app.ticker.add(delta => this.update(delta));\r\n\r\n      Game.sceneManager.addScene(new testScene(), 'test');\r\n      Game.sceneManager.activeScene = 'test';\r\n    });\r\n\r\n  }\r\n\r\n  update(delta) {\r\n    if (Game.sceneManager.activeScene) {\r\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"images/22c5f11edadebb669e9464b10c20f3c5.png\";","export default __webpack_public_path__ + \"images/9a31122dfa8b31e13f63f3bd4cc1edbc.png\";","\r\nexport default class SceneManager {\r\n  /**\r\n   * Scene dictionnary\r\n   * @type {Object.<string, Scene>}\r\n   * @private\r\n   */\r\n  _scenes = {};\r\n  /**\r\n   * Current active scene name\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  _activeScene = '';\r\n\r\n  _parentContainer;\r\n\r\n  constructor(parentContainer) {\r\n    this._parentContainer = parentContainer;\r\n  }\r\n\r\n  /**\r\n   * @param {Scene} scene\r\n   * @param {string} name\r\n   */\r\n  addScene(scene, name) {\r\n    this._scenes[name] = scene;\r\n  }\r\n\r\n  /**\r\n   * @return {undefined|string}\r\n   */\r\n  get activeScene() {\r\n    return (this._activeScene === '') ? undefined : this._activeScene;\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  set activeScene(value) {\r\n    if (this._scenes[value]) {\r\n      if (this._activeScene) {\r\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\r\n      }\r\n      this._activeScene = value;\r\n      this._parentContainer.addChild(this._scenes[value].getContainer());\r\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @return {Scene}\r\n   */\r\n  getScene(value) {\r\n    if (this._scenes[value]) {\r\n      return this._scenes[value];\r\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\r\n  }\r\n\r\n}\r\n","import prototypeTileset from 'assets/tilesets/prototype.png';\r\nimport prototypePlayer from 'assets/player/prototype.png';\r\n\r\nconst assetsToLoad = [\r\n  prototypeTileset,\r\n  prototypePlayer\r\n]\r\n\r\nexport default function loader(pixiLoader, cb) {\r\n  let l = pixiLoader;\r\n  for (const item of assetsToLoad) {\r\n    l = l.add(item);\r\n  }\r\n  l.load(cb);\r\n}\r\n","\r\nexport default class Scene {\r\n\r\n  sceneContainer;\r\n\r\n  constructor() {\r\n    this.sceneContainer = new PIXI.Container();\r\n  }\r\n\r\n  update(delta) {}\r\n\r\n  getContainer() {\r\n    return this.sceneContainer;\r\n  }\r\n\r\n}\r\n","import Game from \"./main\";\r\n\r\nexport default class Tileset {\r\n\r\n  texture;\r\n  tileSize;\r\n  tileTextures = [];\r\n\r\n  /**\r\n   * @param {string} image\r\n   * @param {{x: number, y: number}} tileSize\r\n   */\r\n  constructor(image, tileSize) {\r\n    this.texture = Game.app.loader.resources[image].texture;\r\n    this.tileSize = tileSize;\r\n    this.generateTileSpriteArray();\r\n  }\r\n\r\n  generateTileSpriteArray() {\r\n    const dimensions = {\r\n      x: Math.floor(this.texture.width / this.tileSize.x),\r\n      y: Math.floor(this.texture.height / this.tileSize.y)\r\n    };\r\n\r\n    for(let y = 0; y < dimensions.y; y++) {\r\n      for (let x = 0; x < dimensions.x; x++) {\r\n        const rectangle = new PIXI.Rectangle(\r\n          this.tileSize.x * x,\r\n          this.tileSize.y * y,\r\n          this.tileSize.x,\r\n          this.tileSize.y\r\n        );\r\n\r\n        this.texture.frame = rectangle;\r\n        this.tileTextures.push(this.texture.clone());\r\n      }\r\n    }\r\n  }\r\n\r\n  getSprite(index) {\r\n    if (index > this.tileTextures.length) {\r\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\r\n    }\r\n      return new PIXI.Sprite(this.tileTextures[index]);\r\n  }\r\n}\r\n","import Tileset from \"root/Tileset\";\r\nimport prototypeTileset from 'assets/tilesets/prototype.png';\r\n\r\nexport default class Tilemap {\r\n\r\n  container = new PIXI.Container();\r\n  tileset = new Tileset(prototypeTileset, {x: 32, y: 32});\r\n  tilemap = [];\r\n  spriteList = [];\r\n  width = 0;\r\n  height = 0;\r\n  tileRenderSize = 0;\r\n\r\n  /**\r\n   * @param {MapEntry} map\r\n   * @param {number} heightpx\r\n   */\r\n  constructor(map, heightpx) {\r\n    const lines = map.tileMap.split('\\n');\r\n    for (let x = 0; x < lines.length; x++) {\r\n      const line = lines[x];\r\n      const cells = line.split(',').map((item) => {\r\n        return Number(item);\r\n      });\r\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\r\n        continue;\r\n      this.tilemap.push(cells);\r\n    }\r\n    this.width = this.tilemap[0].length;\r\n    this.height = this.tilemap.length - 1;\r\n    this.tileRenderSize = Math.round(heightpx / this.height);\r\n    this.dumpTilemap();\r\n    this.generateTilemapContent();\r\n  }\r\n\r\n  dumpTilemap() {\r\n    console.group('Tilemap');\r\n    console.info('Map:')\r\n    console.table(this.tilemap);\r\n    console.info('width:', this.width, 'height:', this.height);\r\n    console.groupEnd();\r\n  }\r\n\r\n  /**\r\n   * TODO OPTIMIZE PLZZZ\r\n   * @param {PIXI.Rectangle} colliderBox\r\n   */\r\n  isColliding(colliderBox) {\r\n    for (const sprite of this.spriteList) {\r\n      const boundingBox = sprite.getBounds();\r\n      if (\r\n        colliderBox.x + colliderBox.width > boundingBox.x &&\r\n        colliderBox.x < boundingBox.x + boundingBox.width &&\r\n        colliderBox.y + colliderBox.height > boundingBox.y &&\r\n        colliderBox.y < boundingBox.y + boundingBox.height\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  generateTilemapContent() {\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        if (this.tilemap[y][x] !== -1) {\r\n          const tile = this.tileset.getSprite(0);\r\n          tile.x = this.tileRenderSize * x;\r\n          tile.y = this.tileRenderSize * y;\r\n          tile.width = this.tileRenderSize;\r\n          tile.height = this.tileRenderSize;\r\n          this.container.addChild(tile);\r\n          this.spriteList.push(tile);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import Game from \"root/main\";\r\n\r\nexport default class Entity {\r\n\r\n  container = new PIXI.Container();\r\n  _velocity = {x: 0, y: 0};\r\n  tilemap;\r\n\r\n  constructor(tilemap) {\r\n    this.tilemap = tilemap;\r\n  }\r\n\r\n  update(delta) {\r\n    if (Game.gameplayState.isGravityEnabled) {\r\n      this._velocity.y += Game.gameplayState.gravityForce * 0.1\r\n    }\r\n    const pos = this.getPosition();\r\n\r\n    if (!this.tilemap.isColliding(this.container.getBounds())) {\r\n      pos.y += this._velocity.y * delta;\r\n      pos.x += this._velocity.x * delta;\r\n    } else {\r\n      this._velocity.y = 0;\r\n      this._velocity.x = 0;\r\n    }\r\n    this.setPosition(pos);\r\n  }\r\n\r\n  setPosition({x, y}) {\r\n    this.container.x = x;\r\n    this.container.y = y;\r\n  }\r\n\r\n  getPosition() {\r\n    return {\r\n      x: this.container.x,\r\n      y: this.container.y\r\n    }\r\n  }\r\n\r\n  setVelocity({x, y}) {\r\n    this._velocity.x = x;\r\n    this._velocity.y = y;\r\n  }\r\n\r\n  getVelocity() {\r\n    return this._velocity;\r\n  }\r\n\r\n}\r\n","import Entity from \"root/Player/Entity\";\r\nimport prototypePlayer from 'assets/player/prototype.png';\r\nimport Game from \"root/main\";\r\n\r\nexport default class Player extends Entity {\r\n\r\n  playerSprite;\r\n\r\n  constructor(tilemap) {\r\n    super(tilemap);\r\n    this.playerSprite = new PIXI.Sprite(Game.app.loader.resources[prototypePlayer].texture);\r\n    this.container.y = 100;\r\n    this.container.addChild(this.playerSprite);\r\n  }\r\n\r\n}\r\n","import testmapCsv from 'assets/maps/test/testmap.csv';\r\n\r\n/**\r\n * @type {Object.<string, MapEntry>}\r\n */\r\nconst MapRegistry = {\r\n  test: {\r\n    tileMap: testmapCsv,\r\n    dynamicObjectsMap: {}\r\n  }\r\n}\r\n\r\nexport default MapRegistry;\r\n\r\n/**\r\n * @typedef MapEntry\r\n * @property {string} tileMap,\r\n * @property {any} dynamicObjectsMap\r\n */\r\n","export default \"-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,2,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,96,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,75,75,75,75,75,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\\r\\n\";","import GameScene from \"../GameScene\";\r\nimport MapRegistry from \"../../MapRegistry\";\r\n\r\nexport default class testScene extends GameScene {\r\n\r\n  constructor() {\r\n    super(MapRegistry.test);\r\n  }\r\n\r\n\r\n  update(delta) {\r\n    super.update(delta);\r\n  }\r\n\r\n}\r\n","import Scene from \"./Scene\";\r\nimport Tilemap from \"root/Tilemap\";\r\nimport Game from \"root/main\";\r\nimport Player from \"root/Player/Player\";\r\n\r\nexport default class GameScene extends Scene {\r\n\r\n  player;\r\n  tilemap;\r\n\r\n  /**\r\n   * @param {MapEntry} map\r\n   */\r\n  constructor(map) {\r\n    super();\r\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\r\n    this.player = new Player(this.tilemap);\r\n    this.sceneContainer.addChild(this.tilemap.container);\r\n    this.sceneContainer.addChild(this.player.container);\r\n  }\r\n\r\n  update(delta) {\r\n    super.update(delta);\r\n    this.player.update(delta);\r\n  }\r\n}\r\n\r\n","import Game from './main';\r\nimport './index.css';\r\n\r\n(function index() {\r\n  new Game();\r\n})();\r\n\r\n"],"sourceRoot":""}