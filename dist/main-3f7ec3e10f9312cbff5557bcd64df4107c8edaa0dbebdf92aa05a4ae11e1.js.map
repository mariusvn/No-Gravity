{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/Collision.js","webpack:///./assets/tilesets/moon.png","webpack:///./assets/tilesets/earth.png","webpack:///./assets/player/Player1.png","webpack:///./assets/player/Player1-old.png","webpack:///./assets/tilesets/goldCoin1.png","webpack:///./assets/tilesets/laser.png","webpack:///./assets/tilesets/laser-shooter.png","webpack:///./src/Scenes/Scene.js","webpack:///./src/Tileset.js","webpack:///./src/Tilemap.js","webpack:///./src/Scenes/SceneManager.js","webpack:///./src/Event.js","webpack:///./src/Player/Entity.js","webpack:///./src/Keyboard.js","webpack:///./src/Animation.js","webpack:///./src/Player/Player.js","webpack:///./src/Player/Mob.js","webpack:///./src/Camera.js","webpack:///./src/Trigger.js","webpack:///./src/Laser.js","webpack:///./src/Collectable.js","webpack:///./src/ui/ui.js","webpack:///./src/ui/gravityIndicator.js","webpack:///./src/ui/deathScreen.js","webpack:///./src/ui/UserInterfaceHandler.js","webpack:///./src/Scenes/GameScene.js","webpack:///./src/MapRegistry.js","webpack:///./assets/maps/level-1/level-1.csv","webpack:///./src/Scenes/level1/level1.js","webpack:///./assets/tilesets/interface32x.png","webpack:///./src/Loader.js","webpack:///./src/ui/Button.js","webpack:///./src/Scenes/MainMenu/mainMenu.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","PIXI","Game","app","antialias","autoDensity","height","innerHeight","width","innerWidth","backgroundColor","document","body","appendChild","view","renderer","SCALE_MODE","NEAREST","mainContainer","sceneManager","SceneManager","stage","addChild","Loader","loader","Tilemap","tilesets","earth","Tileset","earthTileset","x","y","moon","moonTileset","ticker","add","delta","update","addScene","MainMenu","Level1","activeScene","game","getScene","Event","isGravityEnabled","gravityForce","paused","hitTestRectangle","r1","r2","combinedHalfWidths","combinedHalfHeights","vx","vy","centerX","centerY","halfWidth","halfHeight","Math","abs","Scene","this","sceneContainer","Container","image","tileSize","texture","resources","generateTileSpriteArray","dimensions","floor","rectangle","Rectangle","frame","tileTextures","clone","index","TypeError","Sprite","map","heightpx","TilesetType","EARTH","lines","tileMap","split","cells","item","Number","tilemap","tileRenderSize","round","generateTilemapContent","events","addEventHandler","switchTileset","console","group","info","table","groupEnd","colliderBox","colliderTilePos","getTileCoord","sprite","spriteList","currentTileset","boundingBox","Collision","isOn","container","removeChildren","MOON","containers","keys","tilesetType","tile","getSprite","undefined","parentContainer","_parentContainer","restartCurrentScene","sceneClass","_scenes","_scenesClasses","oldActiveScene","_activeScene","onSceneEnd","removeChild","getContainer","onSceneStart","eventName","handler","_events","Array","isArray","args","callback","idx","indexOf","Entity","gameplayState","_velocity","collider","landed","pos","getPosition","vel","getVelocity","containerWidth","containerHeight","newPosRect","isColliding","setPosition","setVelocity","onLanded","isLanded","keyboard","isDown","isUp","press","release","downHandler","event","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","Animation","texPath","frameSize","animationData","defaultAnim","delay","_animTexture","_frameSize","_currentAnim","_animData","_delay","anim","_frameRect","_setCurrentAnimFrame","_intervalId","setInterval","current","animated","_currentAnimFrame","from","to","loop","tileId","clearInterval","animName","start","Player","top","left","leftQwerty","right","bottom","playerAnimation","player","playerSprite","resizeRatio","playerSize","scale","set","anchor","keysHandlers","jump","startSneack","stopSneack","unload","remainingJumps","isSneaked","setCurrentAnimation","maxSpeed","Mob","playerPosition","mobPosition","playerBox","mobBox","userPos","frontPositionX","reverse","footPositionY","tilePos","getTile","speed","isTouching","_canHitPlayer","triggerEvent","move","Camera","followedContainer","sceneContainerWidth","followedContainerX","targetPos","screenSize","Trigger","position","targetCollider","bounds","onCollide","isTouches","_lastIsTouches","Laser","direction","blockSize","pixelSize","laserShooter","laserShooterImg","angle","laserimg","_laserlength","laserHitReg","startInterval","onHit","_active","alpha","Collectable","total","pick","tilecoin","takeCoin","pickup","_pick","log","UserInterface","GravityIndicator","Graphics","Text","fontFamily","fill","fontSize","background","beginFill","drawPolygon","Point","endFill","gravityText","gravityValueText","onGravitySwitches","text","style","DeathScreen","TextStyle","availableTexts","textStyle","textDims","TextMetrics","measureText","startAnim","random","isAnimating","UserInterfaceHandler","uis","ui","GameScene","gravitySwitch","screen","dynamicObjectsMap","endTrigger","triggerPos","getPixelsFromTileCoord","onPlayerReachEnd","laserData","laser","lasers","cameraHandledContainer","ennemies","ennemy","mob","mobs","collectables","collectableData","collectable","userInterface","camera","assignToContainer","updateLasers","updateMobs","updateCollectable","startKeyboardListening","switchGravity","stopKeyboardListening","forEach","MapRegistry","level1","assetsToLoad","tilesetimg","playerOldFrame","pixiLoader","cb","load","Button","_textStyle","_container","_background","_text","interactive","on","_onHover","_onHoverEnd","_onClick","_textMectric","_padding","getRandomInt","padding","offsets","clear","onClick","val","_drawBackground","PIXIimport","startButton","startGame","howToPlay","creditsButton","WebFont","google","families","active"],"mappings":"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","file":"main-07c8edaa0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([27,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from 'pixi.js';\nimport SceneManager from \"./Scenes/SceneManager\";\nimport Loader from \"./Loader\";\nimport MainMenu from \"./Scenes/MainMenu/mainMenu\";\nimport Event from \"root/Event\";\nimport Tileset from \"root/Tileset\";\nimport earthTileset from \"assets/tilesets/earth.png\";\nimport moonTileset from \"assets/tilesets/moon.png\";\nimport Tilemap from \"root/Tilemap\";\nimport Level1 from \"root/Scenes/level1/level1\";\n\n\nglobal.PIXI = PIXI;\n\nexport default class Game {\n\n  static app;\n  static sceneManager;\n  static events = new Event();\n  static gameplayState = {\n    isGravityEnabled: true,\n    gravityForce: 2,\n    paused: false,\n  }\n\n  constructor() {\n    Game.app = new PIXI.Application({antialias: true, autoDensity: true, height: window.innerHeight, width: window.innerWidth, backgroundColor: 0x45473E});\n    document.body.appendChild(Game.app.view);\n    if (Game.app.renderer.height > 500)\n      PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n\n    const mainContainer = new PIXI.Container();\n    Game.sceneManager = new SceneManager(mainContainer);\n    Game.app.stage.addChild(mainContainer);\n    Loader(Game.app.loader, () => {\n      Tilemap.tilesets = {\n        earth: new Tileset(earthTileset, {x: 32, y: 32}),\n        moon: new Tileset(moonTileset, {x: 32, y: 32})\n      };\n      Game.app.ticker.add(delta => this.update(delta));\n      Game.sceneManager.addScene(MainMenu, 'MainMenu');\n      Game.sceneManager.addScene(Level1, 'level1');\n      Game.sceneManager.activeScene = 'MainMenu';\n    });\n    window.game = Game;\n  }\n\n  update(delta) {\n    if (Game.sceneManager.activeScene) {\n      Game.sceneManager.getScene(Game.sceneManager.activeScene).update(delta);\n    }\n  }\n}\n","\n\nexport function hitTestRectangle(r1, r2) {\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n  hit = false;\n\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  vx = r1.centerX - r2.centerX;\n  vy = r1.centerY - r2.centerY;\n\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  if (Math.abs(vx) < combinedHalfWidths) {\n    hit = Math.abs(vy) < combinedHalfHeights;\n  } else {\n    hit = false;\n  }\n  return hit;\n}\n","export default __webpack_public_path__ + \"images/c5873e0e23386f347da578a498540ce6.png\";","export default __webpack_public_path__ + \"images/ee0762d9f99e6ad23ac956ae5699c0c9.png\";","export default __webpack_public_path__ + \"images/ce9ad9322be2e6a2d659d391ad63dcce.png\";","export default __webpack_public_path__ + \"images/1c881fca628b4795734effdba87c9d87.png\";","export default __webpack_public_path__ + \"images/ede9caaf7e31907c893eb304262121b7.png\";","export default __webpack_public_path__ + \"images/292ea24d6b3465aa22255944c425e911.png\";","export default __webpack_public_path__ + \"images/8735110ff70fad2f5892a9277e5a428c.png\";","\nexport default class Scene {\n\n  sceneContainer;\n\n  constructor() {\n    this.sceneContainer = new PIXI.Container();\n  }\n\n  update(delta) {}\n\n  getContainer() {\n    return this.sceneContainer;\n  }\n\n  onSceneStart() {}\n\n  onSceneEnd() {}\n\n}\n","import Game from \"./main\";\n\nexport default class Tileset {\n\n  texture;\n  tileSize;\n  tileTextures = [];\n\n  /**\n   * @param {string} image\n   * @param {{x: number, y: number}} tileSize\n   */\n  constructor(image, tileSize) {\n    this.texture = Game.app.loader.resources[image].texture;\n    this.tileSize = tileSize;\n    this.generateTileSpriteArray();\n  }\n\n  generateTileSpriteArray() {\n    const dimensions = {\n      x: Math.floor(this.texture.width / this.tileSize.x),\n      y: Math.floor(this.texture.height / this.tileSize.y)\n    };\n\n    for(let y = 0; y < dimensions.y; y++) {\n      for (let x = 0; x < dimensions.x; x++) {\n        const rectangle = new PIXI.Rectangle(\n          this.tileSize.x * x,\n          this.tileSize.y * y,\n          this.tileSize.x,\n          this.tileSize.y\n        );\n\n        this.texture.frame = rectangle;\n        this.tileTextures.push(this.texture.clone());\n      }\n    }\n  }\n\n  getSprite(index) {\n    if (index > this.tileTextures.length) {\n      debugger;\n      throw new TypeError(`Cannot find ${index}th element in the tileset, maximum: ${this.tileTextures.length}`);\n    }\n      return new PIXI.Sprite(this.tileTextures[index]);\n  }\n}\n","import Tileset from \"root/Tileset\";\nimport moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport * as Collision from \"root/Collision\";\nimport Game from \"root/main\";\n\nexport default class Tilemap {\n\n  static TilesetType = {\n    EARTH: 'earth',\n    MOON: 'moon'\n  };\n\n  container = new PIXI.Container();\n  containers = {\n    earth: new PIXI.Container(),\n    moon: new PIXI.Container()\n  };\n  static tilesets = {};\n  currentTileset = Tilemap.TilesetType.EARTH;\n  tilemap = [];\n  spriteList = {\n    earth: [],\n    moon: []\n  };\n  width = 0;\n  height = 0;\n  tileRenderSize = 0;\n\n  /**\n   * @param {MapEntry} map\n   * @param {number} heightpx\n   */\n  constructor(map, heightpx) {\n    const lines = map.tileMap.split('\\n');\n    for (let x = 0; x < lines.length; x++) {\n      const line = lines[x];\n      const cells = line.split(',').map((item) => {\n        return Number(item);\n      });\n      if (cells.length === 0 || (cells.length === 1 && cells[0] === 0))\n        continue;\n      this.tilemap.push(cells);\n    }\n    this.width = this.tilemap[0].length;\n    this.height = this.tilemap.length;\n    this.tileRenderSize = Math.round(heightpx / this.height);\n    //this.dumpTilemap();\n    this.generateTilemapContent();\n    Game.events.addEventHandler('gameplay:gravity-switch', this.switchTileset.bind(this));\n  }\n\n  dumpTilemap() {\n    console.group('Tilemap');\n    console.info('Map:')\n    console.table(this.tilemap);\n    console.info('width:', this.width, 'height:', this.height);\n    console.groupEnd();\n  }\n\n  /**\n   * @param {PIXI.Rectangle} colliderBox\n   * @return {PIXI.Rectangle | undefined}\n   */\n  isColliding(colliderBox) {\n    const colliderTilePos = this.getTileCoord(colliderBox);\n    for (let y = colliderTilePos.y - 4; y < colliderTilePos.y + 5; y++) {\n      for (let x = colliderTilePos.x - 3; x < colliderTilePos.x + 5; x++) {\n        if (x < 0 || y < 0 || x > this.width - 1 || y > this.height - 1)\n          continue;\n        const sprite = this.spriteList[this.currentTileset][y][x];\n        if (sprite) {\n          if (sprite.x > colliderBox.x + 200 || sprite.x < colliderBox.x - 200)\n            continue;\n          if (sprite.y > colliderBox.y + 200 || sprite.y < colliderBox.y - 200)\n            continue;\n          const boundingBox = new PIXI.Rectangle(sprite.x, sprite.y, sprite.width, sprite.height);\n          if (Collision.hitTestRectangle(colliderBox, boundingBox)) {\n            return boundingBox;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert a pixel position to a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getTileCoord({x, y}) {\n    return {\n      x: Math.floor(x / this.tileRenderSize),\n      y: Math.floor(y / this.tileRenderSize)\n    };\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {{x: number, y: number}}\n   */\n  getPixelsFromTileCoord({x, y}) {\n    return {\n      x: x * this.tileRenderSize,\n      y: y * this.tileRenderSize\n    }\n  }\n\n  /**\n   * Retrieve a tile ID from a tile position\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  getTile({x, y}) {\n    if(x > this.width - 1 || x < 0 || y > this.height - 1 || y < 0){\n      return undefined;\n    }\n    return this.tilemap[y][x];\n  }\n\n  switchTileset(isOn) {\n    this.container.removeChildren();\n    if (isOn)\n      this.currentTileset = Tilemap.TilesetType.EARTH;\n    else\n      this.currentTileset = Tilemap.TilesetType.MOON;\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n  generateTilemapContent() {\n    for (let tilesetType of Object.keys(Tilemap.TilesetType)) {\n      tilesetType = Tilemap.TilesetType[tilesetType];\n      for (let y = 0; y < this.height; y++) {\n        this.spriteList[tilesetType][y] = [];\n        for (let x = 0; x < this.width; x++) {\n          if (this.tilemap[y][x] !== -1) {\n            const tile = Tilemap.tilesets[tilesetType].getSprite(this.tilemap[y][x]);\n            tile.x = this.tileRenderSize * x;\n            tile.y = this.tileRenderSize * y;\n            tile.width = this.tileRenderSize;\n            tile.height = this.tileRenderSize;\n            this.containers[tilesetType].addChild(tile);\n            this.spriteList[tilesetType][y].push(tile);\n          } else {\n            this.spriteList[tilesetType][y].push(undefined);\n          }\n        }\n      }\n    }\n    this.container.addChild(this.containers[this.currentTileset]);\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class SceneManager {\n  /**\n   * Scene dictionnary\n   * @type {Object.<string, Scene>}\n   * @private\n   */\n  _scenes = {};\n  /**\n   * Class dictionnary\n   * @type {Object.<string, function>}\n   */\n  _scenesClasses = {};\n  /**\n   * Current active scene name\n   * @type {string}\n   * @private\n   */\n  _activeScene = '';\n\n  _parentContainer;\n\n  constructor(parentContainer) {\n    this._parentContainer = parentContainer;\n    Game.events.addEventHandler('scene:restart', this.restartCurrentScene.bind(this));\n  }\n\n  /**\n   * @param {function} sceneClass\n   * @param {string} name\n   */\n  addScene(sceneClass, name) {\n    this._scenes[name] = new sceneClass();\n    this._scenesClasses[name] = sceneClass;\n  }\n\n  restartCurrentScene() {\n    if (!this.activeScene)\n      return;\n    const oldActiveScene = this.activeScene;\n    this._activeScene = undefined;\n    // unload old instance\n    this._scenes[oldActiveScene].onSceneEnd();\n    this._parentContainer.removeChild(this._scenes[oldActiveScene].getContainer());\n    delete this._scenes[oldActiveScene];\n\n    // create new instance\n    this._scenes[oldActiveScene] = new this._scenesClasses[oldActiveScene]();\n\n    // Initialize and display new instance\n    this._parentContainer.addChild(this._scenes[oldActiveScene].getContainer());\n    this._scenes[oldActiveScene].onSceneStart();\n    this._activeScene = oldActiveScene;\n  }\n\n  /**\n   * @return {undefined|string}\n   */\n  get activeScene() {\n    return (this._activeScene === '') ? undefined : this._activeScene;\n  }\n\n  /**\n   * @param {string} value\n   */\n  set activeScene(value) {\n    if (this._scenes[value]) {\n      if (this._activeScene) {\n        this._scenes[this._activeScene].onSceneEnd();\n        this._parentContainer.removeChild(this._scenes[this._activeScene].getContainer());\n      }\n      this._activeScene = value;\n      this._parentContainer.addChild(this._scenes[value].getContainer());\n      this._scenes[value].onSceneStart();\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n  /**\n   * @param {string} value\n   * @return {Scene}\n   */\n  getScene(value) {\n    if (this._scenes[value]) {\n      return this._scenes[value];\n    } else throw new TypeError(`Scene ${value} doesnt exists`);\n  }\n\n}\n","\nexport default class Event {\n\n  _events = {};\n\n  addEventHandler(eventName, handler) {\n    if (!this._events[eventName])\n      this._events[eventName] = [];\n    this._events[eventName].push(handler);\n  }\n\n  triggerEvent(eventName, ...args) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      for (const callback of this._events[eventName]) {\n        callback(...args);\n      }\n    }\n  }\n\n  removeEventHandler(eventName, handler) {\n    if (this._events[eventName] && Array.isArray(this._events[eventName])) {\n      const idx = this._events[eventName].indexOf(handler);\n      if (idx !== -1) {\n        this._events[eventName].splice(idx, 1);\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\n\nexport default class Entity {\n\n  container = new PIXI.Container();\n  _velocity = {x: 0, y: 0};\n  tilemap;\n  newPosRect = new PIXI.Rectangle(0,0,0,0);\n  isLanded = true;\n\n  constructor(tilemap) {\n    this.tilemap = tilemap;\n  }\n\n  update(delta) {\n    if (Game.gameplayState.isGravityEnabled) {\n      this._velocity.y += Game.gameplayState.gravityForce * 0.005 * this.tilemap.tileRenderSize * delta;\n    }\n\n    let landed = false;\n    let pos = this.getPosition();\n    let vel = this.getVelocity();\n    let collider, old_pos;\n    const containerWidth = this.container.width;\n    const containerHeight = this.container.height;\n\n    old_pos = pos.x;\n    pos.x += vel.x * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerX > this.newPosRect.centerX) {\n        // Collision Right\n        pos.x = collider.x - this.container.width;\n      } else {\n        // Collision Left\n        pos.x = collider.x + collider.width;\n      }\n      if (Game.gameplayState.isGravityEnabled) {\n        vel.x = 0;\n      } else {\n        vel.x = -1 * (vel.x / 2);\n      }\n    }\n\n    old_pos = pos.y;\n    pos.y += vel.y * delta;\n    this.newPosRect.x = pos.x;\n    this.newPosRect.y = pos.y;\n    this.newPosRect.width = containerWidth;\n    this.newPosRect.height = containerHeight;\n    collider = this.tilemap.isColliding(this.newPosRect);\n    if (collider) {\n      if (collider.centerY > this.newPosRect.centerY) {\n        // Collision downside\n        pos.y = collider.y - this.container.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y > 0) {\n          vel.y = 0;\n        } else {\n          //bounce on ground if no gravity\n          vel.y = -1 * (vel.y / 2);\n        }\n        landed = true;\n\n        // Ground friction\n        if (vel.x !== 0 && Game.gameplayState.isGravityEnabled) {\n          if (vel.x > 0.15)\n            vel.x -= 0.6 * delta;\n          else if (vel.x < -0.15)\n            vel.x += 0.6 * delta;\n          else\n            vel.x = 0;\n        }\n      } else {\n        // Collision topside\n        pos.y = collider.y + collider.height;\n        if (Game.gameplayState.isGravityEnabled && vel.y < 0)\n          vel.y = 0;\n        else\n          vel.y = -1 * (vel.y / 2);\n      }\n    }\n\n    this.setPosition(pos);\n    this.setVelocity(vel);\n    if (landed)\n      this.onLanded();\n    this.isLanded = landed;\n  }\n\n  jump() {\n    const vel = this.getVelocity();\n    vel.y = -0.21 * this.tilemap.tileRenderSize;\n  }\n\n  setPosition({x, y}) {\n    this.container.x = x;\n    this.container.y = y;\n  }\n\n  getPosition() {\n    return {\n      x: this.container.x,\n      y: this.container.y\n    }\n  }\n\n  setVelocity({x, y}) {\n    this._velocity.x = x;\n    this._velocity.y = y;\n  }\n\n  getVelocity() {\n    return this._velocity;\n  }\n\n  onLanded() {}\n\n}\n","\nexport default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}\n","import Game from \"root/main\";\n\n/**\n * @typedef {Object.<string, {isAnimated: boolean, tileId?: number, from?: number, to?: number}>} AnimationData\n */\n\nexport default class Animation {\n  _animTexture;\n  _frameSize;\n  sprite;\n  /** @type AnimationData */\n  _animData;\n  _currentAnim;\n  _currentAnimFrame = 0;\n  _frameRect = new PIXI.Rectangle();\n  _intervalId = -1;\n  _delay;\n\n  /**\n   * @param {string} texPath\n   * @param {{x: number, y: number}} frameSize\n   * @param {AnimationData} animationData\n   * @param {string} defaultAnim\n   * @param {number} delay\n   */\n  constructor(texPath, frameSize, animationData, defaultAnim, delay) {\n    this._animTexture = Game.app.loader.resources[texPath].texture;\n    this._frameSize = frameSize;\n    this._currentAnim = defaultAnim;\n    this._animData = animationData;\n    this._delay = delay;\n    window.anim = this;\n\n    /* Setting up default frame */\n    this._frameRect.width = frameSize.x;\n    this._frameRect.height = frameSize.y;\n    this._frameRect.y = 0;\n    this._setCurrentAnimFrame();\n    this._animTexture.frame = this._frameRect;\n\n\n    this.sprite = new PIXI.Sprite(this._animTexture);\n  }\n\n  start() {\n    this._intervalId = setInterval(this._setCurrentAnimFrame.bind(this), this._delay);\n  }\n\n  _setCurrentAnimFrame() {\n    const current = this._animData[this._currentAnim];\n    if (!current)\n      return;\n    if (current.animated) {\n      if (!this._currentAnimFrame)\n        this._currentAnimFrame = current.from - 1;\n      if (this._currentAnimFrame >= current.to) {\n        if (current.loop) {\n          this._currentAnimFrame = current.from;\n          this._frameRect.x = current.from * this._frameRect.width;\n        }\n      } else {\n        this._currentAnimFrame++;\n        this._frameRect.x = this._currentAnimFrame * this._frameRect.width;\n      }\n    } else {\n      this._currentAnimFrame = current.tileId;\n      this._frameRect.x = current.tileId * this._frameRect.width;\n    }\n    this._animTexture.frame = this._frameRect;\n  }\n\n  unload() {\n    if (this._intervalId !== -1) {\n      clearInterval(this._intervalId);\n      this._intervalId = -1;\n    }\n  }\n\n  /**\n   * @param {string} animName\n   */\n  setCurrentAnimation(animName) {\n    if (animName !== this._currentAnim) {\n      this._currentAnim = animName;\n      this._currentAnimFrame = this._animData[this._currentAnim].start;\n      this._setCurrentAnimFrame();\n    }\n  }\n}\n","import Entity from \"root/Player/Entity\";\nimport player from 'assets/player/Player1.png';\nimport Game from \"root/main\";\nimport keyboard from \"root/Keyboard\";\nimport Animation from \"root/Animation\";\n\nexport default class Player extends Entity {\n\n  playerSize = 2;\n  playerAnimation;\n  playerSprite;\n  keysHandlers = {\n    top: null,\n    left: null,\n    leftQwerty: null,\n    right: null,\n    bottom: null,\n  }\n  isSneaked = false;\n  remainingJumps = 2;\n  maxSpeed = 8;\n  resizeRatio = 0;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.playerAnimation = new Animation(player, {x: 32, y: 56}, {\n      'idle': {\n        animated: false,\n        tileId: 0\n      },\n      'run': {\n        animated: true,\n        from: 1,\n        to: 7,\n        loop: true\n      },\n      'jump': {\n        animated: true,\n        from: 10,\n        to: 13,\n        loop: false\n      }\n    }, 'idle', 100);\n    this.playerSprite = this.playerAnimation.sprite;\n    this.resizeRatio = (tilemap.tileRenderSize * this.playerSize)/(this.playerSprite.height);\n    this.playerSprite.scale.set(this.resizeRatio);\n    this.playerSprite.anchor.set(0.5);\n    this.playerSprite.x = this.playerSprite.width / 2;\n    this.playerSprite.y = this.playerSprite.height / 2;\n    this.container.x = x * this.tilemap.tileRenderSize;\n    this.container.y = y * this.tilemap.tileRenderSize;\n    this.container.addChild(this.playerSprite);\n  }\n\n  startKeyboardListening() {\n    this.keysHandlers.top = keyboard(' ');\n    this.keysHandlers.bottom = keyboard('ctrl');\n    this.keysHandlers.left = keyboard('q');\n    this.keysHandlers.leftQwerty = keyboard('a');\n    this.keysHandlers.right = keyboard('d');\n    this.keysHandlers.top.press = this.jump.bind(this);\n    this.keysHandlers.bottom.press = this.startSneack.bind(this);\n    this.keysHandlers.bottom.release = this.stopSneack.bind(this);\n    this.playerAnimation.start();\n    /*const run = () => this.playerAnimation.setCurrentAnimation('run');\n    const idle = (keyCheck) => () => {\n      if (!keyCheck.isDown)\n        this.playerAnimation.setCurrentAnimation('idle');\n    }\n    this.keysHandlers.right.press = run;\n    this.keysHandlers.left.press = run;\n    this.keysHandlers.right.release = idle(this.keysHandlers.left);\n    this.keysHandlers.left.release = idle(this.keysHandlers.right);*/\n  }\n\n  stopKeyboardListening() {\n    this.keysHandlers.top.unsubscribe();\n    this.keysHandlers.bottom.unsubscribe();\n    this.keysHandlers.leftQwerty.unsubscribe();\n    this.keysHandlers.left.unsubscribe();\n    this.keysHandlers.right.unsubscribe();\n    this.playerAnimation.unload();\n  }\n\n  jump() {\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.remainingJumps <= 0)\n        return;\n      this.remainingJumps--;\n      super.jump();\n    }\n  }\n\n  startSneack() {\n    this.isSneaked = true;\n  }\n\n  stopSneack() {\n    this.isSneaked = false;\n  }\n\n  update(delta) {\n    //this.playerAnimation.setCurrentAnimation('jump');\n    if (this.isLanded) {\n      if (\n        this.keysHandlers.right.isDown ||\n        (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown)\n      )\n        this.playerAnimation.setCurrentAnimation('run');\n      else\n        this.playerAnimation.setCurrentAnimation('idle');\n    } else {\n      if (Game.gameplayState.isGravityEnabled)\n        this.playerAnimation.setCurrentAnimation('jump');\n    }\n    super.update(delta);\n    if (Game.gameplayState.isGravityEnabled) {\n      if (this.keysHandlers.right.isDown) {\n        this.playerSprite.scale.x = this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x < this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x += 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.keysHandlers.left.isDown || this.keysHandlers.leftQwerty.isDown) {\n        this.playerSprite.scale.x = -1 * this.resizeRatio;\n        const vel = this.getVelocity();\n        if (vel.x > -1 * this.maxSpeed * this.tilemap.tileRenderSize * 0.03)\n          vel.x -= 0.7 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n      if (this.isSneaked) {\n        const vel = this.getVelocity();\n        vel.y += 0.2 * delta * this.tilemap.tileRenderSize * 0.04;\n      }\n    }\n  }\n\n  onLanded() {\n    super.onLanded();\n    this.remainingJumps = 2;\n  }\n\n}\n","import Entity from \"root/Player/Entity\";\nimport Game from \"root/main\";\nimport player from 'assets/player/Player1-old.png';\nimport * as Collision from \"root/Collision\";\n\nexport default class Mob extends Entity {\n  sprite;\n  reverse = false;\n  speed = 5;\n  _canHitPlayer = true;\n\n  constructor(tilemap, x, y) {\n    super(tilemap);\n    this.sprite = new PIXI.Sprite(Game.app.loader.resources[player].texture);\n    const resizeRatio = (tilemap.tileRenderSize * 2) / (this.sprite.height);\n    this.sprite.scale.set(resizeRatio);\n    this.container.y = y * tilemap.tileRenderSize;\n    this.container.x = x * tilemap.tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.setVelocity({x: 8, y: this.getVelocity().y});\n  }\n\n  isTouching(player) {\n    let playerPosition = player.getPosition();\n    let mobPosition = this.getPosition();\n    let playerBox = new PIXI.Rectangle(playerPosition.x, playerPosition.y, player.playerSprite.width, player.playerSprite.height);\n    let mobBox = new PIXI.Rectangle(mobPosition.x, mobPosition.y, this.sprite.width, this.sprite.height);\n    return !!Collision.hitTestRectangle(playerBox, mobBox);\n\n  }\n\n  move() {\n    const userPos = this.getPosition();\n    const frontPositionX = (this.reverse) ? userPos.x + this.sprite.width : userPos.x;\n    const footPositionY = userPos.y + this.sprite.height;\n    const tilePos = this.tilemap.getTileCoord({x: frontPositionX, y: footPositionY - 1}); /* -1 to avoid between tile confusion */\n\n    if (this.tilemap.getTile({x: tilePos.x, y: tilePos.y + 1}) === -1) {\n      // If tile under the player is air DO NOTHING\n      return;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y + 1}) === -1) {\n      // If tile in front and under the player is air\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y}) !== -1) {\n      // If tile in front of knees is filled\n      this.reverse = !this.reverse;\n    } else if (this.tilemap.getTile({x: tilePos.x + ((this.reverse) ? -1 : 1), y: tilePos.y - 1}) !== -1) {\n      // If tile in front of head is filled\n      this.reverse = !this.reverse;\n    }\n\n    this.setVelocity({x: this.speed * ((this.reverse) ? -1 : 1) * this.tilemap.tileRenderSize * 0.03, y: this.getVelocity().y});\n  }\n\n  update(delta, player) {\n    super.update(delta);\n    if (this.isTouching(player) && this._canHitPlayer) {\n      Game.events.triggerEvent('gameplay:death');\n      this._canHitPlayer = false;\n    }\n    this.move();\n  }\n\n\n}\n","import Game from \"root/main\";\n\nexport default class Camera {\n\n  container = new PIXI.Container();\n  sceneContainer;\n  sceneContainerWidth;\n  followedContainer;\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n\n  /**\n   * @param {PIXI.Container} followedContainer\n   * @param {PIXI.Container} sceneContainer\n   */\n  constructor(followedContainer, sceneContainer) {\n    this.container.addChild(sceneContainer);\n    this.sceneContainer = sceneContainer;\n    this.sceneContainerWidth = this.sceneContainer.width;\n    this.followedContainer = followedContainer;\n  }\n\n  update() {\n    const followedContainerX = this.followedContainer.x;\n    let targetPos = Math.round((-1 * followedContainerX) + this.screenSize.x / 2);\n    if (targetPos > 0)\n      targetPos = (followedContainerX < 0) ? -1 * followedContainerX : 0;\n    if (targetPos < -1 * this.sceneContainerWidth + this.screenSize.x)\n      targetPos = -1 * this.sceneContainerWidth + this.screenSize.x;\n    this.sceneContainer.x = targetPos;\n  }\n\n}\n","import * as Collision from \"root/Collision\";\n\nexport default class Trigger {\n\n  bounds;\n  targetCollider;\n  onCollide = undefined;\n  _lastIsTouches = false;\n\n  /**\n   * @param {PIXI.Rectangle} position\n   * @param {PIXI.DisplayObject} targetCollider\n   */\n  constructor(position, targetCollider) {\n    this.bounds = position;\n    this.targetCollider = targetCollider;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isTouches() {\n    return Collision.hitTestRectangle(this.bounds, this.targetCollider);\n  }\n\n  update() {\n    if (typeof this.onCollide === 'function') {\n      if (this.isTouches) {\n        if (!this._lastIsTouches) {\n          this.onCollide();\n          this._lastIsTouches = true;\n        }\n      } else {\n        this._lastIsTouches = false;\n      }\n    }\n  }\n\n}\n","import Game from \"root/main\";\nimport laserimg from 'assets/tilesets/laser.png';\nimport laserShooterImg from 'assets/tilesets/laser-shooter.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Laser {\n  container = new PIXI.Container();\n  sprite = [];\n  _canHitPlayer = true;\n  _active = true;\n  _intervalId;\n  _laserlength;\n  delay;\n\n  constructor(player, tilemap, {x, y, length, delay, direction}) {\n    if (direction === 'top') y++;\n    if (direction === 'left') x++;\n    x = x * tilemap.tileRenderSize;\n    y = y * tilemap.tileRenderSize;\n    const blockSize = tilemap.tileRenderSize;\n    const pixelSize = tilemap.tileRenderSize / 32;\n\n\n    const laserShooter = new PIXI.Sprite(Game.app.loader.resources[laserShooterImg].texture)\n\n    laserShooter.width = blockSize;\n    laserShooter.height = pixelSize * 7;\n    laserShooter.x = x;\n    laserShooter.y = y;\n    laserShooter.anchor.set(0.5, 1);\n\n    switch (direction) {\n      case 'left':\n        y += pixelSize * 2;\n      case 'right':\n        y += blockSize / 2 - pixelSize;\n        laserShooter.y += blockSize / 2;\n        break;\n      case 'top':\n      case 'bottom':\n        x += blockSize / 2 - pixelSize;\n        laserShooter.x += blockSize / 2;\n        break;\n    }\n\n    switch (direction) {\n      case 'left':\n        laserShooter.angle = -90;\n        break;\n      case 'right':\n        laserShooter.angle = 90;\n        break;\n      case 'bottom':\n        laserShooter.angle = 180;\n        break;\n    }\n\n\n    for (let i = 0; i <= length - 1; i++) {\n\n      this.sprite.push(new PIXI.Sprite(Game.app.loader.resources[laserimg].texture));\n      this.sprite[i].width = pixelSize * 2;\n      this.sprite[i].height = tilemap.tileRenderSize;\n      if (direction === \"top\") {\n        this.sprite[i].y = y - this.sprite[i].height * (i + 1);\n        this.sprite[i].x = x\n      } else if (direction === \"bottom\") {\n        this.sprite[i].y = y + this.sprite[i].height * i;\n        this.sprite[i].x = x\n      } else if (direction === \"left\") {\n        this.sprite[i].angle = -90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x - this.sprite[i].height * (i + 1);\n      } else {\n        this.sprite[i].angle = 90;\n        this.sprite[i].y = y\n        this.sprite[i].x = x + this.sprite[i].height * (i + 1);\n      }\n\n      this._laserlength = this.sprite[i].height;\n      this.container.addChild(this.sprite[i]);\n    }\n\n    if (direction === \"top\" || direction === \"bottom\") {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[0].x,\n          this.sprite[(direction === \"bottom\") ? 0 : this.sprite.length - 1].y,\n          this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length\n        ),\n        player.container\n      );\n    } else {\n      this.laserHitReg = new Trigger(\n        new PIXI.Rectangle(\n          this.sprite[(direction === \"right\") ? 0 : this.sprite.length - 1].x - ((direction === \"right\") ? this.sprite[0].height : 0),\n          this.sprite[0].y + ((direction === \"right\") ? 0 : -1) * this.sprite[0].width,\n          this.sprite[0].height * this.sprite.length,\n          this.sprite[0].width\n        ),\n        player.container\n      );\n    }\n\n    this.container.addChild(laserShooter);\n\n    this.delay = delay;\n    this._intervalId = this.startInterval();\n    this.laserHitReg.onCollide = this.onHit.bind(this);\n  }\n\n  onHit() {\n    if (this._canHitPlayer) {\n      this._canHitPlayer = false;\n      Game.events.triggerEvent('gameplay:death');\n    }\n  }\n\n  startInterval() {\n\n    return setInterval(() => {\n      if (this.delay !== -1)\n        this._active = !this._active;\n\n      let alpha = (this._active ? 1 : 0);\n      for (let i = 0; i < this.sprite.length; i++) {\n        this.sprite[i].alpha = alpha;\n      }\n\n    }, this.delay)\n  }\n\n  onSceneEnd() {\n    clearInterval(this._intervalId);\n  }\n\n  update() {\n    if (this._active)\n      this.laserHitReg.update()\n  }\n\n}\n","import Game from \"root/main\";\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport Trigger from \"root/Trigger\";\n\nexport default class Collectable{\n  container = new PIXI.Container();\n  count = {total: 0, pick: 0,}\n  sprite\n  _pick = false;\n  constructor(player, x, y, tileRenderSize) {\n    this.sprite =  new PIXI.Sprite(Game.app.loader.resources[tilecoin].texture);\n    this.sprite.width = tileRenderSize;\n    this.sprite.height = tileRenderSize;\n\n    this.container.x = x * tileRenderSize;\n    this.container.y = y * tileRenderSize;\n    this.container.addChild(this.sprite);\n    this.takeCoin = new Trigger(\n      new PIXI.Rectangle(\n        this.container.x,\n        this.container.y,\n        this.sprite.width,\n        this.sprite.height\n      ),\n      player.container\n    );\n    this.takeCoin.onCollide = this.pickup.bind(this);\n  }\n\n  pickup(){\n    this._pick = true;\n    this.takeCoin.onCollide = undefined;\n    this.container.removeChild(this.sprite);\n    console.log(\"pickup\");\n  }\n\n  isPick(){return this._pick}\n\n  update(){\n    this.takeCoin.update()\n  }\n}\n","import Game from \"root/main\";\n\nexport default class UserInterface {\n  container = new PIXI.Container();\n  screenSize = {x: Game.app.renderer.width, y: Game.app.renderer.height};\n\n  constructor() {}\n\n  update(delta) {}\n}\n","import UserInterface from \"root/ui/ui\";\nimport Game from \"root/main\";\n\nexport default class GravityIndicator extends UserInterface {\n\n  background = new PIXI.Graphics();\n  gravityText = new PIXI.Text(\"Gravity:\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#fff'\n  });\n  gravityValueText = new PIXI.Text(\"ON\", {\n    fontFamily: 'Londrina Solid',\n    fill: '#0f0',\n    fontSize: 40\n  });\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(20,20),\n      new PIXI.Point(200,0),\n      new PIXI.Point(210, 120),\n      new PIXI.Point(24, 110),\n    ]);\n    this.background.endFill();\n    this.container.x = this.screenSize.x - 250;\n    this.container.y = this.screenSize.y - 150;\n    this.gravityText.x = 50;\n    this.gravityText.y = 25;\n    this.gravityValueText.x = 90;\n    this.gravityValueText.y = 60;\n    this.container.addChild(this.background);\n    this.container.addChild(this.gravityValueText);\n    this.container.addChild(this.gravityText);\n    Game.events.addEventHandler('gameplay:gravity-switch', this.onGravitySwitches.bind(this));\n  }\n\n  onGravitySwitches(isOn) {\n    if (isOn) {\n      this.gravityValueText.text = 'ON';\n      this.gravityValueText.style.fill = '#0f0';\n    } else {\n      this.gravityValueText.text = 'OFF';\n      this.gravityValueText.style.fill = '#f00';\n    }\n  }\n}\n","import UserInterface from \"root/ui/ui\";\nimport keyboard from \"root/Keyboard\";\nimport Game from \"root/main\";\n\nexport default class DeathScreen extends UserInterface {\n\n  background = new PIXI.Graphics();\n  availableTexts = [\n    \"You're dead buddy !\",\n    \"Wasted\",\n    \"Yet another restart !\",\n    \"This time, he said.\",\n    \"Not this time !\",\n    \"Why are you running ?\",\n    \"Waconda forever\",\n    \"Are ya winnin' son ?\"\n  ];\n  textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 90,\n    fill: '0xfff'\n  })\n  text = new PIXI.Text(this.availableTexts[0], this.textStyle);\n  textDims;\n  isAnimating = false;\n\n  constructor() {\n    super();\n    this.background.beginFill(0x3E83C1);\n    this.background.drawPolygon([\n      new PIXI.Point(0,0),\n      new PIXI.Point(900,100),\n      new PIXI.Point(950, 550),\n      new PIXI.Point(20, 600),\n    ]);\n    this.background.endFill();\n    this.background.x = -1 * this.background.width;\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.container.y = this.screenSize.y / 2 - this.background.height / 2;\n    this.container.addChild(this.background);\n    this.container.addChild(this.text);\n    Game.events.addEventHandler('gameplay:death', this.startAnim.bind(this));\n  }\n\n  startAnim() {\n    const random = Math.floor(Math.random() * this.availableTexts.length);\n    this.text.text = this.availableTexts[random];\n    this.textDims = PIXI.TextMetrics.measureText(this.text.text, this.textStyle);\n    this.text.x = -1 * this.textDims.width;\n    this.text.y = this.background.height / 2 - this.textDims.height / 2;\n    this.background.x = this.screenSize.x;\n    this.isAnimating = true;\n    Game.gameplayState.paused = true;\n  }\n\n  update(delta) {\n    super.update(delta);\n    if (this.isAnimating) {\n      if (this.text.x < this.screenSize.x) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.text.x += delta * 40;\n        } else {\n          this.text.x += delta * 2;\n        }\n      }\n      if (this.background.x + this.background.width > 0) {\n        if (this.text.x < this.background.x || this.text.x + this.textDims.width > this.background.x + this.background.width) {\n          this.background.x -= delta * 50;\n        } else {\n          this.background.x -= delta * 2;\n        }\n      }\n      if (!(this.text.x < this.screenSize.x) && !(this.background.x + this.background.width > 0)) {\n        this.isAnimating = false;\n        Game.gameplayState.paused = false;\n        Game.events.triggerEvent('scene:restart');\n      }\n    }\n  }\n\n}\n","import GravityIndicator from \"root/ui/gravityIndicator\";\nimport DeathScreen from \"root/ui/deathScreen\";\n\nexport default class UserInterfaceHandler {\n  container = new PIXI.Container();\n  /** @type Array<UserInterface> */\n  uis = [\n    new GravityIndicator(),\n    new DeathScreen()\n  ]\n\n  constructor() {\n    for (let ui of this.uis) {\n      this.container.addChild(ui.container);\n    }\n  }\n\n  update(delta) {\n    for (let ui of this.uis) {\n      ui.update(delta);\n    }\n  }\n\n  assignToContainer(container) {\n    container.addChild(this.container);\n  }\n}\n","import Scene from \"./Scene\";\nimport Tilemap from \"root/Tilemap\";\nimport Game from \"root/main\";\nimport Player from \"root/Player/Player\";\nimport Mob from \"root/Player/Mob\";\nimport keyboard from \"root/Keyboard\";\nimport Camera from \"root/Camera\";\nimport Trigger from \"root/Trigger\";\nimport Laser from \"root/Laser\";\nimport Collectable from \"root/Collectable\";\nimport UserInterfaceHandler from \"root/ui/UserInterfaceHandler\";\n\nexport default class GameScene extends Scene {\n\n  player;\n  tilemap;\n  keysHandlers = {\n    gravitySwitch: null\n  };\n  cameraHandledContainer = new PIXI.Container();\n  camera;\n  userInterface;\n  endTrigger;\n  lasers = [];\n  mobs = [];\n  collectables = [];\n\n  /**\n   * @param {MapEntry} map\n   */\n  constructor(map) {\n    super();\n    this.tilemap = new Tilemap(map, Game.app.screen.height);\n    this.player = new Player(this.tilemap, map.dynamicObjectsMap.start.x, map.dynamicObjectsMap.start.y);\n    window.player = this.player;\n    window.tilemap = this.tilemap;\n\n    if (map.dynamicObjectsMap && map.dynamicObjectsMap.endTrigger) {\n      const triggerPos = this.tilemap.getPixelsFromTileCoord(map.dynamicObjectsMap.endTrigger);\n      this.endTrigger = new Trigger(\n        new PIXI.Rectangle(\n          triggerPos.x,\n          triggerPos.y,\n          map.dynamicObjectsMap.endTrigger.width * this.tilemap.tileRenderSize,\n          map.dynamicObjectsMap.endTrigger.height * this.tilemap.tileRenderSize\n        ),\n        this.player.container\n      );\n      this.endTrigger.onCollide = this.onPlayerReachEnd.bind(this);\n    }\n\n    window.endTrigger = this.endTrigger;\n    for (const laserData of map.dynamicObjectsMap.laserHitReg) {\n      const laser = new Laser(this.player, this.tilemap, laserData)\n      this.lasers.push(laser);\n      this.cameraHandledContainer.addChild(laser.container);\n    }\n    for (const ennemy of map.dynamicObjectsMap.ennemies) {\n      const mob = new Mob(this.tilemap, ennemy.x, ennemy.y);\n      this.mobs.push(mob);\n      this.cameraHandledContainer.addChild(mob.container);\n    }\n    for (const collectableData of map.dynamicObjectsMap.collectables) {\n      const collectable = new Collectable(\n        this.player,\n        collectableData.x,\n        collectableData.y,\n        this.tilemap.tileRenderSize);\n      this.collectables.push(collectable);\n      this.cameraHandledContainer.addChild(collectable.container);\n    }\n    this.userInterface = new UserInterfaceHandler();\n    this.cameraHandledContainer.addChild(this.tilemap.container);\n    this.cameraHandledContainer.addChild(this.player.container);\n    this.camera = new Camera(this.player.container, this.cameraHandledContainer);\n    this.userInterface.assignToContainer(this.camera.container);\n    this.sceneContainer.addChild(this.camera.container);\n  }\n\n  update(delta) {\n    super.update(delta);\n    this.userInterface.update(delta);\n    if (Game.gameplayState.paused)\n      return;\n    this.player.update(delta);\n    this.camera.update();\n    this.updateLasers();\n    this.updateMobs(delta);\n    this.updateCollectable();\n    this.userInterface.update(delta);\n    this.endTrigger.update();\n  }\n\n  updateLasers() {\n    for (const laser of this.lasers) {\n      laser.update();\n    }\n  }\n\n  updateMobs(delta) {\n    for (const mob of this.mobs) {\n      mob.update(delta, this.player);\n    }\n  }\n\n  updateCollectable() {\n    for (const collectable of this.collectables) {\n      collectable.update();\n    }\n  }\n\n  onSceneStart() {\n    Game.gameplayState.isGravityEnabled = true;\n    super.onSceneStart();\n    this.player.startKeyboardListening();\n    this.keysHandlers.gravitySwitch = keyboard('e');\n    this.keysHandlers.gravitySwitch.press = this.switchGravity.bind(this);\n  }\n\n  onSceneEnd() {\n    super.onSceneEnd();\n    this.player.stopKeyboardListening();\n    this.keysHandlers.gravitySwitch.unsubscribe();\n    this.lasers.forEach(item => item.onSceneEnd());\n  }\n\n  switchGravity() {\n    console.log('Gravity switch');\n    Game.gameplayState.isGravityEnabled = !Game.gameplayState.isGravityEnabled;\n    Game.events.triggerEvent('gameplay:gravity-switch', Game.gameplayState.isGravityEnabled);\n  }\n\n  onPlayerReachEnd() {\n    console.info('Player reached end');\n    Game.events.triggerEvent('scene:restart');\n  }\n}\n\n","import level1Csv from 'assets/maps/level-1/level-1.csv';\nimport level1Json from 'assets/maps/level-1/level-1.json';\n\n/**\n * @type {Object.<string, MapEntry>}\n */\nconst MapRegistry = {\n  level1: {\n    tileMap: level1Csv,\n    dynamicObjectsMap: level1Json\n  }\n}\n\nexport default MapRegistry;\n\n/**\n * @typedef MapEntry\n * @property {string} tileMap,\n * @property {{\n *   endTrigger: {\n *     x: number,\n *     y: number,\n *     width: number,\n *     height: number\n *   },\n *   start: {\n *     x: number,\n *     y: number\n *   },\n *   laserHitReg: Array<{\n *     x: number,\n *     y: number,\n *     length: number,\n *     delay: number,\n *     direction: 'top'|'left'|'right'|'bottom'\n *   }>,\n *   ennemies: Array<{\n *     x: number,\n *     y: number,\n *     speed: number\n *   }>,\n *   collectables: Array<{\n *     x: number,\n *     y: number\n *   }>\n * }} dynamicObjectsMap\n */\n","export default \"8,8,8,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,18,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,9,-1,0,2,-1,-1,-1,-1,-1,-1,7,4,16,-1,-1,-1,14,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,4,5,5,6,8,18,19,20,18,19,19,19,19,19,19,20,9,-1,-1,-1,-1,-1,7,8,4,15,6,8,8,8,8,8,4,5,5,5,5,5,5,5,5,5,6\\n8,4,5,5,5,16,-1,-1,14,5,5,5,6,8,8,8,8,8,8,8,8,18,2,-1,-1,-1,0,20,4,16,-1,14,5,5,5,5,5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,5,5,5,5,5,5,5,5,15,16,-1,-1,-1,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13\\n8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,20\\n8,9,-1,-1,-1,-1,0,19,19,19,19,19,19,2,-1,-1,-1,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,8,8,8,8,8,8,8,8,8,8,8,8\\n8,18,1,1,1,1,20,8,8,8,8,8,8,9,-1,-1,-1,-1,-1,-1,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n8,8,8,8,8,8,8,8,8,8,8,8,8,18,19,19,19,19,19,19,20,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8\\n\";","import GameScene from \"root/Scenes/GameScene\";\nimport MapRegistry from \"root/MapRegistry\";\n\nexport default class Level1 extends GameScene {\n\n  constructor() {\n    super(MapRegistry.level1);\n  }\n}\n","export default __webpack_public_path__ + \"images/9703cb95d0ea129f569e26e4a3fc1dd7.png\";","import moonTileset from 'assets/tilesets/moon.png';\nimport earthTileset from 'assets/tilesets/earth.png';\nimport tilesetimg from 'assets/tilesets/interface32x.png';\nimport player from 'assets/player/Player1.png';\nimport playerOldFrame from 'assets/player/Player1-old.png';\nimport tilecoin from 'assets/tilesets/goldCoin1.png';\nimport laser from 'assets/tilesets/laser.png';\nimport laserShooter from 'assets/tilesets/laser-shooter.png';\n\nconst assetsToLoad = [\n  moonTileset,\n  tilesetimg,\n  earthTileset,\n  player,\n  tilecoin,\n  playerOldFrame,\n  laser,\n  laserShooter\n]\n\nexport default function loader(pixiLoader, cb) {\n  let l = pixiLoader;\n  for (const item of assetsToLoad) {\n    l = l.add(item);\n  }\n  l.load(cb);\n}\n","import * as PIXIimport from 'pixi.js';\n\nexport default class Button extends PIXIimport.Container {\n  onClick = undefined;\n\n  _container = new PIXI.Container();\n  _textStyle = new PIXI.TextStyle({\n    fontFamily: 'Londrina Solid',\n    fontSize: 45,\n    fill: '0xfff'\n  });\n  _text = new PIXI.Text('', this._textStyle);\n  _textMectric;\n  _background = new PIXI.Graphics();\n  _padding = {\n    x: 90,\n    y: 10\n  }\n\n  constructor(text) {\n    super();\n    this.text = text;\n    this._container.addChild(this._background);\n    this._container.addChild(this._text);\n    this._background.interactive = true;\n    this._background.on('mouseover', this._onHover.bind(this));\n    this._background.on('mouseout', this._onHoverEnd.bind(this));\n    this._background.on('click', this._onClick.bind(this));\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n    this.addChild(this._container);\n  }\n\n  get text() {\n    return this._text.text;\n  }\n\n  set text(val) {\n    this._textMectric = PIXI.TextMetrics.measureText(val, this._textStyle);\n    this._drawBackground();\n    this._text.text = val;\n  }\n\n  _drawBackground() {\n    const width = this._textMectric.width + this._padding.x * 2;\n    const height = this._textMectric.height + this._padding.y * 2;\n    const getRandomInt = (padding) => {\n      padding /= 2;\n      return Math.floor(Math.random() * Math.floor(padding));\n    }\n\n    // Setting text position\n    this._text.x = this._padding.x;\n    this._text.y = this._padding.y;\n\n    // Generating offsets of the borders\n    const offsets = [\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      },\n      {\n        x: getRandomInt(this._padding.x),\n        y: getRandomInt(this._padding.y)\n      }\n    ]\n\n    // Draw\n    this._background.clear();\n    this._background.beginFill(0x3E83C1);\n    this._background.drawPolygon([\n      new PIXI.Point(offsets[0].x, offsets[0].y),\n      new PIXI.Point(width - offsets[1].x, offsets[1].y),\n      new PIXI.Point(width - offsets[2].x, height - offsets[2].y),\n      new PIXI.Point(offsets[3].x, height - offsets[3].y),\n    ]);\n    this._background.endFill();\n  }\n\n  _onHover() {\n    this._container.x = 0;\n    this._container.y = 0;\n    this._container.scale.set(1);\n  }\n\n  _onHoverEnd() {\n    this._container.x = this._container.width / 20;\n    this._container.y = this._container.height / 20;\n    this._container.scale.set(0.9);\n  }\n\n  _onClick() {\n    if (typeof this.onClick === 'function')\n      this.onClick();\n  }\n\n\n}\n","import Scene from \"root/Scenes/Scene\";\nimport Button from \"root/ui/Button\";\nimport Game from \"root/main\";\n\nexport default class MainMenu extends Scene {\n\n  startButton;\n  creditsButton;\n  howToPlay;\n\n  constructor() {\n    super();\n    this.startButton = new Button('Play');\n    this.startButton.x = Game.app.screen.width / 2 - this.startButton.width / 2;\n    this.startButton.y = Game.app.screen.height / 2 - 100;\n    this.startButton.onClick = this.startGame.bind(this);\n\n    this.howToPlay = new Button('How to play ?');\n    this.howToPlay.x = Game.app.screen.width / 2 - this.howToPlay.width / 2;\n    this.howToPlay.y = Game.app.screen.height / 2;\n\n    this.creditsButton = new Button('Credits');\n    this.creditsButton.x = Game.app.screen.width / 2 - this.creditsButton.width / 2;\n    this.creditsButton.y = Game.app.screen.height / 2 + 100;\n\n\n    this.sceneContainer.addChild(this.startButton);\n    this.sceneContainer.addChild(this.howToPlay);\n    this.sceneContainer.addChild(this.creditsButton);\n  }\n\n  startGame() {\n    Game.sceneManager.activeScene = 'level1';\n  }\n\n\n  update(delta) {\n    super.update(delta);\n\n  }\n\n}\n","import Game from './main';\nimport './index.css';\n\n(function index() {\n  WebFont.load({\n    google: {\n      families: ['Londrina Solid']\n    },\n    active: () => {\n      new Game();\n    }\n  })\n})();\n\n"],"sourceRoot":""}